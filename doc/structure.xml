<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="EpiceNote">
  <file path="action/event.php" hash="cc82451e0311fd86789a74a28dfae461" package="Default">
    <function namespace="global" line="3" package="Default">
      <name>event_index</name>
      <full_name>\event_index</full_name>
    </function>
    <function namespace="global" line="14" package="Default">
      <name>event_view</name>
      <full_name>\event_view</full_name>
    </function>
    <function namespace="global" line="44" package="Default">
      <name>event_addsection</name>
      <full_name>\event_addsection</full_name>
    </function>
    <function namespace="global" line="55" package="Default">
      <name>event_delsection</name>
      <full_name>\event_delsection</full_name>
    </function>
    <function namespace="global" line="66" package="Default">
      <name>event_staff</name>
      <full_name>\event_staff</full_name>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file action/event.php</error>
      <error line="3" code="50009">No DocBlock was found for function \event_index()</error>
      <error line="14" code="50009">No DocBlock was found for function \event_view()</error>
      <error line="44" code="50009">No DocBlock was found for function \event_addsection()</error>
      <error line="55" code="50009">No DocBlock was found for function \event_delsection()</error>
      <error line="66" code="50009">No DocBlock was found for function \event_staff()</error>
    </parse_markers>
  </file>
  <file path="action/index.php" hash="cb8bb020f2e939fd1f46fd6fc97b4b30" package="Default">
    <function namespace="global" line="7" package="Default">
      <name>index_index</name>
      <full_name>\index_index</full_name>
      <docblock line="3">
        <description>Petite page de pr√©sentation du projet</description>
        <long-description/>
        <tag line="3" name="global" description="type $tpl"/>
      </docblock>
    </function>
    <function namespace="global" line="19" package="Default">
      <name>index_login</name>
      <full_name>\index_login</full_name>
      <docblock line="14">
        <description>Permet de connecter un utilisateur</description>
        <long-description/>
        <tag line="14" name="global" description="type $tpl"/>
        <tag line="14" name="global" description="type $pdo"/>
      </docblock>
    </function>
    <function namespace="global" line="56" package="Default">
      <name>index_logout</name>
      <full_name>\index_logout</full_name>
      <docblock line="52">
        <description>Ferme une session utilisateur</description>
        <long-description/>
        <tag line="52" name="global" description="type $tpl"/>
      </docblock>
    </function>
    <function namespace="global" line="63" package="Default">
      <name>index_create</name>
      <full_name>\index_create</full_name>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file action/index.php</error>
      <error line="63" code="50009">No DocBlock was found for function \index_create()</error>
    </parse_markers>
  </file>
  <file path="action/user.php" hash="c461668557bdaa38bd61933db262a19d" package="Default">
    <function namespace="global" line="3" package="Default">
      <name>user_index</name>
      <full_name>\user_index</full_name>
    </function>
    <function namespace="global" line="12" package="Default">
      <name>user_add</name>
      <full_name>\user_add</full_name>
    </function>
    <function namespace="global" line="36" package="Default">
      <name>user_delete</name>
      <full_name>\user_delete</full_name>
    </function>
    <function namespace="global" line="47" package="Default">
      <name>user_view</name>
      <full_name>\user_view</full_name>
    </function>
    <function namespace="global" line="75" package="Default">
      <name>user_invit_section</name>
      <full_name>\user_invit_section</full_name>
    </function>
    <function namespace="global" line="85" package="Default">
      <name>user_quit</name>
      <full_name>\user_quit</full_name>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file action/user.php</error>
      <error line="3" code="50009">No DocBlock was found for function \user_index()</error>
      <error line="12" code="50009">No DocBlock was found for function \user_add()</error>
      <error line="36" code="50009">No DocBlock was found for function \user_delete()</error>
      <error line="47" code="50009">No DocBlock was found for function \user_view()</error>
      <error line="75" code="50009">No DocBlock was found for function \user_invit_section()</error>
      <error line="85" code="50009">No DocBlock was found for function \user_quit()</error>
    </parse_markers>
  </file>
  <file path="action/ecole.php" hash="8676e27eaf3cdc1351a444021b579c09" package="Default">
    <function namespace="global" line="3" package="Default">
      <name>ecole_index</name>
      <full_name>\ecole_index</full_name>
    </function>
    <function namespace="global" line="13" package="Default">
      <name>ecole_add</name>
      <full_name>\ecole_add</full_name>
    </function>
    <function namespace="global" line="34" package="Default">
      <name>ecole_delete</name>
      <full_name>\ecole_delete</full_name>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file action/ecole.php</error>
      <error line="3" code="50009">No DocBlock was found for function \ecole_index()</error>
      <error line="13" code="50009">No DocBlock was found for function \ecole_add()</error>
      <error line="34" code="50009">No DocBlock was found for function \ecole_delete()</error>
    </parse_markers>
  </file>
  <file path="action/admin.php" hash="6b85aefddd2f9bf29728931003f5fd26" package="Default">
    <function namespace="global" line="3" package="Default">
      <name>admin_index</name>
      <full_name>\admin_index</full_name>
    </function>
    <function namespace="global" line="16" package="Default">
      <name>admin_update</name>
      <full_name>\admin_update</full_name>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file action/admin.php</error>
      <error line="3" code="50009">No DocBlock was found for function \admin_index()</error>
      <error line="16" code="50009">No DocBlock was found for function \admin_update()</error>
    </parse_markers>
  </file>
  <file path="action/section.php" hash="f09591c4a013d9af9145ebaea6211bd1" package="Default">
    <function namespace="global" line="3" package="Default">
      <name>section_mkevent</name>
      <full_name>\section_mkevent</full_name>
    </function>
    <function namespace="global" line="42" package="Default">
      <name>section_index</name>
      <full_name>\section_index</full_name>
    </function>
    <function namespace="global" line="64" package="Default">
      <name>section_add</name>
      <full_name>\section_add</full_name>
    </function>
    <function namespace="global" line="85" package="Default">
      <name>section_delete</name>
      <full_name>\section_delete</full_name>
    </function>
    <function namespace="global" line="96" package="Default">
      <name>section_details</name>
      <full_name>\section_details</full_name>
    </function>
    <function namespace="global" line="133" package="Default">
      <name>section_goin</name>
      <full_name>\section_goin</full_name>
    </function>
    <function namespace="global" line="143" package="Default">
      <name>section_goout</name>
      <full_name>\section_goout</full_name>
    </function>
    <function namespace="global" line="157" package="Default">
      <name>section_accept</name>
      <full_name>\section_accept</full_name>
      <docblock line="153">
        <description>Ho Oui ! Un staff</description>
        <long-description/>
        <tag line="153" name="global" description="type $pdo"/>
      </docblock>
    </function>
    <function namespace="global" line="172" package="Default">
      <name>section_reject</name>
      <full_name>\section_reject</full_name>
      <docblock line="168">
        <description>Bye le membre .</description>
        <long-description>&lt;p&gt;..&lt;/p&gt;</long-description>
        <tag line="168" name="global" description="type $pdo"/>
      </docblock>
    </function>
    <function namespace="global" line="187" package="Default">
      <name>section_manager</name>
      <full_name>\section_manager</full_name>
      <docblock line="183">
        <description>Promotion manager</description>
        <long-description/>
        <tag line="183" name="global" description="type $pdo"/>
      </docblock>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file action/section.php</error>
      <error line="3" code="50009">No DocBlock was found for function \section_mkevent()</error>
      <error line="42" code="50009">No DocBlock was found for function \section_index()</error>
      <error line="64" code="50009">No DocBlock was found for function \section_add()</error>
      <error line="85" code="50009">No DocBlock was found for function \section_delete()</error>
      <error line="96" code="50009">No DocBlock was found for function \section_details()</error>
      <error line="133" code="50009">No DocBlock was found for function \section_goin()</error>
      <error line="143" code="50009">No DocBlock was found for function \section_goout()</error>
    </parse_markers>
  </file>
  <file path="action/syscore.php" hash="31c2473e38eba3a14f8f2ea95f43ed6d" package="Default">
    <function namespace="global" line="8" package="Default">
      <name>syscore_autoload</name>
      <full_name>\syscore_autoload</full_name>
      <argument line="8">
        <name>$page</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file action/syscore.php</error>
      <error line="8" code="50009">No DocBlock was found for function \syscore_autoload()</error>
    </parse_markers>
  </file>
  <file path="config.php" hash="07955a14b2f3a1bfc025ce8fd70e9fa0" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file config.php</error>
    </parse_markers>
  </file>
  <file path="index.php" hash="e08f8e94b1476a4eafce5447f480d9b4" package="FrameTool">
    <docblock line="3">
      <description>Page de d√©parrage du framework</description>
      <long-description/>
      <tag line="3" name="package" description="FrameTool"/>
    </docblock>
    <include line="24" type="Require" package="Default">
      <name>config.php</name>
    </include>
    <include line="25" type="Require" package="Default">
      <name/>
    </include>
    <include line="31" type="Include" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="11" package="FrameTool">
      <name>NPE_INDEX</name>
      <full_name>\NPE_INDEX</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="16" package="FrameTool">
      <name>DS</name>
      <full_name>\DS</full_name>
      <value>DIRECTORY_SEPARATOR</value>
    </constant>
  </file>
  <file path="ticketgen/gen.php" hash="956146b5a3d1ed4bfe37b69811c8e849" package="ticketgen">
    <docblock line="3">
      <description>Fichier de la biblioth√®que ticketgen</description>
      <long-description/>
      <tag line="3" name="package" description="ticketgen"/>
    </docblock>
    <include line="11" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="12" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="13" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="27" type="Require" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="10" package="ticketgen">
      <name>FPDF_FONTPATH</name>
      <full_name>\FPDF_FONTPATH</full_name>
      <value>$genRoot . 'fonts/'</value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="15" package="Default">
      <extends/>
      <name>TicketGen</name>
      <full_name>\TicketGen</full_name>
      <property final="false" static="false" visibility="private" line="17" namespace="global" package="Default">
        <name>$conf</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="18" namespace="global" package="Default">
        <name>$img</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="19" namespace="global" package="Default">
        <name>$pdf</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="21">
          <name>$config</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="25" package="Default">
        <name>reload_conf</name>
        <full_name>reload_conf</full_name>
        <argument line="25">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="34" package="Default">
        <name>getimg</name>
        <full_name>getimg</full_name>
        <argument line="34">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="48" package="Default">
        <name>colordecode</name>
        <full_name>colordecode</full_name>
        <argument line="48">
          <name>$color</name>
          <default/>
          <type/>
        </argument>
        <argument line="48">
          <name>$result</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="57" package="Default">
        <name>addtext</name>
        <full_name>addtext</full_name>
        <argument line="57">
          <name>$tconf</name>
          <default/>
          <type/>
        </argument>
        <argument line="57">
          <name>$txt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="78" package="Default">
        <name>addblank</name>
        <full_name>addblank</full_name>
        <argument line="78">
          <name>$tconf</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="Default">
        <name>mkticket</name>
        <full_name>mkticket</full_name>
        <argument line="97">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="124" package="Default">
        <name>display</name>
        <full_name>display</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="Default">
        <name>writeto</name>
        <full_name>writeto</full_name>
        <argument line="130">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="135" package="Default">
        <name>addptext</name>
        <full_name>addptext</full_name>
        <argument line="135">
          <name>$styleconf</name>
          <default/>
          <type/>
        </argument>
        <argument line="135">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
        <argument line="135">
          <name>$posx</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="135">
          <name>$posy</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="Default">
        <name>mkpdf</name>
        <full_name>mkpdf</full_name>
        <argument line="170">
          <name>$out</name>
          <default>'I'</default>
          <type/>
        </argument>
        <argument line="170">
          <name>$pdffile</name>
          <default>'prevente.pdf'</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="15" code="50000">No DocBlock was found for \TicketGen</error>
      <error line="17" code="50018">No DocBlock was found for property $conf</error>
      <error line="18" code="50018">No DocBlock was found for property $img</error>
      <error line="19" code="50018">No DocBlock was found for property $pdf</error>
      <error line="21" code="50010">No DocBlock was found for method __construct()</error>
      <error line="25" code="50010">No DocBlock was found for method reload_conf()</error>
      <error line="34" code="50010">No DocBlock was found for method getimg()</error>
      <error line="48" code="50010">No DocBlock was found for method colordecode()</error>
      <error line="57" code="50010">No DocBlock was found for method addtext()</error>
      <error line="78" code="50010">No DocBlock was found for method addblank()</error>
      <error line="97" code="50010">No DocBlock was found for method mkticket()</error>
      <error line="124" code="50010">No DocBlock was found for method display()</error>
      <error line="130" code="50010">No DocBlock was found for method writeto()</error>
      <error line="135" code="50010">No DocBlock was found for method addptext()</error>
      <error line="170" code="50010">No DocBlock was found for method mkpdf()</error>
    </parse_markers>
  </file>
  <file path="ticketgen/makefont/ttfparser.php" hash="3bcfe4137e9c768789ad26d297ed9a08" package="Default">
    <class final="false" abstract="false" namespace="global" line="14" package="makefont\ttfparser">
      <extends/>
      <name>TTFParser</name>
      <full_name>\TTFParser</full_name>
      <docblock line="2">
        <description>Makefont ttf parser</description>
        <long-description/>
        <tag line="2" name="package" description="makefont_ttfparser"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="16" namespace="global" package="Default">
        <name>$f</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$tables</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$unitsPerEm</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$xMin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$yMin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$xMax</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$yMax</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$numberOfHMetrics</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$numGlyphs</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$widths</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$chars</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$postScriptName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$Embeddable</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$Bold</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$typoAscender</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$typoDescender</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$capHeight</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$italicAngle</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$underlinePosition</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$underlineThickness</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$isFixedPitch</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="makefont\ttfparser">
        <name>Parse</name>
        <full_name>Parse</full_name>
        <argument line="35">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="makefont\ttfparser">
        <name>ParseHead</name>
        <full_name>ParseHead</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="86" package="makefont\ttfparser">
        <name>ParseHhea</name>
        <full_name>ParseHhea</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="makefont\ttfparser">
        <name>ParseMaxp</name>
        <full_name>ParseMaxp</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="makefont\ttfparser">
        <name>ParseHmtx</name>
        <full_name>ParseHmtx</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="makefont\ttfparser">
        <name>ParseCmap</name>
        <full_name>ParseCmap</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="makefont\ttfparser">
        <name>ParseName</name>
        <full_name>ParseName</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="214" package="makefont\ttfparser">
        <name>ParseOS2</name>
        <full_name>ParseOS2</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="236" package="makefont\ttfparser">
        <name>ParsePost</name>
        <full_name>ParsePost</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="247" package="makefont\ttfparser">
        <name>Error</name>
        <full_name>Error</full_name>
        <argument line="247">
          <name>$msg</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="255" package="makefont\ttfparser">
        <name>Seek</name>
        <full_name>Seek</full_name>
        <argument line="255">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="262" package="makefont\ttfparser">
        <name>Skip</name>
        <full_name>Skip</full_name>
        <argument line="262">
          <name>$n</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="267" package="makefont\ttfparser">
        <name>Read</name>
        <full_name>Read</full_name>
        <argument line="267">
          <name>$n</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="272" package="makefont\ttfparser">
        <name>ReadUShort</name>
        <full_name>ReadUShort</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="278" package="makefont\ttfparser">
        <name>ReadShort</name>
        <full_name>ReadShort</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="287" package="makefont\ttfparser">
        <name>ReadULong</name>
        <full_name>ReadULong</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file ticketgen/makefont/ttfparser.php</error>
      <error line="16" code="50018">No DocBlock was found for property $f</error>
      <error line="17" code="50018">No DocBlock was found for property $tables</error>
      <error line="18" code="50018">No DocBlock was found for property $unitsPerEm</error>
      <error line="19" code="50018">No DocBlock was found for property $xMin</error>
      <error line="19" code="50018">No DocBlock was found for property $yMin</error>
      <error line="19" code="50018">No DocBlock was found for property $xMax</error>
      <error line="19" code="50018">No DocBlock was found for property $yMax</error>
      <error line="20" code="50018">No DocBlock was found for property $numberOfHMetrics</error>
      <error line="21" code="50018">No DocBlock was found for property $numGlyphs</error>
      <error line="22" code="50018">No DocBlock was found for property $widths</error>
      <error line="23" code="50018">No DocBlock was found for property $chars</error>
      <error line="24" code="50018">No DocBlock was found for property $postScriptName</error>
      <error line="25" code="50018">No DocBlock was found for property $Embeddable</error>
      <error line="26" code="50018">No DocBlock was found for property $Bold</error>
      <error line="27" code="50018">No DocBlock was found for property $typoAscender</error>
      <error line="28" code="50018">No DocBlock was found for property $typoDescender</error>
      <error line="29" code="50018">No DocBlock was found for property $capHeight</error>
      <error line="30" code="50018">No DocBlock was found for property $italicAngle</error>
      <error line="31" code="50018">No DocBlock was found for property $underlinePosition</error>
      <error line="32" code="50018">No DocBlock was found for property $underlineThickness</error>
      <error line="33" code="50018">No DocBlock was found for property $isFixedPitch</error>
      <error line="35" code="50010">No DocBlock was found for method Parse()</error>
      <error line="70" code="50010">No DocBlock was found for method ParseHead()</error>
      <error line="86" code="50010">No DocBlock was found for method ParseHhea()</error>
      <error line="93" code="50010">No DocBlock was found for method ParseMaxp()</error>
      <error line="100" code="50010">No DocBlock was found for method ParseHmtx()</error>
      <error line="117" code="50010">No DocBlock was found for method ParseCmap()</error>
      <error line="185" code="50010">No DocBlock was found for method ParseName()</error>
      <error line="214" code="50010">No DocBlock was found for method ParseOS2()</error>
      <error line="236" code="50010">No DocBlock was found for method ParsePost()</error>
      <error line="247" code="50010">No DocBlock was found for method Error()</error>
      <error line="255" code="50010">No DocBlock was found for method Seek()</error>
      <error line="262" code="50010">No DocBlock was found for method Skip()</error>
      <error line="267" code="50010">No DocBlock was found for method Read()</error>
      <error line="272" code="50010">No DocBlock was found for method ReadUShort()</error>
      <error line="278" code="50010">No DocBlock was found for method ReadShort()</error>
      <error line="287" code="50010">No DocBlock was found for method ReadULong()</error>
    </parse_markers>
  </file>
  <file path="ticketgen/makefont/makefont.php" hash="cbbdaa9ee3c4430ab9a3296f0e42c947" package="makefont">
    <docblock line="2">
      <description>Makefont</description>
      <long-description/>
      <tag line="2" name="package" description="makefont"/>
    </docblock>
    <include line="14" type="Require" package="Default">
      <name>ttfparser.php</name>
    </include>
    <function namespace="global" line="16" package="makefont">
      <name>Message</name>
      <full_name>\Message</full_name>
      <argument line="16">
        <name>$txt</name>
        <default/>
        <type/>
      </argument>
      <argument line="16">
        <name>$severity</name>
        <default>''</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="32" package="makefont">
      <name>Notice</name>
      <full_name>\Notice</full_name>
      <argument line="32">
        <name>$txt</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="37" package="makefont">
      <name>Warning</name>
      <full_name>\Warning</full_name>
      <argument line="37">
        <name>$txt</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="42" package="makefont">
      <name>Error</name>
      <full_name>\Error</full_name>
      <argument line="42">
        <name>$txt</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="48" package="makefont">
      <name>LoadMap</name>
      <full_name>\LoadMap</full_name>
      <argument line="48">
        <name>$enc</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="66" package="makefont">
      <name>GetInfoFromTrueType</name>
      <full_name>\GetInfoFromTrueType</full_name>
      <argument line="66">
        <name>$file</name>
        <default/>
        <type/>
      </argument>
      <argument line="66">
        <name>$embed</name>
        <default/>
        <type/>
      </argument>
      <argument line="66">
        <name>$map</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="109" package="makefont">
      <name>GetInfoFromType1</name>
      <full_name>\GetInfoFromType1</full_name>
      <argument line="109">
        <name>$file</name>
        <default/>
        <type/>
      </argument>
      <argument line="109">
        <name>$embed</name>
        <default/>
        <type/>
      </argument>
      <argument line="109">
        <name>$map</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="200" package="makefont">
      <name>MakeFontDescriptor</name>
      <full_name>\MakeFontDescriptor</full_name>
      <argument line="200">
        <name>$info</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="237" package="makefont">
      <name>MakeWidthArray</name>
      <full_name>\MakeWidthArray</full_name>
      <argument line="237">
        <name>$widths</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="260" package="makefont">
      <name>MakeFontEncoding</name>
      <full_name>\MakeFontEncoding</full_name>
      <argument line="260">
        <name>$map</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="279" package="makefont">
      <name>SaveToFile</name>
      <full_name>\SaveToFile</full_name>
      <argument line="279">
        <name>$file</name>
        <default/>
        <type/>
      </argument>
      <argument line="279">
        <name>$s</name>
        <default/>
        <type/>
      </argument>
      <argument line="279">
        <name>$mode</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="288" package="makefont">
      <name>MakeDefinitionFile</name>
      <full_name>\MakeDefinitionFile</full_name>
      <argument line="288">
        <name>$file</name>
        <default/>
        <type/>
      </argument>
      <argument line="288">
        <name>$type</name>
        <default/>
        <type/>
      </argument>
      <argument line="288">
        <name>$enc</name>
        <default/>
        <type/>
      </argument>
      <argument line="288">
        <name>$embed</name>
        <default/>
        <type/>
      </argument>
      <argument line="288">
        <name>$map</name>
        <default/>
        <type/>
      </argument>
      <argument line="288">
        <name>$info</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="316" package="makefont">
      <name>MakeFont</name>
      <full_name>\MakeFont</full_name>
      <argument line="316">
        <name>$fontfile</name>
        <default/>
        <type/>
      </argument>
      <argument line="316">
        <name>$enc</name>
        <default>'cp1252'</default>
        <type/>
      </argument>
      <argument line="316">
        <name>$embed</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="16" code="50009">No DocBlock was found for function \Message()</error>
      <error line="32" code="50009">No DocBlock was found for function \Notice()</error>
      <error line="37" code="50009">No DocBlock was found for function \Warning()</error>
      <error line="42" code="50009">No DocBlock was found for function \Error()</error>
      <error line="48" code="50009">No DocBlock was found for function \LoadMap()</error>
      <error line="66" code="50009">No DocBlock was found for function \GetInfoFromTrueType()</error>
      <error line="109" code="50009">No DocBlock was found for function \GetInfoFromType1()</error>
      <error line="200" code="50009">No DocBlock was found for function \MakeFontDescriptor()</error>
      <error line="237" code="50009">No DocBlock was found for function \MakeWidthArray()</error>
      <error line="260" code="50009">No DocBlock was found for function \MakeFontEncoding()</error>
      <error line="279" code="50009">No DocBlock was found for function \SaveToFile()</error>
      <error line="288" code="50009">No DocBlock was found for function \MakeDefinitionFile()</error>
      <error line="316" code="50009">No DocBlock was found for function \MakeFont()</error>
    </parse_markers>
  </file>
  <file path="ticketgen/config.php" hash="8d0b983010dd8fee82297589fdaa51da" package="ticketgen">
    <docblock line="3">
      <description>Fichier de la biblioth√®que ticketgen</description>
      <long-description/>
      <tag line="3" name="package" description="ticketgen"/>
    </docblock>
  </file>
  <file path="ticketgen/fpdf.php" hash="f677c92ea9042a011fb806f8d0e98447" package="FPDF">
    <docblock line="10">
      <description>Fichier de la biblioth√®que fpdf</description>
      <long-description/>
      <tag line="10" name="package" description="FPDF"/>
    </docblock>
    <include line="1153" type="Include" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="18" package="FPDF">
      <name>FPDF_VERSION</name>
      <full_name>\FPDF_VERSION</full_name>
      <value>'1.7'</value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="20" package="Default">
      <extends/>
      <name>FPDF</name>
      <full_name>\FPDF</full_name>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$page</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$n</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$offsets</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$buffer</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$pages</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$state</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$compress</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$k</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$DefOrientation</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$CurOrientation</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$StdPageSizes</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$DefPageSize</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="34" namespace="global" package="Default">
        <name>$CurPageSize</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="35" namespace="global" package="Default">
        <name>$PageSizes</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="36" namespace="global" package="Default">
        <name>$wPt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="36" namespace="global" package="Default">
        <name>$hPt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$w</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$h</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="global" package="Default">
        <name>$lMargin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="39" namespace="global" package="Default">
        <name>$tMargin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$rMargin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="41" namespace="global" package="Default">
        <name>$bMargin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="42" namespace="global" package="Default">
        <name>$cMargin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="global" package="Default">
        <name>$x</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="global" package="Default">
        <name>$y</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="44" namespace="global" package="Default">
        <name>$lasth</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$LineWidth</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="46" namespace="global" package="Default">
        <name>$fontpath</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="47" namespace="global" package="Default">
        <name>$CoreFonts</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="48" namespace="global" package="Default">
        <name>$fonts</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="49" namespace="global" package="Default">
        <name>$FontFiles</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="50" namespace="global" package="Default">
        <name>$diffs</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="51" namespace="global" package="Default">
        <name>$FontFamily</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="52" namespace="global" package="Default">
        <name>$FontStyle</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="53" namespace="global" package="Default">
        <name>$underline</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="54" namespace="global" package="Default">
        <name>$CurrentFont</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="55" namespace="global" package="Default">
        <name>$FontSizePt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="56" namespace="global" package="Default">
        <name>$FontSize</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="57" namespace="global" package="Default">
        <name>$DrawColor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="58" namespace="global" package="Default">
        <name>$FillColor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="59" namespace="global" package="Default">
        <name>$TextColor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="60" namespace="global" package="Default">
        <name>$ColorFlag</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="61" namespace="global" package="Default">
        <name>$ws</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="62" namespace="global" package="Default">
        <name>$images</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="63" namespace="global" package="Default">
        <name>$PageLinks</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="64" namespace="global" package="Default">
        <name>$links</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="65" namespace="global" package="Default">
        <name>$AutoPageBreak</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="66" namespace="global" package="Default">
        <name>$PageBreakTrigger</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="67" namespace="global" package="Default">
        <name>$InHeader</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="68" namespace="global" package="Default">
        <name>$InFooter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="69" namespace="global" package="Default">
        <name>$ZoomMode</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="70" namespace="global" package="Default">
        <name>$LayoutMode</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="71" namespace="global" package="Default">
        <name>$title</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="72" namespace="global" package="Default">
        <name>$subject</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="73" namespace="global" package="Default">
        <name>$author</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="74" namespace="global" package="Default">
        <name>$keywords</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="75" namespace="global" package="Default">
        <name>$creator</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="76" namespace="global" package="Default">
        <name>$AliasNbPages</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="77" namespace="global" package="Default">
        <name>$PDFVersion</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="Default">
        <name>FPDF</name>
        <full_name>FPDF</full_name>
        <argument line="84">
          <name>$orientation</name>
          <default>'P'</default>
          <type/>
        </argument>
        <argument line="84">
          <name>$unit</name>
          <default>'mm'</default>
          <type/>
        </argument>
        <argument line="84">
          <name>$size</name>
          <default>'A4'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="Default">
        <name>SetMargins</name>
        <full_name>SetMargins</full_name>
        <argument line="178">
          <name>$left</name>
          <default/>
          <type/>
        </argument>
        <argument line="178">
          <name>$top</name>
          <default/>
          <type/>
        </argument>
        <argument line="178">
          <name>$right</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="Default">
        <name>SetLeftMargin</name>
        <full_name>SetLeftMargin</full_name>
        <argument line="188">
          <name>$margin</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="196" package="Default">
        <name>SetTopMargin</name>
        <full_name>SetTopMargin</full_name>
        <argument line="196">
          <name>$margin</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="202" package="Default">
        <name>SetRightMargin</name>
        <full_name>SetRightMargin</full_name>
        <argument line="202">
          <name>$margin</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="208" package="Default">
        <name>SetAutoPageBreak</name>
        <full_name>SetAutoPageBreak</full_name>
        <argument line="208">
          <name>$auto</name>
          <default/>
          <type/>
        </argument>
        <argument line="208">
          <name>$margin</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="216" package="Default">
        <name>SetDisplayMode</name>
        <full_name>SetDisplayMode</full_name>
        <argument line="216">
          <name>$zoom</name>
          <default/>
          <type/>
        </argument>
        <argument line="216">
          <name>$layout</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="229" package="Default">
        <name>SetCompression</name>
        <full_name>SetCompression</full_name>
        <argument line="229">
          <name>$compress</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="Default">
        <name>SetTitle</name>
        <full_name>SetTitle</full_name>
        <argument line="238">
          <name>$title</name>
          <default/>
          <type/>
        </argument>
        <argument line="238">
          <name>$isUTF8</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="246" package="Default">
        <name>SetSubject</name>
        <full_name>SetSubject</full_name>
        <argument line="246">
          <name>$subject</name>
          <default/>
          <type/>
        </argument>
        <argument line="246">
          <name>$isUTF8</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="254" package="Default">
        <name>SetAuthor</name>
        <full_name>SetAuthor</full_name>
        <argument line="254">
          <name>$author</name>
          <default/>
          <type/>
        </argument>
        <argument line="254">
          <name>$isUTF8</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="262" package="Default">
        <name>SetKeywords</name>
        <full_name>SetKeywords</full_name>
        <argument line="262">
          <name>$keywords</name>
          <default/>
          <type/>
        </argument>
        <argument line="262">
          <name>$isUTF8</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="270" package="Default">
        <name>SetCreator</name>
        <full_name>SetCreator</full_name>
        <argument line="270">
          <name>$creator</name>
          <default/>
          <type/>
        </argument>
        <argument line="270">
          <name>$isUTF8</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="278" package="Default">
        <name>AliasNbPages</name>
        <full_name>AliasNbPages</full_name>
        <argument line="278">
          <name>$alias</name>
          <default>'{nb}'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="284" package="Default">
        <name>Error</name>
        <full_name>Error</full_name>
        <argument line="284">
          <name>$msg</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="290" package="Default">
        <name>Open</name>
        <full_name>Open</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="296" package="Default">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="313" package="Default">
        <name>AddPage</name>
        <full_name>AddPage</full_name>
        <argument line="313">
          <name>$orientation</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="313">
          <name>$size</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="382" package="Default">
        <name>Header</name>
        <full_name>Header</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="387" package="Default">
        <name>Footer</name>
        <full_name>Footer</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="392" package="Default">
        <name>PageNo</name>
        <full_name>PageNo</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="398" package="Default">
        <name>SetDrawColor</name>
        <full_name>SetDrawColor</full_name>
        <argument line="398">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
        <argument line="398">
          <name>$g</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="398">
          <name>$b</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="409" package="Default">
        <name>SetFillColor</name>
        <full_name>SetFillColor</full_name>
        <argument line="409">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
        <argument line="409">
          <name>$g</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="409">
          <name>$b</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="421" package="Default">
        <name>SetTextColor</name>
        <full_name>SetTextColor</full_name>
        <argument line="421">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
        <argument line="421">
          <name>$g</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="421">
          <name>$b</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="431" package="Default">
        <name>GetStringWidth</name>
        <full_name>GetStringWidth</full_name>
        <argument line="431">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="443" package="Default">
        <name>SetLineWidth</name>
        <full_name>SetLineWidth</full_name>
        <argument line="443">
          <name>$width</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="451" package="Default">
        <name>Line</name>
        <full_name>Line</full_name>
        <argument line="451">
          <name>$x1</name>
          <default/>
          <type/>
        </argument>
        <argument line="451">
          <name>$y1</name>
          <default/>
          <type/>
        </argument>
        <argument line="451">
          <name>$x2</name>
          <default/>
          <type/>
        </argument>
        <argument line="451">
          <name>$y2</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="457" package="Default">
        <name>Rect</name>
        <full_name>Rect</full_name>
        <argument line="457">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
        <argument line="457">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
        <argument line="457">
          <name>$w</name>
          <default/>
          <type/>
        </argument>
        <argument line="457">
          <name>$h</name>
          <default/>
          <type/>
        </argument>
        <argument line="457">
          <name>$style</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="469" package="Default">
        <name>AddFont</name>
        <full_name>AddFont</full_name>
        <argument line="469">
          <name>$family</name>
          <default/>
          <type/>
        </argument>
        <argument line="469">
          <name>$style</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="469">
          <name>$file</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="505" package="Default">
        <name>SetFont</name>
        <full_name>SetFont</full_name>
        <argument line="505">
          <name>$family</name>
          <default/>
          <type/>
        </argument>
        <argument line="505">
          <name>$style</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="505">
          <name>$size</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="555" package="Default">
        <name>SetFontSize</name>
        <full_name>SetFontSize</full_name>
        <argument line="555">
          <name>$size</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="566" package="Default">
        <name>AddLink</name>
        <full_name>AddLink</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="574" package="Default">
        <name>SetLink</name>
        <full_name>SetLink</full_name>
        <argument line="574">
          <name>$link</name>
          <default/>
          <type/>
        </argument>
        <argument line="574">
          <name>$y</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="574">
          <name>$page</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="584" package="Default">
        <name>Link</name>
        <full_name>Link</full_name>
        <argument line="584">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
        <argument line="584">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
        <argument line="584">
          <name>$w</name>
          <default/>
          <type/>
        </argument>
        <argument line="584">
          <name>$h</name>
          <default/>
          <type/>
        </argument>
        <argument line="584">
          <name>$link</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="590" package="Default">
        <name>Text</name>
        <full_name>Text</full_name>
        <argument line="590">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
        <argument line="590">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
        <argument line="590">
          <name>$txt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="601" package="Default">
        <name>AcceptPageBreak</name>
        <full_name>AcceptPageBreak</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="607" package="Default">
        <name>Cell</name>
        <full_name>Cell</full_name>
        <argument line="607">
          <name>$w</name>
          <default/>
          <type/>
        </argument>
        <argument line="607">
          <name>$h</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="607">
          <name>$txt</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="607">
          <name>$border</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="607">
          <name>$ln</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="607">
          <name>$align</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="607">
          <name>$fill</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="607">
          <name>$link</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="686" package="Default">
        <name>MultiCell</name>
        <full_name>MultiCell</full_name>
        <argument line="686">
          <name>$w</name>
          <default/>
          <type/>
        </argument>
        <argument line="686">
          <name>$h</name>
          <default/>
          <type/>
        </argument>
        <argument line="686">
          <name>$txt</name>
          <default/>
          <type/>
        </argument>
        <argument line="686">
          <name>$border</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="686">
          <name>$align</name>
          <default>'J'</default>
          <type/>
        </argument>
        <argument line="686">
          <name>$fill</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="799" package="Default">
        <name>Write</name>
        <full_name>Write</full_name>
        <argument line="799">
          <name>$h</name>
          <default/>
          <type/>
        </argument>
        <argument line="799">
          <name>$txt</name>
          <default/>
          <type/>
        </argument>
        <argument line="799">
          <name>$link</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="880" package="Default">
        <name>Ln</name>
        <full_name>Ln</full_name>
        <argument line="880">
          <name>$h</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="890" package="Default">
        <name>Image</name>
        <full_name>Image</full_name>
        <argument line="890">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
        <argument line="890">
          <name>$x</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="890">
          <name>$y</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="890">
          <name>$w</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="890">
          <name>$h</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="890">
          <name>$type</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="890">
          <name>$link</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="953" package="Default">
        <name>GetX</name>
        <full_name>GetX</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="959" package="Default">
        <name>SetX</name>
        <full_name>SetX</full_name>
        <argument line="959">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="968" package="Default">
        <name>GetY</name>
        <full_name>GetY</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="974" package="Default">
        <name>SetY</name>
        <full_name>SetY</full_name>
        <argument line="974">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="984" package="Default">
        <name>SetXY</name>
        <full_name>SetXY</full_name>
        <argument line="984">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
        <argument line="984">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="991" package="Default">
        <name>Output</name>
        <full_name>Output</full_name>
        <argument line="991">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="991">
          <name>$dest</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1053" package="Default">
        <name>_dochecks</name>
        <full_name>_dochecks</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1066" package="Default">
        <name>_checkoutput</name>
        <full_name>_checkoutput</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1086" package="Default">
        <name>_getpagesize</name>
        <full_name>_getpagesize</full_name>
        <argument line="1086">
          <name>$size</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1105" package="Default">
        <name>_beginpage</name>
        <full_name>_beginpage</full_name>
        <argument line="1105">
          <name>$orientation</name>
          <default/>
          <type/>
        </argument>
        <argument line="1105">
          <name>$size</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1145" package="Default">
        <name>_endpage</name>
        <full_name>_endpage</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1150" package="Default">
        <name>_loadfont</name>
        <full_name>_loadfont</full_name>
        <argument line="1150">
          <name>$font</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1160" package="Default">
        <name>_escape</name>
        <full_name>_escape</full_name>
        <argument line="1160">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1170" package="Default">
        <name>_textstring</name>
        <full_name>_textstring</full_name>
        <argument line="1170">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1176" package="Default">
        <name>_UTF8toUTF16</name>
        <full_name>_UTF8toUTF16</full_name>
        <argument line="1176">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1209" package="Default">
        <name>_dounderline</name>
        <full_name>_dounderline</full_name>
        <argument line="1209">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
        <argument line="1209">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
        <argument line="1209">
          <name>$txt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1218" package="Default">
        <name>_parsejpg</name>
        <full_name>_parsejpg</full_name>
        <argument line="1218">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1237" package="Default">
        <name>_parsepng</name>
        <full_name>_parsepng</full_name>
        <argument line="1237">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1248" package="Default">
        <name>_parsepngstream</name>
        <full_name>_parsepngstream</full_name>
        <argument line="1248">
          <name>$f</name>
          <default/>
          <type/>
        </argument>
        <argument line="1248">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1373" package="Default">
        <name>_readstream</name>
        <full_name>_readstream</full_name>
        <argument line="1373">
          <name>$f</name>
          <default/>
          <type/>
        </argument>
        <argument line="1373">
          <name>$n</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1390" package="Default">
        <name>_readint</name>
        <full_name>_readint</full_name>
        <argument line="1390">
          <name>$f</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1397" package="Default">
        <name>_parsegif</name>
        <full_name>_parsegif</full_name>
        <argument line="1397">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1436" package="Default">
        <name>_newobj</name>
        <full_name>_newobj</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1444" package="Default">
        <name>_putstream</name>
        <full_name>_putstream</full_name>
        <argument line="1444">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1451" package="Default">
        <name>_out</name>
        <full_name>_out</full_name>
        <argument line="1451">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1460" package="Default">
        <name>_putpages</name>
        <full_name>_putpages</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1533" package="Default">
        <name>_putfonts</name>
        <full_name>_putfonts</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1627" package="Default">
        <name>_putimages</name>
        <full_name>_putimages</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1637" package="Default">
        <name>_putimage</name>
        <full_name>_putimage</full_name>
        <argument line="1637">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1689" package="Default">
        <name>_putxobjectdict</name>
        <full_name>_putxobjectdict</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1695" package="Default">
        <name>_putresourcedict</name>
        <full_name>_putresourcedict</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1707" package="Default">
        <name>_putresources</name>
        <full_name>_putresources</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1720" package="Default">
        <name>_putinfo</name>
        <full_name>_putinfo</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1736" package="Default">
        <name>_putcatalog</name>
        <full_name>_putcatalog</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1756" package="Default">
        <name>_putheader</name>
        <full_name>_putheader</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1761" package="Default">
        <name>_puttrailer</name>
        <full_name>_puttrailer</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1768" package="Default">
        <name>_enddoc</name>
        <full_name>_enddoc</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="20" code="50000">No DocBlock was found for \FPDF</error>
      <error line="22" code="50018">No DocBlock was found for property $page</error>
      <error line="23" code="50018">No DocBlock was found for property $n</error>
      <error line="24" code="50018">No DocBlock was found for property $offsets</error>
      <error line="25" code="50018">No DocBlock was found for property $buffer</error>
      <error line="26" code="50018">No DocBlock was found for property $pages</error>
      <error line="27" code="50018">No DocBlock was found for property $state</error>
      <error line="28" code="50018">No DocBlock was found for property $compress</error>
      <error line="29" code="50018">No DocBlock was found for property $k</error>
      <error line="30" code="50018">No DocBlock was found for property $DefOrientation</error>
      <error line="31" code="50018">No DocBlock was found for property $CurOrientation</error>
      <error line="32" code="50018">No DocBlock was found for property $StdPageSizes</error>
      <error line="33" code="50018">No DocBlock was found for property $DefPageSize</error>
      <error line="34" code="50018">No DocBlock was found for property $CurPageSize</error>
      <error line="35" code="50018">No DocBlock was found for property $PageSizes</error>
      <error line="36" code="50018">No DocBlock was found for property $wPt</error>
      <error line="36" code="50018">No DocBlock was found for property $hPt</error>
      <error line="37" code="50018">No DocBlock was found for property $w</error>
      <error line="37" code="50018">No DocBlock was found for property $h</error>
      <error line="38" code="50018">No DocBlock was found for property $lMargin</error>
      <error line="39" code="50018">No DocBlock was found for property $tMargin</error>
      <error line="40" code="50018">No DocBlock was found for property $rMargin</error>
      <error line="41" code="50018">No DocBlock was found for property $bMargin</error>
      <error line="42" code="50018">No DocBlock was found for property $cMargin</error>
      <error line="43" code="50018">No DocBlock was found for property $x</error>
      <error line="43" code="50018">No DocBlock was found for property $y</error>
      <error line="44" code="50018">No DocBlock was found for property $lasth</error>
      <error line="45" code="50018">No DocBlock was found for property $LineWidth</error>
      <error line="46" code="50018">No DocBlock was found for property $fontpath</error>
      <error line="47" code="50018">No DocBlock was found for property $CoreFonts</error>
      <error line="48" code="50018">No DocBlock was found for property $fonts</error>
      <error line="49" code="50018">No DocBlock was found for property $FontFiles</error>
      <error line="50" code="50018">No DocBlock was found for property $diffs</error>
      <error line="51" code="50018">No DocBlock was found for property $FontFamily</error>
      <error line="52" code="50018">No DocBlock was found for property $FontStyle</error>
      <error line="53" code="50018">No DocBlock was found for property $underline</error>
      <error line="54" code="50018">No DocBlock was found for property $CurrentFont</error>
      <error line="55" code="50018">No DocBlock was found for property $FontSizePt</error>
      <error line="56" code="50018">No DocBlock was found for property $FontSize</error>
      <error line="57" code="50018">No DocBlock was found for property $DrawColor</error>
      <error line="58" code="50018">No DocBlock was found for property $FillColor</error>
      <error line="59" code="50018">No DocBlock was found for property $TextColor</error>
      <error line="60" code="50018">No DocBlock was found for property $ColorFlag</error>
      <error line="61" code="50018">No DocBlock was found for property $ws</error>
      <error line="62" code="50018">No DocBlock was found for property $images</error>
      <error line="63" code="50018">No DocBlock was found for property $PageLinks</error>
      <error line="64" code="50018">No DocBlock was found for property $links</error>
      <error line="65" code="50018">No DocBlock was found for property $AutoPageBreak</error>
      <error line="66" code="50018">No DocBlock was found for property $PageBreakTrigger</error>
      <error line="67" code="50018">No DocBlock was found for property $InHeader</error>
      <error line="68" code="50018">No DocBlock was found for property $InFooter</error>
      <error line="69" code="50018">No DocBlock was found for property $ZoomMode</error>
      <error line="70" code="50018">No DocBlock was found for property $LayoutMode</error>
      <error line="71" code="50018">No DocBlock was found for property $title</error>
      <error line="72" code="50018">No DocBlock was found for property $subject</error>
      <error line="73" code="50018">No DocBlock was found for property $author</error>
      <error line="74" code="50018">No DocBlock was found for property $keywords</error>
      <error line="75" code="50018">No DocBlock was found for property $creator</error>
      <error line="76" code="50018">No DocBlock was found for property $AliasNbPages</error>
      <error line="77" code="50018">No DocBlock was found for property $PDFVersion</error>
      <error line="84" code="50010">No DocBlock was found for method FPDF()</error>
      <error line="178" code="50010">No DocBlock was found for method SetMargins()</error>
      <error line="188" code="50010">No DocBlock was found for method SetLeftMargin()</error>
      <error line="196" code="50010">No DocBlock was found for method SetTopMargin()</error>
      <error line="202" code="50010">No DocBlock was found for method SetRightMargin()</error>
      <error line="208" code="50010">No DocBlock was found for method SetAutoPageBreak()</error>
      <error line="216" code="50010">No DocBlock was found for method SetDisplayMode()</error>
      <error line="229" code="50010">No DocBlock was found for method SetCompression()</error>
      <error line="238" code="50010">No DocBlock was found for method SetTitle()</error>
      <error line="246" code="50010">No DocBlock was found for method SetSubject()</error>
      <error line="254" code="50010">No DocBlock was found for method SetAuthor()</error>
      <error line="262" code="50010">No DocBlock was found for method SetKeywords()</error>
      <error line="270" code="50010">No DocBlock was found for method SetCreator()</error>
      <error line="278" code="50010">No DocBlock was found for method AliasNbPages()</error>
      <error line="284" code="50010">No DocBlock was found for method Error()</error>
      <error line="290" code="50010">No DocBlock was found for method Open()</error>
      <error line="296" code="50010">No DocBlock was found for method Close()</error>
      <error line="313" code="50010">No DocBlock was found for method AddPage()</error>
      <error line="382" code="50010">No DocBlock was found for method Header()</error>
      <error line="387" code="50010">No DocBlock was found for method Footer()</error>
      <error line="392" code="50010">No DocBlock was found for method PageNo()</error>
      <error line="398" code="50010">No DocBlock was found for method SetDrawColor()</error>
      <error line="409" code="50010">No DocBlock was found for method SetFillColor()</error>
      <error line="421" code="50010">No DocBlock was found for method SetTextColor()</error>
      <error line="431" code="50010">No DocBlock was found for method GetStringWidth()</error>
      <error line="443" code="50010">No DocBlock was found for method SetLineWidth()</error>
      <error line="451" code="50010">No DocBlock was found for method Line()</error>
      <error line="457" code="50010">No DocBlock was found for method Rect()</error>
      <error line="469" code="50010">No DocBlock was found for method AddFont()</error>
      <error line="505" code="50010">No DocBlock was found for method SetFont()</error>
      <error line="555" code="50010">No DocBlock was found for method SetFontSize()</error>
      <error line="566" code="50010">No DocBlock was found for method AddLink()</error>
      <error line="574" code="50010">No DocBlock was found for method SetLink()</error>
      <error line="584" code="50010">No DocBlock was found for method Link()</error>
      <error line="590" code="50010">No DocBlock was found for method Text()</error>
      <error line="601" code="50010">No DocBlock was found for method AcceptPageBreak()</error>
      <error line="607" code="50010">No DocBlock was found for method Cell()</error>
      <error line="686" code="50010">No DocBlock was found for method MultiCell()</error>
      <error line="799" code="50010">No DocBlock was found for method Write()</error>
      <error line="880" code="50010">No DocBlock was found for method Ln()</error>
      <error line="890" code="50010">No DocBlock was found for method Image()</error>
      <error line="953" code="50010">No DocBlock was found for method GetX()</error>
      <error line="959" code="50010">No DocBlock was found for method SetX()</error>
      <error line="968" code="50010">No DocBlock was found for method GetY()</error>
      <error line="974" code="50010">No DocBlock was found for method SetY()</error>
      <error line="984" code="50010">No DocBlock was found for method SetXY()</error>
      <error line="991" code="50010">No DocBlock was found for method Output()</error>
      <error line="1053" code="50010">No DocBlock was found for method _dochecks()</error>
      <error line="1066" code="50010">No DocBlock was found for method _checkoutput()</error>
      <error line="1086" code="50010">No DocBlock was found for method _getpagesize()</error>
      <error line="1105" code="50010">No DocBlock was found for method _beginpage()</error>
      <error line="1145" code="50010">No DocBlock was found for method _endpage()</error>
      <error line="1150" code="50010">No DocBlock was found for method _loadfont()</error>
      <error line="1160" code="50010">No DocBlock was found for method _escape()</error>
      <error line="1170" code="50010">No DocBlock was found for method _textstring()</error>
      <error line="1176" code="50010">No DocBlock was found for method _UTF8toUTF16()</error>
      <error line="1209" code="50010">No DocBlock was found for method _dounderline()</error>
      <error line="1218" code="50010">No DocBlock was found for method _parsejpg()</error>
      <error line="1237" code="50010">No DocBlock was found for method _parsepng()</error>
      <error line="1248" code="50010">No DocBlock was found for method _parsepngstream()</error>
      <error line="1373" code="50010">No DocBlock was found for method _readstream()</error>
      <error line="1390" code="50010">No DocBlock was found for method _readint()</error>
      <error line="1397" code="50010">No DocBlock was found for method _parsegif()</error>
      <error line="1436" code="50010">No DocBlock was found for method _newobj()</error>
      <error line="1444" code="50010">No DocBlock was found for method _putstream()</error>
      <error line="1451" code="50010">No DocBlock was found for method _out()</error>
      <error line="1460" code="50010">No DocBlock was found for method _putpages()</error>
      <error line="1533" code="50010">No DocBlock was found for method _putfonts()</error>
      <error line="1627" code="50010">No DocBlock was found for method _putimages()</error>
      <error line="1637" code="50010">No DocBlock was found for method _putimage()</error>
      <error line="1689" code="50010">No DocBlock was found for method _putxobjectdict()</error>
      <error line="1695" code="50010">No DocBlock was found for method _putresourcedict()</error>
      <error line="1707" code="50010">No DocBlock was found for method _putresources()</error>
      <error line="1720" code="50010">No DocBlock was found for method _putinfo()</error>
      <error line="1736" code="50010">No DocBlock was found for method _putcatalog()</error>
      <error line="1756" code="50010">No DocBlock was found for method _putheader()</error>
      <error line="1761" code="50010">No DocBlock was found for method _puttrailer()</error>
      <error line="1768" code="50010">No DocBlock was found for method _enddoc()</error>
    </parse_markers>
  </file>
  <file path="ticketgen/genserie.php" hash="012a193dbfd97da6006c4297e2857178" package="ticketgen">
    <docblock line="3">
      <description>Fichier de la biblioth√®que ticketgen</description>
      <long-description/>
      <tag line="3" name="package" description="ticketgen"/>
    </docblock>
    <include line="8" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="61" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="11" package="Default">
      <extends>\FPDF</extends>
      <name>GenSerie</name>
      <full_name>\GenSerie</full_name>
      <property final="false" static="false" visibility="private" line="13" namespace="global" package="Default">
        <name>$date</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="14" namespace="global" package="Default">
        <name>$serie</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="15" namespace="global" package="Default">
        <name>$proprio</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="16" namespace="global" package="Default">
        <name>$conf</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="17" namespace="global" package="Default">
        <name>$posy</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="18" namespace="global" package="Default">
        <name>$tickets</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="19" namespace="global" package="Default">
        <name>$header</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="20" namespace="global" package="Default">
        <name>$border</name>
        <default>0</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <argument line="22">
          <name>$serie</name>
          <default/>
          <type/>
        </argument>
        <argument line="22">
          <name>$proprio</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>Header</name>
        <full_name>Header</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="59" package="Default">
        <name>reload_conf</name>
        <full_name>reload_conf</full_name>
        <argument line="59">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="67" package="Default">
        <name>colordecode</name>
        <full_name>colordecode</full_name>
        <argument line="67">
          <name>$color</name>
          <default/>
          <type/>
        </argument>
        <argument line="67">
          <name>$result</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="76" package="Default">
        <name>addptext</name>
        <full_name>addptext</full_name>
        <argument line="76">
          <name>$styleconf</name>
          <default/>
          <type/>
        </argument>
        <argument line="76">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
        <argument line="76">
          <name>$posx</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$posy</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$width</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$height</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="111">
          <name>$serie</name>
          <default/>
          <type/>
        </argument>
        <argument line="111">
          <name>$proprio</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="Default">
        <name>out</name>
        <full_name>out</full_name>
        <argument line="121">
          <name>$out</name>
          <default>'I'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="126" package="Default">
        <name>mkticket</name>
        <full_name>mkticket</full_name>
        <argument line="126">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="144" package="Default">
        <name>mktable</name>
        <full_name>mktable</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="11" code="50000">No DocBlock was found for \GenSerie</error>
      <error line="13" code="50018">No DocBlock was found for property $date</error>
      <error line="14" code="50018">No DocBlock was found for property $serie</error>
      <error line="15" code="50018">No DocBlock was found for property $proprio</error>
      <error line="16" code="50018">No DocBlock was found for property $conf</error>
      <error line="17" code="50018">No DocBlock was found for property $posy</error>
      <error line="18" code="50018">No DocBlock was found for property $tickets</error>
      <error line="19" code="50018">No DocBlock was found for property $header</error>
      <error line="20" code="50018">No DocBlock was found for property $border</error>
      <error line="22" code="50010">No DocBlock was found for method init()</error>
      <error line="30" code="50010">No DocBlock was found for method Header()</error>
      <error line="59" code="50010">No DocBlock was found for method reload_conf()</error>
      <error line="67" code="50010">No DocBlock was found for method colordecode()</error>
      <error line="76" code="50010">No DocBlock was found for method addptext()</error>
      <error line="111" code="50010">No DocBlock was found for method __construct()</error>
      <error line="121" code="50010">No DocBlock was found for method out()</error>
      <error line="126" code="50010">No DocBlock was found for method mkticket()</error>
      <error line="144" code="50010">No DocBlock was found for method mktable()</error>
    </parse_markers>
  </file>
  <file path="ticketgen/codegen.php" hash="4f669b95a6b702e475f50d425626c08b" package="ticketgen">
    <docblock line="3">
      <description>Fichier de la biblioth√®que ticketgen</description>
      <long-description/>
      <tag line="3" name="package" description="ticketgen"/>
    </docblock>
    <function namespace="global" line="9" package="ticketgen">
      <name>checksum</name>
      <full_name>\checksum</full_name>
      <argument line="9">
        <name>$code</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="51" package="ticketgen">
      <name>writecode</name>
      <full_name>\writecode</full_name>
      <argument line="51">
        <name>$img</name>
        <default/>
        <type/>
      </argument>
      <argument line="51">
        <name>$conf</name>
        <default/>
        <type/>
      </argument>
      <argument line="51">
        <name>$code</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50009">No DocBlock was found for function \checksum()</error>
      <error line="51" code="50009">No DocBlock was found for function \writecode()</error>
    </parse_markers>
  </file>
  <file path="ticketgen/fonts/AppleGaramond-Bold.php" hash="7bf75c61e3ae06243847525f8d367871" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file ticketgen/fonts/AppleGaramond-Bold.php</error>
    </parse_markers>
  </file>
  <file path="ticketgen/fonts/AppleGaramond-BoldItalic.php" hash="f216e8d59dedbc4b2a26995d20a8dfa2" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file ticketgen/fonts/AppleGaramond-BoldItalic.php</error>
    </parse_markers>
  </file>
  <file path="ticketgen/fonts/AppleGaramond.php" hash="3c0a4f7f00be68ef20b433e5a4dcba3a" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file ticketgen/fonts/AppleGaramond.php</error>
    </parse_markers>
  </file>
  <file path="ticketgen/fonts/AppleGaramond-Light.php" hash="b6a71aba43236ef15d67cdd3535de24a" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file ticketgen/fonts/AppleGaramond-Light.php</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifier.truncate.php" hash="5f11b18b8fdfd91cd3304894bb2c3a5d" package="Smarty\PluginsModifier">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifier"/>
    </docblock>
    <function namespace="global" line="27" package="Smarty\PluginsModifier">
      <name>smarty_modifier_truncate</name>
      <full_name>\smarty_modifier_truncate</full_name>
      <docblock line="9">
        <description>Smarty truncate modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     truncate&lt;br&gt;
Purpose:  Truncate a string to a certain length if necessary,
              optionally splitting in the middle of a word, and
              appending the $etc string or inserting $etc into the middle.&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="truncate (Smarty online manual)" link="http://smarty.php.net/manual/en/language.modifier.truncate.php"/>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="param" description="input string" type="string" variable="$string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="length of truncated text" type="integer" variable="$length">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="9" name="param" description="end string" type="string" variable="$etc">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="truncate at word boundary" type="boolean" variable="$break_words">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="9" name="param" description="truncate in the middle of text" type="boolean" variable="$middle">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="9" name="return" description="truncated string" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="27">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
      <argument line="27">
        <name>$length</name>
        <default>80</default>
        <type/>
      </argument>
      <argument line="27">
        <name>$etc</name>
        <default>'...'</default>
        <type/>
      </argument>
      <argument line="27">
        <name>$break_words</name>
        <default>false</default>
        <type/>
      </argument>
      <argument line="27">
        <name>$middle</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.strip.php" hash="b7a497bdb1552c0ba0b5c5e81ef8fcc0" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="25" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_strip</name>
      <full_name>\smarty_modifiercompiler_strip</full_name>
      <docblock line="9">
        <description>Smarty strip modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     strip&lt;br&gt;
Purpose:  Replace all repeated spaces, newlines, tabs
             with a single space or supplied replacement string.&lt;br&gt;
Example:  {$var|strip} {$var|strip:"&amp;nbsp;"}&lt;br&gt;
Date:     September 25th, 2002&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="strip (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.strip.php"/>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="25">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="25">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_strip()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/shared.literal_compiler_param.php" hash="f59ae988d61bd68647b2cc89e4d0c328" package="Smarty\PluginsShared">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsShared"/>
    </docblock>
    <function namespace="global" line="19" package="Smarty\PluginsShared">
      <name>smarty_literal_compiler_param</name>
      <full_name>\smarty_literal_compiler_param</full_name>
      <docblock line="9">
        <description>evaluate compiler parameter</description>
        <long-description/>
        <tag line="9" name="param" description="parameter array as given to the compiler function" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="param" description="array index of the parameter to convert" type="integer" variable="$index">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="9" name="param" description="value to be returned if the parameter is not present" type="mixed" variable="$default">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="9" name="return" description="evaluated value of parameter or $default" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="9" name="throws" description="if parameter is not a literal (but an expression, variable, ‚Ä¶)" type="\SmartyException">
          <type by_reference="false">\SmartyException</type>
        </tag>
        <tag line="9" name="author" description="Rodney Rehm"/>
      </docblock>
      <argument line="19">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="19">
        <name>$index</name>
        <default/>
        <type/>
      </argument>
      <argument line="19">
        <name>$default</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/function.cycle.php" hash="1de9b1642f2bff44bf61c204a412bee7" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <function namespace="global" line="46" package="Smarty\PluginsFunction">
      <name>smarty_function_cycle</name>
      <full_name>\smarty_function_cycle</full_name>
      <docblock line="9">
        <description>Smarty {cycle} function plugin</description>
        <long-description>&lt;p&gt;Type:     function&lt;br&gt;
Name:     cycle&lt;br&gt;
Date:     May 3, 2002&lt;br&gt;
Purpose:  cycle through given values&lt;br&gt;
Params:&lt;/p&gt;

&lt;pre&gt;
- name      - name of cycle (optional)
- values    - comma separated list of values to cycle, or an array of values to cycle
              (this can be left out for subsequent calls)
- reset     - boolean - resets given var to true
- print     - boolean - print var or not. default is true
- advance   - boolean - whether or not to advance the cycle
- delimiter - the value delimiter, default is ","
- assign    - boolean, assigns to template var instead of printed.
&lt;/pre&gt;

&lt;p&gt;Examples:&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;
{cycle values="#eeeeee,#d0d0d0d"}
{cycle name=row values="one,two,three" reset=true}
{cycle name=row}
&lt;/pre&gt;</long-description>
        <tag line="9" name="link" description="{cycle}&#10;      (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.cycle.php"/>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="author" description="credit to Mark Priatel &lt;mpriatel@rogers.com&gt;"/>
        <tag line="9" name="author" description="credit to Gerard &lt;gerard@interfold.com&gt;"/>
        <tag line="9" name="author" description="credit to Jason Sweat &lt;jsweat_php@yahoo.com&gt;"/>
        <tag line="9" name="version" description="1.3"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="9" name="return" description="" type="string|null">
          <type by_reference="false">string</type>
          <type by_reference="false">null</type>
        </tag>
      </docblock>
      <argument line="46">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="46">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/shared.mb_wordwrap.php" hash="739a72d21de23d819cdbb11a56130b3f" package="Smarty\PluginsShared">
    <docblock line="2">
      <description>Smarty shared plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsShared"/>
    </docblock>
    <function namespace="global" line="22" package="Smarty\PluginsShared">
      <name>smarty_mb_wordwrap</name>
      <full_name>\smarty_mb_wordwrap</full_name>
      <docblock line="11">
        <description>Wrap a string to a given number of characters</description>
        <long-description/>
        <tag line="11" name="link" description="for similarity" link="http://php.net/manual/en/function.wordwrap.php"/>
        <tag line="11" name="param" description="the string to wrap" type="string" variable="$str">
          <type by_reference="false">string</type>
        </tag>
        <tag line="11" name="param" description="the width of the output" type="int" variable="$width">
          <type by_reference="false">int</type>
        </tag>
        <tag line="11" name="param" description="the character used to break the line" type="string" variable="$break">
          <type by_reference="false">string</type>
        </tag>
        <tag line="11" name="param" description="ignored parameter, just for the sake of" type="boolean" variable="$cut">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="11" name="return" description="wrapped string" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="11" name="author" description="Rodney Rehm"/>
      </docblock>
      <argument line="22">
        <name>$str</name>
        <default/>
        <type/>
      </argument>
      <argument line="22">
        <name>$width</name>
        <default>75</default>
        <type/>
      </argument>
      <argument line="22">
        <name>$break</name>
        <default>"\n"</default>
        <type/>
      </argument>
      <argument line="22">
        <name>$cut</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifier.date_format.php" hash="6b5edccb1f6890abe1a4ed49148e9bd7" package="Smarty\PluginsModifier">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifier"/>
    </docblock>
    <include line="37" type="Require Once" package="Default">
      <name/>
      <docblock line="34">
        <description>Include the {@link shared.make_timestamp.php} plugin</description>
        <long-description/>
      </docblock>
    </include>
    <function namespace="global" line="29" package="Smarty\PluginsModifier">
      <name>smarty_modifier_date_format</name>
      <full_name>\smarty_modifier_date_format</full_name>
      <docblock line="9">
        <description>Smarty date_format modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     date_format&lt;br&gt;
Purpose:  format datestamps via strftime&lt;br&gt;
Input:&lt;br&gt;
         - string: input date string
         - format: strftime format for output
         - default_date: default date if $string is empty&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="date_format (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.date.format.php"/>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="param" description="input date string" type="string" variable="$string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="strftime format for output" type="string" variable="$format">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="default date if $string is empty" type="string" variable="$default_date">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="either 'strftime' or 'auto'" type="string" variable="$formatter">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="return" description="|void" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="uses" description="\global\smarty_make_timestamp()" refers="\global\smarty_make_timestamp()"/>
      </docblock>
      <argument line="29">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
      <argument line="29">
        <name>$format</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="29">
        <name>$default_date</name>
        <default>''</default>
        <type/>
      </argument>
      <argument line="29">
        <name>$formatter</name>
        <default>'auto'</default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifier.replace.php" hash="a68a934055b4121a172a75e43f73cf04" package="Smarty\PluginsModifier">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifier"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="global" line="23" package="Smarty\PluginsModifier">
      <name>smarty_modifier_replace</name>
      <full_name>\smarty_modifier_replace</full_name>
      <docblock line="8">
        <description>Smarty replace modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     replace&lt;br&gt;
Purpose:  simple search/replace&lt;/p&gt;</long-description>
        <tag line="8" name="link" description="replace (Smarty online manual)" link="http://smarty.php.net/manual/en/language.modifier.replace.php"/>
        <tag line="8" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="8" name="author" description="Uwe Tews"/>
        <tag line="8" name="param" description="input string" type="string" variable="$string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="param" description="text to search for" type="string" variable="$search">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="param" description="replacement text" type="string" variable="$replace">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="23">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
      <argument line="23">
        <name>$search</name>
        <default/>
        <type/>
      </argument>
      <argument line="23">
        <name>$replace</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/function.math.php" hash="235410a5d2cc1f1236d9d4dc0a0f2e9c" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description>&lt;p&gt;This plugin is only for Smarty2 BC&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <function namespace="global" line="24" package="Smarty\PluginsFunction">
      <name>smarty_function_math</name>
      <full_name>\smarty_function_math</full_name>
      <docblock line="10">
        <description>Smarty {math} function plugin</description>
        <long-description>&lt;p&gt;Type:     function&lt;br&gt;
Name:     math&lt;br&gt;
Purpose:  handle math computations in template&lt;/p&gt;</long-description>
        <tag line="10" name="link" description="{math}&#10;         (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.math.php"/>
        <tag line="10" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="10" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="10" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="10" name="return" description="" type="string|null">
          <type by_reference="false">string</type>
          <type by_reference="false">null</type>
        </tag>
      </docblock>
      <argument line="24">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="24">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.string_format.php" hash="20ccb28bf1a0cfb5456d637a5654bafc" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="21" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_string_format</name>
      <full_name>\smarty_modifiercompiler_string_format</full_name>
      <docblock line="9">
        <description>Smarty string_format modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     string_format&lt;br&gt;
Purpose:  format strings via sprintf&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="string_format (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.string.format.php"/>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="21">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="21">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_string_format()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.strip_tags.php" hash="39c919672acf8adaf00778bffbf2da9e" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="21" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_strip_tags</name>
      <full_name>\smarty_modifiercompiler_strip_tags</full_name>
      <docblock line="9">
        <description>Smarty strip_tags modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     strip_tags&lt;br&gt;
Purpose:  strip html tags from text&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="strip_tags (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.strip.tags.php"/>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="21">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="21">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_strip_tags()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/function.html_select_date.php" hash="4c315d27f6cba90a880ad2fc125ba428" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <include line="12" type="Require Once" package="Default">
      <name/>
      <docblock line="9">
        <description/>
        <long-description/>
        <tag line="9" name="ignore" description=""/>
      </docblock>
    </include>
    <include line="16" type="Require Once" package="Default">
      <name/>
      <docblock line="13">
        <description/>
        <long-description/>
        <tag line="13" name="ignore" description=""/>
      </docblock>
    </include>
    <function namespace="global" line="54" package="Smarty\PluginsFunction">
      <name>smarty_function_html_select_date</name>
      <full_name>\smarty_function_html_select_date</full_name>
      <docblock line="18">
        <description>Smarty {html_select_date} plugin</description>
        <long-description>&lt;p&gt;Type:     function&lt;br&gt;
Name:     html_select_date&lt;br&gt;
Purpose:  Prints the dropdowns for date selection.&lt;/p&gt;

&lt;p&gt;ChangeLog:&lt;/p&gt;

&lt;pre&gt;
           - 1.0 initial release
           - 1.1 added support for +/- N syntax for begin
             and end year values. (Monte)
           - 1.2 added support for yyyy-mm-dd syntax for
             time value. (Jan Rosier)
           - 1.3 added support for choosing format for
             month values (Gary Loescher)
           - 1.3.1 added support for choosing format for
             day values (Marcus Bointon)
           - 1.3.2 support negative timestamps, force year
             dropdown to include given date unless explicitly set (Monte)
           - 1.3.4 fix behaviour of 0000-00-00 00:00:00 dates to match that
             of 0000-00-00 dates (cybot, boots)
           - 2.0 complete rewrite for performance,
             added attributes month_names, *_id
&lt;/pre&gt;</long-description>
        <tag line="18" name="link" description="{html_select_date}&#10;     (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.html.select.date.php"/>
        <tag line="18" name="version" description="2.0"/>
        <tag line="18" name="author" description="Andrei Zmievski"/>
        <tag line="18" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="18" name="author" description="Rodney Rehm"/>
        <tag line="18" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="18" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="18" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="54">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="54">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/function.html_radios.php" hash="b64a0be1261d0ed0c5c40f76323f5500" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <include line="47" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="global" line="45" package="Smarty\PluginsFunction">
      <name>smarty_function_html_radios</name>
      <full_name>\smarty_function_html_radios</full_name>
      <docblock line="9">
        <description>Smarty {html_radios} function plugin</description>
        <long-description>&lt;p&gt;File:       function.html_radios.php&lt;br&gt;
Type:       function&lt;br&gt;
Name:       html_radios&lt;br&gt;
Date:       24.Feb.2003&lt;br&gt;
Purpose:    Prints out a list of radio input types&lt;br&gt;
Params:&lt;/p&gt;

&lt;pre&gt;
- name       (optional) - string default "radio"
- values     (required) - array
- options    (required) - associative array
- checked    (optional) - array default not set
- separator  (optional) - ie &lt;br&gt; or &amp;nbsp;
- output     (optional) - the output next to each radio button
- assign     (optional) - assign the output as an array to this variable
- escape     (optional) - escape the content (not value), defaults to true
&lt;/pre&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;pre&gt;
{html_radios values=$ids output=$names}
{html_radios values=$ids name='box' separator='&lt;br&gt;' output=$names}
{html_radios values=$ids checked=$checked separator='&lt;br&gt;' output=$names}
&lt;/pre&gt;</long-description>
        <tag line="9" name="link" description="{html_radios}&#10;     (Smarty online manual)" link="http://smarty.php.net/manual/en/language.function.html.radios.php"/>
        <tag line="9" name="author" description="Christopher Kvarme &lt;christopher.kvarme@flashjab.com&gt;"/>
        <tag line="9" name="author" description="credits to Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="version" description="1.0"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="9" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="uses" description="\global\smarty_function_escape_special_chars()" refers="\global\smarty_function_escape_special_chars()"/>
      </docblock>
      <argument line="45">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="45">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="158" package="Smarty\PluginsFunction">
      <name>smarty_function_html_radios_output</name>
      <full_name>\smarty_function_html_radios_output</full_name>
      <argument line="158">
        <name>$name</name>
        <default/>
        <type/>
      </argument>
      <argument line="158">
        <name>$value</name>
        <default/>
        <type/>
      </argument>
      <argument line="158">
        <name>$output</name>
        <default/>
        <type/>
      </argument>
      <argument line="158">
        <name>$selected</name>
        <default/>
        <type/>
      </argument>
      <argument line="158">
        <name>$extra</name>
        <default/>
        <type/>
      </argument>
      <argument line="158">
        <name>$separator</name>
        <default/>
        <type/>
      </argument>
      <argument line="158">
        <name>$labels</name>
        <default/>
        <type/>
      </argument>
      <argument line="158">
        <name>$label_ids</name>
        <default/>
        <type/>
      </argument>
      <argument line="158">
        <name>$escape</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="158" code="50009">No DocBlock was found for function \smarty_function_html_radios_output()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/shared.mb_str_replace.php" hash="898f7fbf11e77c36ac64c9dd0ec7daf1" package="Smarty\PluginsShared">
    <docblock line="2">
      <description>Smarty shared plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsShared"/>
    </docblock>
    <function namespace="global" line="20" package="Smarty\PluginsShared">
      <name>smarty_mb_str_replace</name>
      <full_name>\smarty_mb_str_replace</full_name>
      <docblock line="10">
        <description>Multibyte string replace</description>
        <long-description/>
        <tag line="10" name="param" description="the string to be searched" type="string" variable="$search">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="param" description="the replacement string" type="string" variable="$replace">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="param" description="the source string" type="string" variable="$subject">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="param" description="&amp;$count  number of matches found" type="int" variable="$count">
          <type by_reference="false">int</type>
        </tag>
        <tag line="10" name="return" description="replaced string" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="author" description="Rodney Rehm"/>
      </docblock>
      <argument line="20">
        <name>$search</name>
        <default/>
        <type/>
      </argument>
      <argument line="20">
        <name>$replace</name>
        <default/>
        <type/>
      </argument>
      <argument line="20">
        <name>$subject</name>
        <default/>
        <type/>
      </argument>
      <argument line="20">
        <name>$count</name>
        <default>0</default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/function.html_options.php" hash="0a25bd9cbfd74346a0969b08d58f4f0d" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <include line="38" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="global" line="36" package="Smarty\PluginsFunction">
      <name>smarty_function_html_options</name>
      <full_name>\smarty_function_html_options</full_name>
      <docblock line="9">
        <description>Smarty {html_options} function plugin</description>
        <long-description>&lt;p&gt;Type:     function&lt;br&gt;
Name:     html_options&lt;br&gt;
Purpose:  Prints the list of &lt;option&gt; tags generated from
          the passed parameters&lt;br&gt;
Params:&lt;/p&gt;

&lt;pre&gt;
- name       (optional) - string default "select"
- values     (required) - if no options supplied) - array
- options    (required) - if no values supplied) - associative array
- selected   (optional) - string default not set
- output     (required) - if not options supplied) - array
- id         (optional) - string default not set
- class      (optional) - string default not set
&lt;/pre&gt;</long-description>
        <tag line="9" name="link" description="{html_image}&#10;     (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.html.options.php"/>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="author" description="Ralf Strehle (minor optimization) &lt;ralf dot strehle at yahoo dot de&gt;"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="9" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="uses" description="\global\smarty_function_escape_special_chars()" refers="\global\smarty_function_escape_special_chars()"/>
      </docblock>
      <argument line="36">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="36">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="150" package="Smarty\PluginsFunction">
      <name>smarty_function_html_options_optoutput</name>
      <full_name>\smarty_function_html_options_optoutput</full_name>
      <argument line="150">
        <name>$key</name>
        <default/>
        <type/>
      </argument>
      <argument line="150">
        <name>$value</name>
        <default/>
        <type/>
      </argument>
      <argument line="150">
        <name>$selected</name>
        <default/>
        <type/>
      </argument>
      <argument line="150">
        <name>$id</name>
        <default/>
        <type/>
      </argument>
      <argument line="150">
        <name>$class</name>
        <default/>
        <type/>
      </argument>
      <argument line="150">
        <name>$idx</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="186" package="Smarty\PluginsFunction">
      <name>smarty_function_html_options_optgroup</name>
      <full_name>\smarty_function_html_options_optgroup</full_name>
      <argument line="186">
        <name>$key</name>
        <default/>
        <type/>
      </argument>
      <argument line="186">
        <name>$values</name>
        <default/>
        <type/>
      </argument>
      <argument line="186">
        <name>$selected</name>
        <default/>
        <type/>
      </argument>
      <argument line="186">
        <name>$id</name>
        <default/>
        <type/>
      </argument>
      <argument line="186">
        <name>$class</name>
        <default/>
        <type/>
      </argument>
      <argument line="186">
        <name>$idx</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="150" code="50009">No DocBlock was found for function \smarty_function_html_options_optoutput()</error>
      <error line="186" code="50009">No DocBlock was found for function \smarty_function_html_options_optgroup()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.count_paragraphs.php" hash="fedf9ef05fed1de3516d70e55b4520c1" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="22" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_count_paragraphs</name>
      <full_name>\smarty_modifiercompiler_count_paragraphs</full_name>
      <docblock line="9">
        <description>Smarty count_paragraphs modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     count_paragraphs&lt;br&gt;
Purpose:  count the number of paragraphs in a text&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="count_paragraphs (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.count.paragraphs.php"/>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="22">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="22">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_count_paragraphs()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/block.textformat.php" hash="b6c81aee9340bfe760681b7cf63da86d" package="Smarty\PluginsBlock">
    <docblock line="2">
      <description>Smarty plugin to format text blocks</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsBlock"/>
    </docblock>
    <include line="93" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="global" line="35" package="Smarty\PluginsBlock">
      <name>smarty_block_textformat</name>
      <full_name>\smarty_block_textformat</full_name>
      <docblock line="9">
        <description>Smarty {textformat}{/textformat} block plugin</description>
        <long-description>&lt;p&gt;Type:     block function&lt;br&gt;
Name:     textformat&lt;br&gt;
Purpose:  format text a certain way with preset styles
          or custom wrap/indent settings&lt;br&gt;
Params:&lt;/p&gt;

&lt;pre&gt;
- style         - string (email)
- indent        - integer (0)
- wrap          - integer (80)
- wrap_char     - string ("\n")
- indent_char   - string (" ")
- wrap_boundary - boolean (true)
&lt;/pre&gt;</long-description>
        <tag line="9" name="link" description="{textformat}&#10;      (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.textformat.php"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="param" description="contents of the block" type="string" variable="$content">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="9" name="param" description="&amp;$repeat  repeat flag" type="boolean" variable="$repeat">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="9" name="return" description="content re-formatted" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
      </docblock>
      <argument line="35">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="35">
        <name>$content</name>
        <default/>
        <type/>
      </argument>
      <argument line="35">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
      <argument line="35">
        <name>$repeat</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/function.html_table.php" hash="0589173454ae896e5ffb90d8b3045eee" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <function namespace="global" line="50" package="Smarty\PluginsFunction">
      <name>smarty_function_html_table</name>
      <full_name>\smarty_function_html_table</full_name>
      <docblock line="9">
        <description>Smarty {html_table} function plugin</description>
        <long-description>&lt;p&gt;Type:     function&lt;br&gt;
Name:     html_table&lt;br&gt;
Date:     Feb 17, 2003&lt;br&gt;
Purpose:  make an html table from an array of data&lt;br&gt;
Params:&lt;/p&gt;

&lt;pre&gt;
- loop       - array to loop through
- cols       - number of columns, comma separated list of column names
               or array of column names
- rows       - number of rows
- table_attr - table attributes
- th_attr    - table heading attributes (arrays are cycled)
- tr_attr    - table row attributes (arrays are cycled)
- td_attr    - table cell attributes (arrays are cycled)
- trailpad   - value to pad trailing cells with
- caption    - text for caption element
- vdir       - vertical direction (default: "down", means top-to-bottom)
- hdir       - horizontal direction (default: "right", means left-to-right)
- inner      - inner loop (default "cols": print $loop line by line,
               $loop will be printed column by column otherwise)
&lt;/pre&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;pre&gt;
{table loop=$data}
{table loop=$data cols=4 tr_attr='"bgcolor=red"'}
{table loop=$data cols="first,second,third" tr_attr=$colors}
&lt;/pre&gt;</long-description>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="author" description="credit to Messju Mohr &lt;messju at lammfellpuschen dot de&gt;"/>
        <tag line="9" name="author" description="credit to boots &lt;boots dot smarty at yahoo dot com&gt;"/>
        <tag line="9" name="version" description="1.1"/>
        <tag line="9" name="link" description="{html_table}&#10;         (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.html.table.php"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="9" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="50">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="50">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="167" package="Smarty\PluginsFunction">
      <name>smarty_function_html_table_cycle</name>
      <full_name>\smarty_function_html_table_cycle</full_name>
      <argument line="167">
        <name>$name</name>
        <default/>
        <type/>
      </argument>
      <argument line="167">
        <name>$var</name>
        <default/>
        <type/>
      </argument>
      <argument line="167">
        <name>$no</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="167" code="50009">No DocBlock was found for function \smarty_function_html_table_cycle()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/function.html_select_time.php" hash="c11fe71160a28c5a2dc20e3584c44b77" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <include line="12" type="Require Once" package="Default">
      <name/>
      <docblock line="9">
        <description/>
        <long-description/>
        <tag line="9" name="ignore" description=""/>
      </docblock>
    </include>
    <include line="16" type="Require Once" package="Default">
      <name/>
      <docblock line="13">
        <description/>
        <long-description/>
        <tag line="13" name="ignore" description=""/>
      </docblock>
    </include>
    <function namespace="global" line="34" package="Smarty\PluginsFunction">
      <name>smarty_function_html_select_time</name>
      <full_name>\smarty_function_html_select_time</full_name>
      <docblock line="18">
        <description>Smarty {html_select_time} function plugin</description>
        <long-description>&lt;p&gt;Type:     function&lt;br&gt;
Name:     html_select_time&lt;br&gt;
Purpose:  Prints the dropdowns for time selection&lt;/p&gt;</long-description>
        <tag line="18" name="link" description="{html_select_time}&#10;         (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.html.select.time.php"/>
        <tag line="18" name="author" description="Roberto Berto &lt;roberto@berto.net&gt;"/>
        <tag line="18" name="author" description="Monte Ohrt &lt;monte AT ohrt DOT com&gt;"/>
        <tag line="18" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="18" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="18" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="18" name="uses" description="\global\smarty_make_timestamp()" refers="\global\smarty_make_timestamp()"/>
      </docblock>
      <argument line="34">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="34">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/shared.make_timestamp.php" hash="70561a2c57d3b857ed3e1917163d67bf" package="Smarty\PluginsShared">
    <docblock line="2">
      <description>Smarty shared plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsShared"/>
    </docblock>
    <function namespace="global" line="17" package="Smarty\PluginsShared">
      <name>smarty_make_timestamp</name>
      <full_name>\smarty_make_timestamp</full_name>
      <docblock line="9">
        <description>Function: smarty_make_timestamp&lt;br&gt;
Purpose:  used by other smarty functions to make a timestamp from a string.</description>
        <long-description/>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="param" description="date object, timestamp or string that can be converted using strtotime()" type="\DateTime|int|string" variable="$string">
          <type by_reference="false">\DateTime</type>
          <type by_reference="false">int</type>
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="return" description="" type="int">
          <type by_reference="false">int</type>
        </tag>
      </docblock>
      <argument line="17">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.wordwrap.php" hash="64bb939deb7ef1088fff3fd4d6d6c162" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="21" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_wordwrap</name>
      <full_name>\smarty_modifiercompiler_wordwrap</full_name>
      <docblock line="9">
        <description>Smarty wordwrap modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     wordwrap&lt;br&gt;
Purpose:  wrap a string of text at a given length&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="wordwrap (Smarty online manual)" link="http://smarty.php.net/manual/en/language.modifier.wordwrap.php"/>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="21">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="21">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_wordwrap()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/function.html_checkboxes.php" hash="21704aa65f387ba6d56165e9735ff8fa" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <include line="47" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="global" line="45" package="Smarty\PluginsFunction">
      <name>smarty_function_html_checkboxes</name>
      <full_name>\smarty_function_html_checkboxes</full_name>
      <docblock line="9">
        <description>Smarty {html_checkboxes} function plugin</description>
        <long-description>&lt;p&gt;File:       function.html_checkboxes.php&lt;br&gt;
Type:       function&lt;br&gt;
Name:       html_checkboxes&lt;br&gt;
Date:       24.Feb.2003&lt;br&gt;
Purpose:    Prints out a list of checkbox input types&lt;br&gt;
Examples:&lt;/p&gt;

&lt;pre&gt;
{html_checkboxes values=$ids output=$names}
{html_checkboxes values=$ids name='box' separator='&lt;br&gt;' output=$names}
{html_checkboxes values=$ids checked=$checked separator='&lt;br&gt;' output=$names}
&lt;/pre&gt;

&lt;p&gt;Params:&lt;/p&gt;

&lt;pre&gt;
- name       (optional) - string default "checkbox"
- values     (required) - array
- options    (optional) - associative array
- checked    (optional) - array default not set
- separator  (optional) - ie &lt;br&gt; or &amp;nbsp;
- output     (optional) - the output next to each checkbox
- assign     (optional) - assign the output as an array to this variable
- escape     (optional) - escape the content (not value), defaults to true
&lt;/pre&gt;</long-description>
        <tag line="9" name="link" description="{html_checkboxes}&#10;     (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.html.checkboxes.php"/>
        <tag line="9" name="author" description="Christopher Kvarme &lt;christopher.kvarme@flashjab.com&gt;"/>
        <tag line="9" name="author" description="credits to Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="version" description="1.0"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="param" description="template object" type="object" variable="$template">
          <type by_reference="false">object</type>
        </tag>
        <tag line="9" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="uses" description="\global\smarty_function_escape_special_chars()" refers="\global\smarty_function_escape_special_chars()"/>
      </docblock>
      <argument line="45">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="45">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="170" package="Smarty\PluginsFunction">
      <name>smarty_function_html_checkboxes_output</name>
      <full_name>\smarty_function_html_checkboxes_output</full_name>
      <argument line="170">
        <name>$name</name>
        <default/>
        <type/>
      </argument>
      <argument line="170">
        <name>$value</name>
        <default/>
        <type/>
      </argument>
      <argument line="170">
        <name>$output</name>
        <default/>
        <type/>
      </argument>
      <argument line="170">
        <name>$selected</name>
        <default/>
        <type/>
      </argument>
      <argument line="170">
        <name>$extra</name>
        <default/>
        <type/>
      </argument>
      <argument line="170">
        <name>$separator</name>
        <default/>
        <type/>
      </argument>
      <argument line="170">
        <name>$labels</name>
        <default/>
        <type/>
      </argument>
      <argument line="170">
        <name>$label_ids</name>
        <default/>
        <type/>
      </argument>
      <argument line="170">
        <name>$escape</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="170" code="50009">No DocBlock was found for function \smarty_function_html_checkboxes_output()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/function.counter.php" hash="792bf8ccd82535695a601d078b49a7b1" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <function namespace="global" line="22" package="Smarty\PluginsFunction">
      <name>smarty_function_counter</name>
      <full_name>\smarty_function_counter</full_name>
      <docblock line="8">
        <description>Smarty {counter} function plugin</description>
        <long-description>&lt;p&gt;Type:     function&lt;br&gt;
Name:     counter&lt;br&gt;
Purpose:  print out a counter value&lt;/p&gt;</long-description>
        <tag line="8" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="8" name="link" description="{counter}&#10;      (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.counter.php"/>
        <tag line="8" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="8" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="8" name="return" description="" type="string|null">
          <type by_reference="false">string</type>
          <type by_reference="false">null</type>
        </tag>
      </docblock>
      <argument line="22">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="22">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/outputfilter.trimwhitespace.php" hash="56c450d5033e3cd959a9e051436f20a7" package="Smarty\PluginsFilter">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFilter"/>
    </docblock>
    <function namespace="global" line="20" package="Smarty\PluginsFilter">
      <name>smarty_outputfilter_trimwhitespace</name>
      <full_name>\smarty_outputfilter_trimwhitespace</full_name>
      <docblock line="9">
        <description>Smarty trimwhitespace outputfilter plugin</description>
        <long-description>&lt;p&gt;Trim unnecessary whitespace from HTML markup.&lt;/p&gt;</long-description>
        <tag line="9" name="author" description="Rodney Rehm"/>
        <tag line="9" name="param" description="input string" type="string" variable="$source">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="Smarty object" type="\Smarty_Internal_Template" variable="$smarty">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="9" name="return" description="filtered output" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="todo" description="substr_replace() is not overloaded by mbstring.func_overload - so this function might fail!"/>
      </docblock>
      <argument line="20">
        <name>$source</name>
        <default/>
        <type/>
      </argument>
      <argument line="20">
        <name>$smarty</name>
        <default/>
        <type>\Smarty_Internal_Template</type>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifier.spacify.php" hash="bc084bf89967872c9ede08c62971fa08" package="Smarty\PluginsModifier">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifier"/>
    </docblock>
    <function namespace="global" line="21" package="Smarty\PluginsModifier">
      <name>smarty_modifier_spacify</name>
      <full_name>\smarty_modifier_spacify</full_name>
      <docblock line="8">
        <description>Smarty spacify modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     spacify&lt;br&gt;
Purpose:  add spaces between characters in a string&lt;/p&gt;</long-description>
        <tag line="8" name="link" description="spacify (Smarty online manual)" link="http://smarty.php.net/manual/en/language.modifier.spacify.php"/>
        <tag line="8" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="8" name="param" description="input string" type="string" variable="$string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="param" description="string to insert between characters." type="string" variable="$spacify_char">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="21">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
      <argument line="21">
        <name>$spacify_char</name>
        <default>' '</default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/variablefilter.htmlspecialchars.php" hash="212c16cd03c11f3bd99fb1289a0cfde7" package="Smarty\PluginsFilter">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFilter"/>
    </docblock>
    <function namespace="global" line="16" package="Smarty\PluginsFilter">
      <name>smarty_variablefilter_htmlspecialchars</name>
      <full_name>\smarty_variablefilter_htmlspecialchars</full_name>
      <docblock line="9">
        <description>Smarty htmlspecialchars variablefilter plugin</description>
        <long-description/>
        <tag line="9" name="param" description="input string" type="string" variable="$source">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="Smarty object" type="\Smarty_Internal_Template" variable="$smarty">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="9" name="return" description="filtered output" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="16">
        <name>$source</name>
        <default/>
        <type/>
      </argument>
      <argument line="16">
        <name>$smarty</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.indent.php" hash="43bce66499416229d5fc17f13d9e63e5" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="21" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_indent</name>
      <full_name>\smarty_modifiercompiler_indent</full_name>
      <docblock line="8">
        <description>Smarty indent modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     indent&lt;br&gt;
Purpose:  indent lines of text&lt;/p&gt;</long-description>
        <tag line="8" name="link" description="indent (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.indent.php"/>
        <tag line="8" name="author" description="Uwe Tews"/>
        <tag line="8" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="8" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="21">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="21">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="8" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_indent()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.from_charset.php" hash="3150d38dcf7b50a0e664c7ec02d8e6bf" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="20" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_from_charset</name>
      <full_name>\smarty_modifiercompiler_from_charset</full_name>
      <docblock line="9">
        <description>Smarty from_charset modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     from_charset&lt;br&gt;
Purpose:  convert character encoding from $charset to internal encoding&lt;/p&gt;</long-description>
        <tag line="9" name="author" description="Rodney Rehm"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="20">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="20">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <markers>
      <fixme line="23">(rodneyrehm) shouldn't this throw an error?</fixme>
    </markers>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_from_charset()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.noprint.php" hash="1c7894be6edfbb7f928c98821339bb43" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="20" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_noprint</name>
      <full_name>\smarty_modifiercompiler_noprint</full_name>
      <docblock line="9">
        <description>Smarty noprint modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     noprint&lt;br&gt;
Purpose:  return an empty string&lt;/p&gt;</long-description>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="20">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="20">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_noprint()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifier.debug_print_var.php" hash="083cd8934e80eb484606d29de18eb1cb" package="Smarty\Debug">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Debug"/>
    </docblock>
    <function namespace="global" line="22" package="Smarty\Debug">
      <name>smarty_modifier_debug_print_var</name>
      <full_name>\smarty_modifier_debug_print_var</full_name>
      <docblock line="9">
        <description>Smarty debug_print_var modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     debug_print_var&lt;br&gt;
Purpose:  formats variable contents for display in the console&lt;/p&gt;</long-description>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="param" description="variable to be formatted" type="array|object" variable="$var">
          <type by_reference="false">array</type>
          <type by_reference="false">object</type>
        </tag>
        <tag line="9" name="param" description="maximum recursion depth if $var is an array" type="integer" variable="$depth">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="9" name="param" description="maximum string length if $var is a string" type="integer" variable="$length">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="9" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="22">
        <name>$var</name>
        <default/>
        <type/>
      </argument>
      <argument line="22">
        <name>$depth</name>
        <default>0</default>
        <type/>
      </argument>
      <argument line="22">
        <name>$length</name>
        <default>40</default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.cat.php" hash="c02bb9c50420ce8db8f29d5f41d7d1ca" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="25" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_cat</name>
      <full_name>\smarty_modifiercompiler_cat</full_name>
      <docblock line="9">
        <description>Smarty cat modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     cat&lt;br&gt;
Date:     Feb 24, 2003&lt;br&gt;
Purpose:  catenate a value to a variable&lt;br&gt;
Input:    string to catenate&lt;br&gt;
Example:  {$var|cat:"foo"}&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="cat&#10;         (Smarty online manual)" link="http://smarty.php.net/manual/en/language.modifier.cat.php"/>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="25">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="25">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_cat()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/function.mailto.php" hash="a495d34af3a16aa205e71c3ccc521dbc" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <function namespace="global" line="51" package="Smarty\PluginsFunction">
      <name>smarty_function_mailto</name>
      <full_name>\smarty_function_mailto</full_name>
      <docblock line="9">
        <description>Smarty {mailto} function plugin</description>
        <long-description>&lt;p&gt;Type:     function&lt;br&gt;
Name:     mailto&lt;br&gt;
Date:     May 21, 2002
Purpose:  automate mailto address link creation, and optionally encode them.&lt;br&gt;
Params:&lt;/p&gt;

&lt;pre&gt;
- address    - (required) - e-mail address
- text       - (optional) - text to display, default is address
- encode     - (optional) - can be one of:
                            * none : no encoding (default)
                            * javascript : encode with javascript
                            * javascript_charcode : encode with javascript charcode
                            * hex : encode with hexidecimal (no javascript)
- cc         - (optional) - address(es) to carbon copy
- bcc        - (optional) - address(es) to blind carbon copy
- subject    - (optional) - e-mail subject
- newsgroups - (optional) - newsgroup(s) to post to
- followupto - (optional) - address(es) to follow up to
- extra      - (optional) - extra tags for the href link
&lt;/pre&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;pre&gt;
{mailto address="me@domain.com"}
{mailto address="me@domain.com" encode="javascript"}
{mailto address="me@domain.com" encode="hex"}
{mailto address="me@domain.com" subject="Hello to you!"}
{mailto address="me@domain.com" cc="you@domain.com,they@domain.com"}
{mailto address="me@domain.com" extra='class="mailto"'}
&lt;/pre&gt;</long-description>
        <tag line="9" name="link" description="{mailto}&#10;         (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.mailto.php"/>
        <tag line="9" name="version" description="1.2"/>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="author" description="credits to Jason Sweat (added cc, bcc and subject functionality)"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="9" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="51">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="51">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
    <markers>
      <fixme line="102">(rodneyrehm) document.write() excues me what? 1998 has passed!</fixme>
    </markers>
  </file>
  <file path="libs/Smarty/plugins/shared.escape_special_chars.php" hash="bea26407d94da5fcb25cc597483a0f4d" package="Smarty\PluginsShared">
    <docblock line="2">
      <description>Smarty shared plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsShared"/>
    </docblock>
    <function namespace="global" line="21" package="Smarty\PluginsShared">
      <name>smarty_function_escape_special_chars</name>
      <full_name>\smarty_function_escape_special_chars</full_name>
      <docblock line="10">
        <description>escape_special_chars common function</description>
        <long-description>&lt;p&gt;Function: smarty_function_escape_special_chars&lt;br&gt;
Purpose:  used by other smarty functions to escape
          special chars except for already escaped ones&lt;/p&gt;</long-description>
        <tag line="10" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="10" name="param" description="text that should by escaped" type="string" variable="$string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="21">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="41" package="Smarty\PluginsShared">
      <name>smarty_function_escape_special_chars</name>
      <full_name>\smarty_function_escape_special_chars</full_name>
      <docblock line="30">
        <description>escape_special_chars common function</description>
        <long-description>&lt;p&gt;Function: smarty_function_escape_special_chars&lt;br&gt;
Purpose:  used by other smarty functions to escape
          special chars except for already escaped ones&lt;/p&gt;</long-description>
        <tag line="30" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="30" name="param" description="text that should by escaped" type="string" variable="$string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="30" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="41">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/function.fetch.php" hash="aa8c2a12805c65eb7377dbeafabd9df2" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <function namespace="global" line="23" package="Smarty\PluginsFunction">
      <name>smarty_function_fetch</name>
      <full_name>\smarty_function_fetch</full_name>
      <docblock line="9">
        <description>Smarty {fetch} plugin</description>
        <long-description>&lt;p&gt;Type:     function&lt;br&gt;
Name:     fetch&lt;br&gt;
Purpose:  fetch file, web or ftp data and display results&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="{fetch}&#10;      (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.fetch.php"/>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="9" name="return" description="if the assign parameter is passed, Smarty assigns the result to a template variable" type="string|null">
          <type by_reference="false">string</type>
          <type by_reference="false">null</type>
        </tag>
      </docblock>
      <argument line="23">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="23">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.count_words.php" hash="bc6550f6f06d82a3c4a479d75f909236" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="21" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_count_words</name>
      <full_name>\smarty_modifiercompiler_count_words</full_name>
      <docblock line="9">
        <description>Smarty count_words modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     count_words&lt;br&gt;
Purpose:  count the number of words in a text&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="count_words (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.count.words.php"/>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="21">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="21">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_count_words()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.to_charset.php" hash="904d27e6a514bd34d2c0f7f161ef1e07" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="20" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_to_charset</name>
      <full_name>\smarty_modifiercompiler_to_charset</full_name>
      <docblock line="9">
        <description>Smarty to_charset modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     to_charset&lt;br&gt;
Purpose:  convert character encoding from internal encoding to $charset&lt;/p&gt;</long-description>
        <tag line="9" name="author" description="Rodney Rehm"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="20">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="20">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <markers>
      <fixme line="23">(rodneyrehm) shouldn't this throw an error?</fixme>
    </markers>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_to_charset()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifier.capitalize.php" hash="39a4825d3a4f272989274e935372f869" package="Smarty\PluginsModifier">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifier"/>
    </docblock>
    <function namespace="global" line="25" package="Smarty\PluginsModifier">
      <name>smarty_modifier_capitalize</name>
      <full_name>\smarty_modifier_capitalize</full_name>
      <docblock line="9">
        <description>Smarty capitalize modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     capitalize&lt;br&gt;
Purpose:  capitalize words in the string&lt;/p&gt;

&lt;p&gt;{@internal {$string|capitalize:true:true} is the fastest option for MBString enabled systems }}&lt;/p&gt;</long-description>
        <tag line="9" name="param" description="string to capitalize" type="string" variable="$string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="also capitalize &quot;x123&quot; to &quot;X123&quot;" type="boolean" variable="$uc_digits">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="9" name="param" description="capitalize first letters, lowercase all following letters &quot;aAa&quot; to &quot;Aaa&quot;" type="boolean" variable="$lc_rest">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="9" name="return" description="capitalized string" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="author" description="Rodney Rehm"/>
      </docblock>
      <argument line="25">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
      <argument line="25">
        <name>$uc_digits</name>
        <default>false</default>
        <type/>
      </argument>
      <argument line="25">
        <name>$lc_rest</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="73" package="Smarty\PluginsModifier">
      <name>smarty_mod_cap_mbconvert_cb</name>
      <full_name>\smarty_mod_cap_mbconvert_cb</full_name>
      <argument line="73">
        <name>$matches</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="77" package="Smarty\PluginsModifier">
      <name>smarty_mod_cap_mbconvert2_cb</name>
      <full_name>\smarty_mod_cap_mbconvert2_cb</full_name>
      <argument line="77">
        <name>$matches</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="81" package="Smarty\PluginsModifier">
      <name>smarty_mod_cap_ucfirst_cb</name>
      <full_name>\smarty_mod_cap_ucfirst_cb</full_name>
      <argument line="81">
        <name>$matches</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="85" package="Smarty\PluginsModifier">
      <name>smarty_mod_cap_ucfirst2_cb</name>
      <full_name>\smarty_mod_cap_ucfirst2_cb</full_name>
      <argument line="85">
        <name>$matches</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="73" code="50009">No DocBlock was found for function \smarty_mod_cap_mbconvert_cb()</error>
      <error line="77" code="50009">No DocBlock was found for function \smarty_mod_cap_mbconvert2_cb()</error>
      <error line="81" code="50009">No DocBlock was found for function \smarty_mod_cap_ucfirst_cb()</error>
      <error line="85" code="50009">No DocBlock was found for function \smarty_mod_cap_ucfirst2_cb()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.count_characters.php" hash="1202940b96edbd7dd76f1c48a3175f51" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="21" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_count_characters</name>
      <full_name>\smarty_modifiercompiler_count_characters</full_name>
      <docblock line="9">
        <description>Smarty count_characters modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     count_characteres&lt;br&gt;
Purpose:  count the number of characters in a text&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="count_characters (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.count.characters.php"/>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="21">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="21">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_count_characters()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.upper.php" hash="b6544cb6caf52df952b0bb81a96309f6" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="21" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_upper</name>
      <full_name>\smarty_modifiercompiler_upper</full_name>
      <docblock line="9">
        <description>Smarty upper modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     lower&lt;br&gt;
Purpose:  convert string to uppercase&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="lower (Smarty online manual)" link="http://smarty.php.net/manual/en/language.modifier.upper.php"/>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="21">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="21">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_upper()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.unescape.php" hash="5694dfff33f62222849dcf78bd6c6019" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="20" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_unescape</name>
      <full_name>\smarty_modifiercompiler_unescape</full_name>
      <docblock line="9">
        <description>Smarty unescape modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     unescape&lt;br&gt;
Purpose:  unescape html entities&lt;/p&gt;</long-description>
        <tag line="9" name="author" description="Rodney Rehm"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="20">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="20">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_unescape()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/function.html_image.php" hash="d9eb493fe806b9191da1c1dcee453559" package="Smarty\PluginsFunction">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsFunction"/>
    </docblock>
    <include line="39" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="global" line="37" package="Smarty\PluginsFunction">
      <name>smarty_function_html_image</name>
      <full_name>\smarty_function_html_image</full_name>
      <docblock line="9">
        <description>Smarty {html_image} function plugin</description>
        <long-description>&lt;p&gt;Type:     function&lt;br&gt;
Name:     html_image&lt;br&gt;
Date:     Feb 24, 2003&lt;br&gt;
Purpose:  format HTML tags for the image&lt;br&gt;
Examples: {html_image file="/images/masthead.gif"}&lt;br&gt;
Output:   &lt;img src="/images/masthead.gif" width=400 height=23&gt;&lt;br&gt;
Params:&lt;/p&gt;

&lt;pre&gt;
- file        - (required) - file (and path) of image
- height      - (optional) - image height (default actual height)
- width       - (optional) - image width (default actual width)
- basedir     - (optional) - base directory for absolute paths, default is environment variable DOCUMENT_ROOT
- path_prefix - prefix for path output (optional, default empty)
&lt;/pre&gt;</long-description>
        <tag line="9" name="link" description="{html_image}&#10;     (Smarty online manual)" link="http://www.smarty.net/manual/en/language.function.html.image.php"/>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="author" description="credits to Duda &lt;duda@big.hu&gt;"/>
        <tag line="9" name="version" description="1.0"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
          <type by_reference="false">\Smarty_Internal_Template</type>
        </tag>
        <tag line="9" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="uses" description="\global\smarty_function_escape_special_chars()" refers="\global\smarty_function_escape_special_chars()"/>
      </docblock>
      <argument line="37">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="37">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
    </function>
    <markers>
      <fixme line="122">(rodneyrehm) getimagesize() loads the complete file off a remote resource, use custom [jpg,png,gif]header reader!</fixme>
      <fixme line="149">(rodneyrehm) wrong dpi assumption</fixme>
    </markers>
  </file>
  <file path="libs/Smarty/plugins/shared.mb_unicode.php" hash="790a5acc89d13c8f4f43e7cbb8855cc8" package="Smarty\PluginsShared">
    <docblock line="2">
      <description>Smarty shared plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsShared"/>
    </docblock>
    <function namespace="global" line="18" package="Smarty\PluginsShared">
      <name>smarty_mb_to_unicode</name>
      <full_name>\smarty_mb_to_unicode</full_name>
      <docblock line="9">
        <description>convert characters to their decimal unicode equivalents</description>
        <long-description/>
        <tag line="9" name="link" description="for inspiration" link="http://www.ibm.com/developerworks/library/os-php-unicode/index.html#listing3"/>
        <tag line="9" name="param" description="characters to calculate unicode of" type="string" variable="$string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="encoding of $string, if null mb_internal_encoding() is used" type="string" variable="$encoding">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="return" description="sequence of unicodes" type="array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="author" description="Rodney Rehm"/>
      </docblock>
      <argument line="18">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
      <argument line="18">
        <name>$encoding</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="38" package="Smarty\PluginsShared">
      <name>smarty_mb_from_unicode</name>
      <full_name>\smarty_mb_from_unicode</full_name>
      <docblock line="29">
        <description>convert unicodes to the character of given encoding</description>
        <long-description/>
        <tag line="29" name="link" description="for inspiration" link="http://www.ibm.com/developerworks/library/os-php-unicode/index.html#listing3"/>
        <tag line="29" name="param" description="single unicode or list of unicodes to convert" type="integer|array" variable="$unicode">
          <type by_reference="false">integer</type>
          <type by_reference="false">array</type>
        </tag>
        <tag line="29" name="param" description="encoding of returned string, if null mb_internal_encoding() is used" type="string" variable="$encoding">
          <type by_reference="false">string</type>
        </tag>
        <tag line="29" name="return" description="unicode as character sequence in given $encoding" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="29" name="author" description="Rodney Rehm"/>
      </docblock>
      <argument line="38">
        <name>$unicode</name>
        <default/>
        <type/>
      </argument>
      <argument line="38">
        <name>$encoding</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifier.escape.php" hash="f2260be9611e8816f2a9b95f30b91def" package="Smarty\PluginsModifier">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifier"/>
    </docblock>
    <include line="117" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="136" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="158" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="169" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="global" line="24" package="Smarty\PluginsModifier">
      <name>smarty_modifier_escape</name>
      <full_name>\smarty_modifier_escape</full_name>
      <docblock line="9">
        <description>Smarty escape modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     escape&lt;br&gt;
Purpose:  escape string for output&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="count_characters (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.count.characters.php"/>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="param" description="input string" type="string" variable="$string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="escape type" type="string" variable="$esc_type">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="character set, used for htmlspecialchars() or htmlentities()" type="string" variable="$char_set">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="encode already encoded entitites again, used for htmlspecialchars() or htmlentities()" type="boolean" variable="$double_encode">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="9" name="return" description="escaped input string" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="24">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
      <argument line="24">
        <name>$esc_type</name>
        <default>'html'</default>
        <type/>
      </argument>
      <argument line="24">
        <name>$char_set</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="24">
        <name>$double_encode</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.lower.php" hash="7317a58a734b831c7d03e2c1ce6409a5" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="22" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_lower</name>
      <full_name>\smarty_modifiercompiler_lower</full_name>
      <docblock line="8">
        <description>Smarty lower modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     lower&lt;br&gt;
Purpose:  convert string to lowercase&lt;/p&gt;</long-description>
        <tag line="8" name="link" description="lower (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.lower.php"/>
        <tag line="8" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="8" name="author" description="Uwe Tews"/>
        <tag line="8" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="8" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="22">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="22">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="8" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_lower()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifier.regex_replace.php" hash="ffbbf55379b91892a040946a24671ed2" package="Smarty\PluginsModifier">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifier"/>
    </docblock>
    <function namespace="global" line="24" package="Smarty\PluginsModifier">
      <name>smarty_modifier_regex_replace</name>
      <full_name>\smarty_modifier_regex_replace</full_name>
      <docblock line="9">
        <description>Smarty regex_replace modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     regex_replace&lt;br&gt;
Purpose:  regular expression search/replace&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="regex_replace (Smarty online manual)" link="http://smarty.php.net/manual/en/language.modifier.regex.replace.php"/>
        <tag line="9" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
        <tag line="9" name="param" description="input string" type="string" variable="$string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="param" description="regular expression(s) to search for" type="string|array" variable="$search">
          <type by_reference="false">string</type>
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="param" description="string(s) that should be replaced" type="string|array" variable="$replace">
          <type by_reference="false">string</type>
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="24">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
      <argument line="24">
        <name>$search</name>
        <default/>
        <type/>
      </argument>
      <argument line="24">
        <name>$replace</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="42" package="Smarty\PluginsModifier">
      <name>_smarty_regex_replace_check</name>
      <full_name>\_smarty_regex_replace_check</full_name>
      <docblock line="37">
        <description/>
        <long-description/>
        <tag line="37" name="param" description="string(s) that should be replaced" type="string" variable="$search">
          <type by_reference="false">string</type>
        </tag>
        <tag line="37" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
        <tag line="37" name="ignore" description=""/>
      </docblock>
      <argument line="42">
        <name>$search</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.escape.php" hash="1a630626bcc3a8d0780370be97bdfe57" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <include line="12" type="Require Once" package="Default">
      <name/>
      <docblock line="9">
        <description/>
        <long-description/>
        <tag line="9" name="ignore" description=""/>
      </docblock>
    </include>
    <function namespace="global" line="26" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_escape</name>
      <full_name>\smarty_modifiercompiler_escape</full_name>
      <docblock line="14">
        <description>Smarty escape modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     escape&lt;br&gt;
Purpose:  escape string for output&lt;/p&gt;</long-description>
        <tag line="14" name="link" description="count_characters (Smarty online manual)" link="http://www.smarty.net/docsv2/en/language.modifier.escape"/>
        <tag line="14" name="author" description="Rodney Rehm"/>
        <tag line="14" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="14" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="26">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="26">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="14" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_escape()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.count_sentences.php" hash="e51fa4341442fe8d4c9d76e060761bac" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="22" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_count_sentences</name>
      <full_name>\smarty_modifiercompiler_count_sentences</full_name>
      <docblock line="9">
        <description>Smarty count_sentences modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     count_sentences
Purpose:  count the number of sentences in a text&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="count_sentences (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.count.paragraphs.php"/>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="22">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="22">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_count_sentences()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/plugins/modifiercompiler.default.php" hash="e3fe925da98d032e2fdf902b406495a3" package="Smarty\PluginsModifierCompiler">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsModifierCompiler"/>
    </docblock>
    <function namespace="global" line="21" package="Smarty\PluginsModifierCompiler">
      <name>smarty_modifiercompiler_default</name>
      <full_name>\smarty_modifiercompiler_default</full_name>
      <docblock line="9">
        <description>Smarty default modifier plugin</description>
        <long-description>&lt;p&gt;Type:     modifier&lt;br&gt;
Name:     default&lt;br&gt;
Purpose:  designate default value for empty variables&lt;/p&gt;</long-description>
        <tag line="9" name="link" description="default (Smarty online manual)" link="http://www.smarty.net/manual/en/language.modifier.default.php"/>
        <tag line="9" name="author" description="Uwe Tews"/>
        <tag line="9" name="param" description="parameters" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="9" name="return" description="with compiled code" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="21">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="21">
        <name>$compiler</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="9" code="50015">Argument $compiler is missing from the Docblock of \smarty_modifiercompiler_default()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/SmartyBC.class.php" hash="967c1b2bdc8a2a2512eac85b40f1f3cd" package="Smarty">
    <docblock line="2">
      <description>Project:     Smarty: the PHP compiling template engine
File:        SmartyBC.class.php
SVN:         $Id: $</description>
      <long-description>&lt;p&gt;This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.&lt;/p&gt;

&lt;p&gt;This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.&lt;/p&gt;

&lt;p&gt;You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&lt;/p&gt;

&lt;p&gt;For questions, help, comments, discussion, etc., please join the
Smarty mailing list. Send a blank e-mail to
smarty-discussion-subscribe@googlegroups.com&lt;/p&gt;</long-description>
      <tag line="2" name="link" description="http://www.smarty.net/" link="http://www.smarty.net/"/>
      <tag line="2" name="copyright" description="2008 New Digital Group, Inc."/>
      <tag line="2" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
      <tag line="2" name="author" description="Uwe Tews"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
      <tag line="2" name="package" description="Smarty"/>
    </docblock>
    <include line="35" type="Require" package="Default">
      <name/>
      <docblock line="32">
        <description/>
        <long-description/>
        <tag line="32" name="ignore" description=""/>
      </docblock>
    </include>
    <function namespace="global" line="454" package="Smarty">
      <name>smarty_php_tag</name>
      <full_name>\smarty_php_tag</full_name>
      <docblock line="445">
        <description>Smarty {php}{/php} block function</description>
        <long-description/>
        <tag line="445" name="param" description="parameter list" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="445" name="param" description="contents of the block" type="string" variable="$content">
          <type by_reference="false">string</type>
        </tag>
        <tag line="445" name="param" description="template object" type="object" variable="$template">
          <type by_reference="false">object</type>
        </tag>
        <tag line="445" name="param" description="&amp;$repeat  repeat flag" type="boolean" variable="$repeat">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="445" name="return" description="content re-formatted" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="454">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="454">
        <name>$content</name>
        <default/>
        <type/>
      </argument>
      <argument line="454">
        <name>$template</name>
        <default/>
        <type/>
      </argument>
      <argument line="454">
        <name>$repeat</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="42" package="Smarty">
      <extends>\Smarty</extends>
      <name>SmartyBC</name>
      <full_name>\SmartyBC</full_name>
      <docblock line="37">
        <description>Smarty Backward Compatability Wrapper Class</description>
        <long-description/>
        <tag line="37" name="package" description="Smarty"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="48" namespace="global" package="Default">
        <name>$_version</name>
        <default>self::SMARTY_VERSION</default>
        <docblock line="44">
          <description>Smarty 2 BC</description>
          <long-description/>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="Smarty">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="50">
          <description>Initialize new SmartyBC object</description>
          <long-description/>
          <tag line="50" name="param" description="options to set during initialization, e.g. array( 'forceCompile' =&gt; false )" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="Smarty">
        <name>assign_by_ref</name>
        <full_name>assign_by_ref</full_name>
        <docblock line="62">
          <description>wrapper for assign_by_ref</description>
          <long-description/>
          <tag line="62" name="param" description="the template variable name" type="string" variable="$tpl_var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="62" name="param" description="&amp;$value  the referenced value to assign" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$tpl_var</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Smarty">
        <name>append_by_ref</name>
        <full_name>append_by_ref</full_name>
        <docblock line="73">
          <description>wrapper for append_by_ref</description>
          <long-description/>
          <tag line="73" name="param" description="the template variable name" type="string" variable="$tpl_var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="param" description="&amp;$value  the referenced value to append" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="73" name="param" description="flag if array elements shall be merged" type="boolean" variable="$merge">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$tpl_var</name>
          <default/>
          <type/>
        </argument>
        <argument line="80">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="80">
          <name>$merge</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="Smarty">
        <name>clear_assign</name>
        <full_name>clear_assign</full_name>
        <docblock line="85">
          <description>clear the given assigned template variable.</description>
          <long-description/>
          <tag line="85" name="param" description="the template variable to clear" type="string" variable="$tpl_var">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$tpl_var</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Smarty">
        <name>register_function</name>
        <full_name>register_function</full_name>
        <docblock line="95">
          <description>Registers custom function to be used in templates</description>
          <long-description/>
          <tag line="95" name="param" description="the name of the template function" type="string" variable="$function">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="the name of the PHP function to register" type="string" variable="$function_impl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="" type="bool" variable="$cacheable">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="95" name="param" description="" type="mixed" variable="$cache_attrs">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$function_impl</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$cacheable</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="103">
          <name>$cache_attrs</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="113" package="Smarty">
        <name>unregister_function</name>
        <full_name>unregister_function</full_name>
        <docblock line="108">
          <description>Unregisters custom function</description>
          <long-description/>
          <tag line="108" name="param" description="name of template function" type="string" variable="$function">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="127" package="Smarty">
        <name>register_object</name>
        <full_name>register_object</full_name>
        <docblock line="118">
          <description>Registers object to be used in templates</description>
          <long-description/>
          <tag line="118" name="param" description="name of template object" type="string" variable="$object">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="param" description="the referenced PHP object to register" type="object" variable="$object_impl">
            <type by_reference="false">object</type>
          </tag>
          <tag line="118" name="param" description="list of allowed methods (empty = all)" type="array" variable="$allowed">
            <type by_reference="false">array</type>
          </tag>
          <tag line="118" name="param" description="smarty argument format, else traditional" type="boolean" variable="$smarty_args">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="118" name="param" description="list of methods that are block format" type="array" variable="$block_functs">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
        <argument line="127">
          <name>$object_impl</name>
          <default/>
          <type/>
        </argument>
        <argument line="127">
          <name>$allowed</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="127">
          <name>$smarty_args</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="127">
          <name>$block_methods</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="139" package="Smarty">
        <name>unregister_object</name>
        <full_name>unregister_object</full_name>
        <docblock line="134">
          <description>Unregisters object</description>
          <long-description/>
          <tag line="134" name="param" description="name of template object" type="string" variable="$object">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="152" package="Smarty">
        <name>register_block</name>
        <full_name>register_block</full_name>
        <docblock line="144">
          <description>Registers block function to be used in templates</description>
          <long-description/>
          <tag line="144" name="param" description="name of template block" type="string" variable="$block">
            <type by_reference="false">string</type>
          </tag>
          <tag line="144" name="param" description="PHP function to register" type="string" variable="$block_impl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="144" name="param" description="" type="bool" variable="$cacheable">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="144" name="param" description="" type="mixed" variable="$cache_attrs">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$block</name>
          <default/>
          <type/>
        </argument>
        <argument line="152">
          <name>$block_impl</name>
          <default/>
          <type/>
        </argument>
        <argument line="152">
          <name>$cacheable</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="152">
          <name>$cache_attrs</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="Smarty">
        <name>unregister_block</name>
        <full_name>unregister_block</full_name>
        <docblock line="157">
          <description>Unregisters block function</description>
          <long-description/>
          <tag line="157" name="param" description="name of template function" type="string" variable="$block">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$block</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Smarty">
        <name>register_compiler_function</name>
        <full_name>register_compiler_function</full_name>
        <docblock line="167">
          <description>Registers compiler function</description>
          <long-description/>
          <tag line="167" name="param" description="name of template function" type="string" variable="$function">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="name of PHP function to register" type="string" variable="$function_impl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="" type="bool" variable="$cacheable">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
        <argument line="174">
          <name>$function_impl</name>
          <default/>
          <type/>
        </argument>
        <argument line="174">
          <name>$cacheable</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="184" package="Smarty">
        <name>unregister_compiler_function</name>
        <full_name>unregister_compiler_function</full_name>
        <docblock line="179">
          <description>Unregisters compiler function</description>
          <long-description/>
          <tag line="179" name="param" description="name of template function" type="string" variable="$function">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="Smarty">
        <name>register_modifier</name>
        <full_name>register_modifier</full_name>
        <docblock line="189">
          <description>Registers modifier to be used in templates</description>
          <long-description/>
          <tag line="189" name="param" description="name of template modifier" type="string" variable="$modifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="param" description="name of PHP function to register" type="string" variable="$modifier_impl">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$modifier</name>
          <default/>
          <type/>
        </argument>
        <argument line="195">
          <name>$modifier_impl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="Smarty">
        <name>unregister_modifier</name>
        <full_name>unregister_modifier</full_name>
        <docblock line="200">
          <description>Unregisters modifier</description>
          <long-description/>
          <tag line="200" name="param" description="name of template modifier" type="string" variable="$modifier">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$modifier</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="216" package="Smarty">
        <name>register_resource</name>
        <full_name>register_resource</full_name>
        <docblock line="210">
          <description>Registers a resource to fetch a template</description>
          <long-description/>
          <tag line="210" name="param" description="name of resource" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="210" name="param" description="array of functions to handle resource" type="array" variable="$functions">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="216">
          <name>$functions</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="226" package="Smarty">
        <name>unregister_resource</name>
        <full_name>unregister_resource</full_name>
        <docblock line="221">
          <description>Unregisters a resource</description>
          <long-description/>
          <tag line="221" name="param" description="name of resource" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="226">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="237" package="Smarty">
        <name>register_prefilter</name>
        <full_name>register_prefilter</full_name>
        <docblock line="231">
          <description>Registers a prefilter function to apply
to a template before compiling</description>
          <long-description/>
          <tag line="231" name="param" description="" type="callable" variable="$function">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="247" package="Smarty">
        <name>unregister_prefilter</name>
        <full_name>unregister_prefilter</full_name>
        <docblock line="242">
          <description>Unregisters a prefilter function</description>
          <long-description/>
          <tag line="242" name="param" description="" type="callable" variable="$function">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="258" package="Smarty">
        <name>register_postfilter</name>
        <full_name>register_postfilter</full_name>
        <docblock line="252">
          <description>Registers a postfilter function to apply
to a compiled template after compilation</description>
          <long-description/>
          <tag line="252" name="param" description="" type="callable" variable="$function">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="268" package="Smarty">
        <name>unregister_postfilter</name>
        <full_name>unregister_postfilter</full_name>
        <docblock line="263">
          <description>Unregisters a postfilter function</description>
          <long-description/>
          <tag line="263" name="param" description="" type="callable" variable="$function">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
        <argument line="268">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="279" package="Smarty">
        <name>register_outputfilter</name>
        <full_name>register_outputfilter</full_name>
        <docblock line="273">
          <description>Registers an output filter function to apply
to a template output</description>
          <long-description/>
          <tag line="273" name="param" description="" type="callable" variable="$function">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
        <argument line="279">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="Smarty">
        <name>unregister_outputfilter</name>
        <full_name>unregister_outputfilter</full_name>
        <docblock line="284">
          <description>Unregisters an outputfilter function</description>
          <long-description/>
          <tag line="284" name="param" description="" type="callable" variable="$function">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
        <argument line="289">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="300" package="Smarty">
        <name>load_filter</name>
        <full_name>load_filter</full_name>
        <docblock line="294">
          <description>load a filter of specified type and name</description>
          <long-description/>
          <tag line="294" name="param" description="filter type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="294" name="param" description="filter name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="314" package="Smarty">
        <name>clear_cache</name>
        <full_name>clear_cache</full_name>
        <docblock line="305">
          <description>clear cached content for the given template and cache id</description>
          <long-description/>
          <tag line="305" name="param" description="name of template file" type="string" variable="$tpl_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="305" name="param" description="name of cache_id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="305" name="param" description="name of compile_id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="305" name="param" description="expiration time" type="string" variable="$exp_time">
            <type by_reference="false">string</type>
          </tag>
          <tag line="305" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="314">
          <name>$tpl_file</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="314">
          <name>$cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="314">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="314">
          <name>$exp_time</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="325" package="Smarty">
        <name>clear_all_cache</name>
        <full_name>clear_all_cache</full_name>
        <docblock line="319">
          <description>clear the entire contents of cache (all templates)</description>
          <long-description/>
          <tag line="319" name="param" description="expire time" type="string" variable="$exp_time">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="325">
          <name>$exp_time</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="338" package="Smarty">
        <name>is_cached</name>
        <full_name>is_cached</full_name>
        <docblock line="330">
          <description>test to see if valid cache exists for this template</description>
          <long-description/>
          <tag line="330" name="param" description="name of template file" type="string" variable="$tpl_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="330" name="param" description="" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="330" name="param" description="" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="330" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="338">
          <name>$tpl_file</name>
          <default/>
          <type/>
        </argument>
        <argument line="338">
          <name>$cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="338">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="346" package="Smarty">
        <name>clear_all_assign</name>
        <full_name>clear_all_assign</full_name>
        <docblock line="343">
          <description>clear all the assigned template variables.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="361" package="Smarty">
        <name>clear_compiled_tpl</name>
        <full_name>clear_compiled_tpl</full_name>
        <docblock line="351">
          <description>clears compiled version of specified template resource,
or all compiled template files if one is not specified.</description>
          <long-description>&lt;p&gt;This function is for advanced use only, not normally needed.&lt;/p&gt;</long-description>
          <tag line="351" name="param" description="" type="string" variable="$tpl_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="351" name="param" description="" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="351" name="param" description="" type="string" variable="$exp_time">
            <type by_reference="false">string</type>
          </tag>
          <tag line="351" name="return" description="results of {@link smarty_core_rm_auto()}" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="361">
          <name>$tpl_file</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="361">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="361">
          <name>$exp_time</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="372" package="Smarty">
        <name>template_exists</name>
        <full_name>template_exists</full_name>
        <docblock line="366">
          <description>Checks whether requested template exists.</description>
          <long-description/>
          <tag line="366" name="param" description="" type="string" variable="$tpl_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="366" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="372">
          <name>$tpl_file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="383" package="Smarty">
        <name>get_template_vars</name>
        <full_name>get_template_vars</full_name>
        <docblock line="377">
          <description>Returns an array containing template variables</description>
          <long-description/>
          <tag line="377" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="377" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="383">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="394" package="Smarty">
        <name>get_config_vars</name>
        <full_name>get_config_vars</full_name>
        <docblock line="388">
          <description>Returns an array containing config variables</description>
          <long-description/>
          <tag line="388" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="388" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="394">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="406" package="Smarty">
        <name>config_load</name>
        <full_name>config_load</full_name>
        <docblock line="399">
          <description>load configuration values</description>
          <long-description/>
          <tag line="399" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="399" name="param" description="" type="string" variable="$section">
            <type by_reference="false">string</type>
          </tag>
          <tag line="399" name="param" description="" type="string" variable="$scope">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="406">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
        <argument line="406">
          <name>$section</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="406">
          <name>$scope</name>
          <default>'global'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="417" package="Smarty">
        <name>get_registered_object</name>
        <full_name>get_registered_object</full_name>
        <docblock line="411">
          <description>return a reference to a registered object</description>
          <long-description/>
          <tag line="411" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="411" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="417">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="427" package="Smarty">
        <name>clear_config</name>
        <full_name>clear_config</full_name>
        <docblock line="422">
          <description>clear configuration values</description>
          <long-description/>
          <tag line="422" name="param" description="" type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="427">
          <name>$var</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="438" package="Smarty">
        <name>trigger_error</name>
        <full_name>trigger_error</full_name>
        <docblock line="432">
          <description>trigger Smarty error</description>
          <long-description/>
          <tag line="432" name="param" description="" type="string" variable="$error_msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="param" description="" type="integer" variable="$error_type">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="438">
          <name>$error_msg</name>
          <default/>
          <type/>
        </argument>
        <argument line="438">
          <name>$error_type</name>
          <default>E_USER_WARNING</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="118" code="50014">Name of argument $block_methods does not match with the DocBlock's name $block_functs in register_object()</error>
      <notice line="118" code="50013">Parameter $block_functs could not be found in register_object()</notice>
    </parse_markers>
  </file>
  <file path="libs/Smarty/Smarty.class.php" hash="f48ccf3e07105fa38102a0c52c283e2c" package="Smarty">
    <docblock line="2">
      <description>Project:     Smarty: the PHP compiling template engine
File:        Smarty.class.php
SVN:         $Id: Smarty.class.php 4800 2013-12-15 15:19:01Z Uwe.Tews@googlemail.com $</description>
      <long-description>&lt;p&gt;This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.&lt;/p&gt;

&lt;p&gt;This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.&lt;/p&gt;

&lt;p&gt;You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&lt;/p&gt;

&lt;p&gt;For questions, help, comments, discussion, etc., please join the
Smarty mailing list. Send a blank e-mail to
smarty-discussion-subscribe@googlegroups.com&lt;/p&gt;</long-description>
      <tag line="2" name="link" description="http://www.smarty.net/" link="http://www.smarty.net/"/>
      <tag line="2" name="copyright" description="2008 New Digital Group, Inc."/>
      <tag line="2" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
      <tag line="2" name="author" description="Uwe Tews"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="version" description="3.1-DEV"/>
    </docblock>
    <include line="95" type="Include Once" package="Default">
      <name/>
      <docblock line="92">
        <description>Load always needed external class files</description>
        <long-description/>
      </docblock>
    </include>
    <include line="96" type="Include Once" package="Default">
      <name/>
    </include>
    <include line="97" type="Include Once" package="Default">
      <name/>
    </include>
    <include line="98" type="Include Once" package="Default">
      <name/>
    </include>
    <include line="99" type="Include Once" package="Default">
      <name/>
    </include>
    <include line="100" type="Include Once" package="Default">
      <name/>
    </include>
    <include line="101" type="Include Once" package="Default">
      <name/>
    </include>
    <include line="1299" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="1319" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="1332" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="1578" type="Include" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="38" package="Smarty">
      <name>DS</name>
      <full_name>\DS</full_name>
      <value>DIRECTORY_SEPARATOR</value>
    </constant>
    <constant namespace="global" line="46" package="Smarty">
      <name>SMARTY_DIR</name>
      <full_name>\SMARTY_DIR</full_name>
      <value>dirname(__FILE__) . DS</value>
    </constant>
    <constant namespace="global" line="54" package="Smarty">
      <name>SMARTY_SYSPLUGINS_DIR</name>
      <full_name>\SMARTY_SYSPLUGINS_DIR</full_name>
      <value>SMARTY_DIR . 'sysplugins' . DS</value>
    </constant>
    <constant namespace="global" line="57" package="Smarty">
      <name>SMARTY_PLUGINS_DIR</name>
      <full_name>\SMARTY_PLUGINS_DIR</full_name>
      <value>SMARTY_DIR . 'plugins' . DS</value>
    </constant>
    <constant namespace="global" line="60" package="Smarty">
      <name>SMARTY_MBSTRING</name>
      <full_name>\SMARTY_MBSTRING</full_name>
      <value>function_exists('mb_split')</value>
    </constant>
    <constant namespace="global" line="67" package="Smarty">
      <name>SMARTY_RESOURCE_CHAR_SET</name>
      <full_name>\SMARTY_RESOURCE_CHAR_SET</full_name>
      <value>SMARTY_MBSTRING ? 'UTF-8' : 'ISO-8859-1'</value>
    </constant>
    <constant namespace="global" line="73" package="Smarty">
      <name>SMARTY_RESOURCE_DATE_FORMAT</name>
      <full_name>\SMARTY_RESOURCE_DATE_FORMAT</full_name>
      <value>'%b %e, %Y'</value>
    </constant>
    <constant namespace="global" line="80" package="Smarty">
      <name>SMARTY_SPL_AUTOLOAD</name>
      <full_name>\SMARTY_SPL_AUTOLOAD</full_name>
      <value>0</value>
    </constant>
    <function namespace="global" line="1561" package="Smarty">
      <name>smartyAutoload</name>
      <full_name>\smartyAutoload</full_name>
      <docblock line="1558">
        <description>Autoloader</description>
        <long-description/>
      </docblock>
      <argument line="1561">
        <name>$class</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="107" package="Smarty">
      <extends>\Smarty_Internal_TemplateBase</extends>
      <name>Smarty</name>
      <full_name>\Smarty</full_name>
      <docblock line="103">
        <description>This is the main Smarty class</description>
        <long-description/>
        <tag line="103" name="package" description="Smarty"/>
      </docblock>
      <constant namespace="global" line="116" package="Smarty">
        <name>SMARTY_VERSION</name>
        <full_name>SMARTY_VERSION</full_name>
        <value>'Smarty-3.1.16'</value>
        <docblock line="113">
          <description>smarty version</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="121" package="Smarty">
        <name>SCOPE_LOCAL</name>
        <full_name>SCOPE_LOCAL</full_name>
        <value>0</value>
        <docblock line="118">
          <description>define variable scopes</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="122" package="Smarty">
        <name>SCOPE_PARENT</name>
        <full_name>SCOPE_PARENT</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="123" package="Smarty">
        <name>SCOPE_ROOT</name>
        <full_name>SCOPE_ROOT</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="124" package="Smarty">
        <name>SCOPE_GLOBAL</name>
        <full_name>SCOPE_GLOBAL</full_name>
        <value>3</value>
      </constant>
      <constant namespace="global" line="128" package="Smarty">
        <name>CACHING_OFF</name>
        <full_name>CACHING_OFF</full_name>
        <value>0</value>
        <docblock line="125">
          <description>define caching modes</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="129" package="Smarty">
        <name>CACHING_LIFETIME_CURRENT</name>
        <full_name>CACHING_LIFETIME_CURRENT</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="130" package="Smarty">
        <name>CACHING_LIFETIME_SAVED</name>
        <full_name>CACHING_LIFETIME_SAVED</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="134" package="Smarty">
        <name>CLEAR_EXPIRED</name>
        <full_name>CLEAR_EXPIRED</full_name>
        <value>-1</value>
        <docblock line="131">
          <description>define constant for clearing cache files be saved expiration datees</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="139" package="Smarty">
        <name>COMPILECHECK_OFF</name>
        <full_name>COMPILECHECK_OFF</full_name>
        <value>0</value>
        <docblock line="136">
          <description>define compile check modes</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="140" package="Smarty">
        <name>COMPILECHECK_ON</name>
        <full_name>COMPILECHECK_ON</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="141" package="Smarty">
        <name>COMPILECHECK_CACHEMISS</name>
        <full_name>COMPILECHECK_CACHEMISS</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="145" package="Smarty">
        <name>PHP_PASSTHRU</name>
        <full_name>PHP_PASSTHRU</full_name>
        <value>0</value>
        <docblock line="142">
          <description>modes for handling of "&lt;?php .</description>
          <long-description>&lt;p&gt;.. ?&gt;" tags in templates.&lt;/p&gt;</long-description>
        </docblock>
      </constant>
      <constant namespace="global" line="146" package="Smarty">
        <name>PHP_QUOTE</name>
        <full_name>PHP_QUOTE</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="147" package="Smarty">
        <name>PHP_REMOVE</name>
        <full_name>PHP_REMOVE</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="148" package="Smarty">
        <name>PHP_ALLOW</name>
        <full_name>PHP_ALLOW</full_name>
        <value>3</value>
      </constant>
      <constant namespace="global" line="152" package="Smarty">
        <name>FILTER_POST</name>
        <full_name>FILTER_POST</full_name>
        <value>'post'</value>
        <docblock line="149">
          <description>filter types</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="153" package="Smarty">
        <name>FILTER_PRE</name>
        <full_name>FILTER_PRE</full_name>
        <value>'pre'</value>
      </constant>
      <constant namespace="global" line="154" package="Smarty">
        <name>FILTER_OUTPUT</name>
        <full_name>FILTER_OUTPUT</full_name>
        <value>'output'</value>
      </constant>
      <constant namespace="global" line="155" package="Smarty">
        <name>FILTER_VARIABLE</name>
        <full_name>FILTER_VARIABLE</full_name>
        <value>'variable'</value>
      </constant>
      <constant namespace="global" line="159" package="Smarty">
        <name>PLUGIN_FUNCTION</name>
        <full_name>PLUGIN_FUNCTION</full_name>
        <value>'function'</value>
        <docblock line="156">
          <description>plugin types</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="160" package="Smarty">
        <name>PLUGIN_BLOCK</name>
        <full_name>PLUGIN_BLOCK</full_name>
        <value>'block'</value>
      </constant>
      <constant namespace="global" line="161" package="Smarty">
        <name>PLUGIN_COMPILER</name>
        <full_name>PLUGIN_COMPILER</full_name>
        <value>'compiler'</value>
      </constant>
      <constant namespace="global" line="162" package="Smarty">
        <name>PLUGIN_MODIFIER</name>
        <full_name>PLUGIN_MODIFIER</full_name>
        <value>'modifier'</value>
      </constant>
      <constant namespace="global" line="163" package="Smarty">
        <name>PLUGIN_MODIFIERCOMPILER</name>
        <full_name>PLUGIN_MODIFIERCOMPILER</full_name>
        <value>'modifiercompiler'</value>
      </constant>
      <property final="false" static="true" visibility="public" line="170" namespace="global" package="Default">
        <name>$global_tpl_vars</name>
        <default>array()</default>
        <docblock line="167">
          <description>assigned global tpl vars</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="175" namespace="global" package="Default">
        <name>$_previous_error_handler</name>
        <default>null</default>
        <docblock line="172">
          <description>error handler returned by set_error_hanlder() in Smarty::muteExpectedErrors()</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="179" namespace="global" package="Default">
        <name>$_muted_directories</name>
        <default>array()</default>
        <docblock line="176">
          <description>contains directories outside of SMARTY_DIR that are to be muted by muteExpectedErrors()</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="183" namespace="global" package="Default">
        <name>$_MBSTRING</name>
        <default>SMARTY_MBSTRING</default>
        <docblock line="180">
          <description>Flag denoting if Multibyte String functions are available</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="187" namespace="global" package="Default">
        <name>$_CHARSET</name>
        <default>SMARTY_RESOURCE_CHAR_SET</default>
        <docblock line="184">
          <description>The character set to adhere to (e.g.</description>
          <long-description>&lt;p&gt;"UTF-8")&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="192" namespace="global" package="Default">
        <name>$_DATE_FORMAT</name>
        <default>SMARTY_RESOURCE_DATE_FORMAT</default>
        <docblock line="188">
          <description>The date format to be used internally
(accepts date() and strftime())</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="196" namespace="global" package="Default">
        <name>$_UTF8_MODIFIER</name>
        <default>'u'</default>
        <docblock line="193">
          <description>Flag denoting if PCRE should run in UTF-8 mode</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="201" namespace="global" package="Default">
        <name>$_IS_WINDOWS</name>
        <default>false</default>
        <docblock line="198">
          <description>Flag denoting if operating system is windows</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="211" namespace="global" package="Default">
        <name>$auto_literal</name>
        <default>true</default>
        <docblock line="207">
          <description>auto literal on delimiters with whitspace</description>
          <long-description/>
          <tag line="207" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="216" namespace="global" package="Default">
        <name>$error_unassigned</name>
        <default>false</default>
        <docblock line="212">
          <description>display error on not assigned variables</description>
          <long-description/>
          <tag line="212" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="221" namespace="global" package="Default">
        <name>$use_include_path</name>
        <default>false</default>
        <docblock line="217">
          <description>look up relative filepaths in include_path</description>
          <long-description/>
          <tag line="217" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="226" namespace="global" package="Default">
        <name>$template_dir</name>
        <default>array()</default>
        <docblock line="222">
          <description>template directory</description>
          <long-description/>
          <tag line="222" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="231" namespace="global" package="Default">
        <name>$joined_template_dir</name>
        <default>null</default>
        <docblock line="227">
          <description>joined template directory string used in cache keys</description>
          <long-description/>
          <tag line="227" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="236" namespace="global" package="Default">
        <name>$joined_config_dir</name>
        <default>null</default>
        <docblock line="232">
          <description>joined config directory string used in cache keys</description>
          <long-description/>
          <tag line="232" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="241" namespace="global" package="Default">
        <name>$default_template_handler_func</name>
        <default>null</default>
        <docblock line="237">
          <description>default template handler</description>
          <long-description/>
          <tag line="237" name="var" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="246" namespace="global" package="Default">
        <name>$default_config_handler_func</name>
        <default>null</default>
        <docblock line="242">
          <description>default config handler</description>
          <long-description/>
          <tag line="242" name="var" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="251" namespace="global" package="Default">
        <name>$default_plugin_handler_func</name>
        <default>null</default>
        <docblock line="247">
          <description>default plugin handler</description>
          <long-description/>
          <tag line="247" name="var" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="256" namespace="global" package="Default">
        <name>$compile_dir</name>
        <default>null</default>
        <docblock line="252">
          <description>compile directory</description>
          <long-description/>
          <tag line="252" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="261" namespace="global" package="Default">
        <name>$plugins_dir</name>
        <default>array()</default>
        <docblock line="257">
          <description>plugins directory</description>
          <long-description/>
          <tag line="257" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="266" namespace="global" package="Default">
        <name>$cache_dir</name>
        <default>null</default>
        <docblock line="262">
          <description>cache directory</description>
          <long-description/>
          <tag line="262" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="271" namespace="global" package="Default">
        <name>$config_dir</name>
        <default>array()</default>
        <docblock line="267">
          <description>config directory</description>
          <long-description/>
          <tag line="267" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="276" namespace="global" package="Default">
        <name>$force_compile</name>
        <default>false</default>
        <docblock line="272">
          <description>force template compiling?</description>
          <long-description/>
          <tag line="272" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="281" namespace="global" package="Default">
        <name>$compile_check</name>
        <default>true</default>
        <docblock line="277">
          <description>check template for modifications?</description>
          <long-description/>
          <tag line="277" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="286" namespace="global" package="Default">
        <name>$use_sub_dirs</name>
        <default>false</default>
        <docblock line="282">
          <description>use sub dirs for compiled/cached files?</description>
          <long-description/>
          <tag line="282" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="291" namespace="global" package="Default">
        <name>$allow_ambiguous_resources</name>
        <default>false</default>
        <docblock line="287">
          <description>allow ambiguous resources (that are made unique by the resource handler)</description>
          <long-description/>
          <tag line="287" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="296" namespace="global" package="Default">
        <name>$caching</name>
        <default>false</default>
        <docblock line="292">
          <description>caching enabled</description>
          <long-description/>
          <tag line="292" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="301" namespace="global" package="Default">
        <name>$merge_compiled_includes</name>
        <default>false</default>
        <docblock line="297">
          <description>merge compiled includes</description>
          <long-description/>
          <tag line="297" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="306" namespace="global" package="Default">
        <name>$inheritance_merge_compiled_includes</name>
        <default>true</default>
        <docblock line="302">
          <description>template inheritance merge compiled includes</description>
          <long-description/>
          <tag line="302" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="311" namespace="global" package="Default">
        <name>$cache_lifetime</name>
        <default>3600</default>
        <docblock line="307">
          <description>cache lifetime in seconds</description>
          <long-description/>
          <tag line="307" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="316" namespace="global" package="Default">
        <name>$force_cache</name>
        <default>false</default>
        <docblock line="312">
          <description>force cache file creation</description>
          <long-description/>
          <tag line="312" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="323" namespace="global" package="Default">
        <name>$cache_id</name>
        <default>null</default>
        <docblock line="317">
          <description>Set this if you want different sets of cache files for the same
templates.</description>
          <long-description/>
          <tag line="317" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="330" namespace="global" package="Default">
        <name>$compile_id</name>
        <default>null</default>
        <docblock line="324">
          <description>Set this if you want different sets of compiled files for the same
templates.</description>
          <long-description/>
          <tag line="324" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="335" namespace="global" package="Default">
        <name>$left_delimiter</name>
        <default>"{"</default>
        <docblock line="331">
          <description>template left-delimiter</description>
          <long-description/>
          <tag line="331" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="340" namespace="global" package="Default">
        <name>$right_delimiter</name>
        <default>"}"</default>
        <docblock line="336">
          <description>template right-delimiter</description>
          <long-description/>
          <tag line="336" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="352" namespace="global" package="Default">
        <name>$security_class</name>
        <default>'Smarty_Security'</default>
        <docblock line="344">
          <description>class name</description>
          <long-description>&lt;p&gt;This should be instance of Smarty_Security.&lt;/p&gt;</long-description>
          <tag line="344" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="344" name="see" description="\Smarty_Security" refers="\Smarty_Security"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="358" namespace="global" package="Default">
        <name>$security_policy</name>
        <default>null</default>
        <docblock line="353">
          <description>implementation of security class</description>
          <long-description/>
          <tag line="353" name="var" description="" type="\Smarty_Security">
            <type by_reference="false">\Smarty_Security</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="364" namespace="global" package="Default">
        <name>$php_handling</name>
        <default>self::PHP_PASSTHRU</default>
        <docblock line="359">
          <description>controls handling of PHP-blocks</description>
          <long-description/>
          <tag line="359" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="370" namespace="global" package="Default">
        <name>$allow_php_templates</name>
        <default>false</default>
        <docblock line="365">
          <description>controls if the php template file resource is allowed</description>
          <long-description/>
          <tag line="365" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="380" namespace="global" package="Default">
        <name>$direct_access_security</name>
        <default>true</default>
        <docblock line="371">
          <description>Should compiled-templates be prevented from being called directly?</description>
          <long-description>&lt;p&gt;{@internal
Currently used by Smarty_Internal_Template only.
}}&lt;/p&gt;</long-description>
          <tag line="371" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="389" namespace="global" package="Default">
        <name>$debugging</name>
        <default>false</default>
        <docblock line="382">
          <description>debug mode</description>
          <long-description>&lt;p&gt;Setting this to true enables the debug-console.&lt;/p&gt;</long-description>
          <tag line="382" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="398" namespace="global" package="Default">
        <name>$debugging_ctrl</name>
        <default>'NONE'</default>
        <docblock line="390">
          <description>This determines if debugging is enable-able from the browser.</description>
          <long-description>&lt;ul&gt;
 &lt;li&gt;NONE =&gt; no debugging control allowed&lt;/li&gt;
 &lt;li&gt;URL =&gt; enable debugging when SMARTY_DEBUG is found in the URL.&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="390" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="407" namespace="global" package="Default">
        <name>$smarty_debug_id</name>
        <default>'SMARTY_DEBUG'</default>
        <docblock line="399">
          <description>Name of debugging URL-param.</description>
          <long-description>&lt;p&gt;Only used when $debugging_ctrl is set to 'URL'.
The name of the URL-parameter that activates debugging.&lt;/p&gt;</long-description>
          <tag line="399" name="var" description="" type="\type">
            <type by_reference="false">\type</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="412" namespace="global" package="Default">
        <name>$debug_tpl</name>
        <default>null</default>
        <docblock line="408">
          <description>Path of debug template.</description>
          <long-description/>
          <tag line="408" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="417" namespace="global" package="Default">
        <name>$error_reporting</name>
        <default>null</default>
        <docblock line="413">
          <description>When set, smarty uses this value as error_reporting-level.</description>
          <long-description/>
          <tag line="413" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="422" namespace="global" package="Default">
        <name>$get_used_tags</name>
        <default>false</default>
        <docblock line="418">
          <description>Internal flag for getTags()</description>
          <long-description/>
          <tag line="418" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="432" namespace="global" package="Default">
        <name>$config_overwrite</name>
        <default>true</default>
        <docblock line="428">
          <description>Controls whether variables with the same name overwrite each other.</description>
          <long-description/>
          <tag line="428" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="437" namespace="global" package="Default">
        <name>$config_booleanize</name>
        <default>true</default>
        <docblock line="433">
          <description>Controls whether config values of on/true/yes and off/false/no get converted to boolean.</description>
          <long-description/>
          <tag line="433" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="442" namespace="global" package="Default">
        <name>$config_read_hidden</name>
        <default>false</default>
        <docblock line="438">
          <description>Controls whether hidden config sections/vars are read from the file.</description>
          <long-description/>
          <tag line="438" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="454" namespace="global" package="Default">
        <name>$compile_locking</name>
        <default>true</default>
        <docblock line="450">
          <description>locking concurrent compiles</description>
          <long-description/>
          <tag line="450" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="459" namespace="global" package="Default">
        <name>$cache_locking</name>
        <default>false</default>
        <docblock line="455">
          <description>Controls whether cache resources should emply locking mechanism</description>
          <long-description/>
          <tag line="455" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="464" namespace="global" package="Default">
        <name>$locking_timeout</name>
        <default>10</default>
        <docblock line="460">
          <description>seconds to wait for acquiring a lock before ignoring the write lock</description>
          <long-description/>
          <tag line="460" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="472" namespace="global" package="Default">
        <name>$template_functions</name>
        <default>array()</default>
        <docblock line="468">
          <description>global template functions</description>
          <long-description/>
          <tag line="468" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="479" namespace="global" package="Default">
        <name>$default_resource_type</name>
        <default>'file'</default>
        <docblock line="473">
          <description>resource type used if none given</description>
          <long-description>&lt;p&gt;Must be an valid key of $registered_resources.&lt;/p&gt;</long-description>
          <tag line="473" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="487" namespace="global" package="Default">
        <name>$caching_type</name>
        <default>'file'</default>
        <docblock line="480">
          <description>caching type</description>
          <long-description>&lt;p&gt;Must be an element of $cache_resource_types.&lt;/p&gt;</long-description>
          <tag line="480" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="492" namespace="global" package="Default">
        <name>$properties</name>
        <default>array()</default>
        <docblock line="488">
          <description>internal config properties</description>
          <long-description/>
          <tag line="488" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="497" namespace="global" package="Default">
        <name>$default_config_type</name>
        <default>'file'</default>
        <docblock line="493">
          <description>config type</description>
          <long-description/>
          <tag line="493" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="502" namespace="global" package="Default">
        <name>$template_objects</name>
        <default>array()</default>
        <docblock line="498">
          <description>cached template objects</description>
          <long-description/>
          <tag line="498" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="507" namespace="global" package="Default">
        <name>$cache_modified_check</name>
        <default>false</default>
        <docblock line="503">
          <description>check If-Modified-Since headers</description>
          <long-description/>
          <tag line="503" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="512" namespace="global" package="Default">
        <name>$registered_plugins</name>
        <default>array()</default>
        <docblock line="508">
          <description>registered plugins</description>
          <long-description/>
          <tag line="508" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="517" namespace="global" package="Default">
        <name>$plugin_search_order</name>
        <default>array('function', 'block', 'compiler', 'class')</default>
        <docblock line="513">
          <description>plugin search order</description>
          <long-description/>
          <tag line="513" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="522" namespace="global" package="Default">
        <name>$registered_objects</name>
        <default>array()</default>
        <docblock line="518">
          <description>registered objects</description>
          <long-description/>
          <tag line="518" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="527" namespace="global" package="Default">
        <name>$registered_classes</name>
        <default>array()</default>
        <docblock line="523">
          <description>registered classes</description>
          <long-description/>
          <tag line="523" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="532" namespace="global" package="Default">
        <name>$registered_filters</name>
        <default>array()</default>
        <docblock line="528">
          <description>registered filters</description>
          <long-description/>
          <tag line="528" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="537" namespace="global" package="Default">
        <name>$registered_resources</name>
        <default>array()</default>
        <docblock line="533">
          <description>registered resources</description>
          <long-description/>
          <tag line="533" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="542" namespace="global" package="Default">
        <name>$_resource_handlers</name>
        <default>array()</default>
        <docblock line="538">
          <description>resource handler cache</description>
          <long-description/>
          <tag line="538" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="547" namespace="global" package="Default">
        <name>$registered_cache_resources</name>
        <default>array()</default>
        <docblock line="543">
          <description>registered cache resources</description>
          <long-description/>
          <tag line="543" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="552" namespace="global" package="Default">
        <name>$_cacheresource_handlers</name>
        <default>array()</default>
        <docblock line="548">
          <description>cache resource handler cache</description>
          <long-description/>
          <tag line="548" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="557" namespace="global" package="Default">
        <name>$autoload_filters</name>
        <default>array()</default>
        <docblock line="553">
          <description>autoload filter</description>
          <long-description/>
          <tag line="553" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="562" namespace="global" package="Default">
        <name>$default_modifiers</name>
        <default>array()</default>
        <docblock line="558">
          <description>default modifier</description>
          <long-description/>
          <tag line="558" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="567" namespace="global" package="Default">
        <name>$escape_html</name>
        <default>false</default>
        <docblock line="563">
          <description>autoescape variable output</description>
          <long-description/>
          <tag line="563" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="572" namespace="global" package="Default">
        <name>$_smarty_vars</name>
        <default>array()</default>
        <docblock line="568">
          <description>global internal smarty vars</description>
          <long-description/>
          <tag line="568" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="577" namespace="global" package="Default">
        <name>$start_time</name>
        <default>0</default>
        <docblock line="573">
          <description>start time for execution time calculation</description>
          <long-description/>
          <tag line="573" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="582" namespace="global" package="Default">
        <name>$_file_perms</name>
        <default>420</default>
        <docblock line="578">
          <description>default file permissions</description>
          <long-description/>
          <tag line="578" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="587" namespace="global" package="Default">
        <name>$_dir_perms</name>
        <default>505</default>
        <docblock line="583">
          <description>default dir permissions</description>
          <long-description/>
          <tag line="583" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="592" namespace="global" package="Default">
        <name>$_tag_stack</name>
        <default>array()</default>
        <docblock line="588">
          <description>block tag hierarchy</description>
          <long-description/>
          <tag line="588" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="597" namespace="global" package="Default">
        <name>$smarty</name>
        <default/>
        <docblock line="593">
          <description>self pointer to Smarty object</description>
          <long-description/>
          <tag line="593" name="var" description="" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="602" namespace="global" package="Default">
        <name>$_current_file</name>
        <default>null</default>
        <docblock line="598">
          <description>required by the compiler for BC</description>
          <long-description/>
          <tag line="598" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="607" namespace="global" package="Default">
        <name>$_parserdebug</name>
        <default>false</default>
        <docblock line="603">
          <description>internal flag to enable parser debugging</description>
          <long-description/>
          <tag line="603" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="613" namespace="global" package="Default">
        <name>$merged_templates_func</name>
        <default>array()</default>
        <docblock line="608">
          <description>Saved parameter of merged templates during compilation</description>
          <long-description/>
          <tag line="608" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="620" package="Smarty">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="616">
          <description>Initialize new Smarty object</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="644" package="Smarty">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="641">
          <description>Class destructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="652" package="Smarty">
        <name>__clone</name>
        <full_name>__clone</full_name>
        <docblock line="649">
          <description>&lt;&lt;magic&gt;&gt; set selfpointer on cloned object</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="666" package="Smarty">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="657">
          <description>&lt;&lt;magic&gt;&gt; Generic getter.</description>
          <long-description>&lt;p&gt;Calls the appropriate getter function.
Issues an E_USER_NOTICE if no valid getter is found.&lt;/p&gt;</long-description>
          <tag line="657" name="param" description="property name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="657" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="666">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="692" package="Smarty">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="683">
          <description>&lt;&lt;magic&gt;&gt; Generic setter.</description>
          <long-description>&lt;p&gt;Calls the appropriate setter function.
Issues an E_USER_NOTICE if no valid setter is found.&lt;/p&gt;</long-description>
          <tag line="683" name="param" description="property name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="683" name="param" description="parameter passed to setter" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="692">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="692">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="715" package="Smarty">
        <name>templateExists</name>
        <full_name>templateExists</full_name>
        <docblock line="709">
          <description>Check if a template resource exists</description>
          <long-description/>
          <tag line="709" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="709" name="return" description="status" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="715">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="734" package="Smarty">
        <name>getGlobal</name>
        <full_name>getGlobal</full_name>
        <docblock line="727">
          <description>Returns a single or all global  variables</description>
          <long-description/>
          <tag line="727" name="param" description="" type="object" variable="$smarty">
            <type by_reference="false">object</type>
          </tag>
          <tag line="727" name="param" description="variable name or null" type="string" variable="$varname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="727" name="return" description="variable value or or array of variables" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="734">
          <name>$varname</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="759" package="Smarty">
        <name>clearAllCache</name>
        <full_name>clearAllCache</full_name>
        <docblock line="752">
          <description>Empty cache folder</description>
          <long-description/>
          <tag line="752" name="param" description="expiration time" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="752" name="param" description="resource type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="752" name="return" description="number of cache files deleted" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="759">
          <name>$exp_time</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="759">
          <name>$type</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="778" package="Smarty">
        <name>clearCache</name>
        <full_name>clearCache</full_name>
        <docblock line="768">
          <description>Empty cache for a specific template</description>
          <long-description/>
          <tag line="768" name="param" description="template name" type="string" variable="$template_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="768" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="768" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="768" name="param" description="expiration time" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="768" name="param" description="resource type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="768" name="return" description="number of cache files deleted" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="778">
          <name>$template_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="778">
          <name>$cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="778">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="778">
          <name>$exp_time</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="778">
          <name>$type</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="794" package="Smarty">
        <name>enableSecurity</name>
        <full_name>enableSecurity</full_name>
        <docblock line="787">
          <description>Loads security class and enables security</description>
          <long-description/>
          <tag line="787" name="param" description="if a string is used, it must be class-name" type="string|\Smarty_Security" variable="$security_class">
            <type by_reference="false">string</type>
            <type by_reference="false">\Smarty_Security</type>
          </tag>
          <tag line="787" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="787" name="throws" description="when an invalid class name is provided" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="794">
          <name>$security_class</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="821" package="Smarty">
        <name>disableSecurity</name>
        <full_name>disableSecurity</full_name>
        <docblock line="817">
          <description>Disable security</description>
          <long-description/>
          <tag line="817" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="834" package="Smarty">
        <name>setTemplateDir</name>
        <full_name>setTemplateDir</full_name>
        <docblock line="828">
          <description>Set template directory</description>
          <long-description/>
          <tag line="828" name="param" description="directory(s) of template sources" type="string|array" variable="$template_dir">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="828" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="834">
          <name>$template_dir</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="854" package="Smarty">
        <name>addTemplateDir</name>
        <full_name>addTemplateDir</full_name>
        <docblock line="846">
          <description>Add template directory(s)</description>
          <long-description/>
          <tag line="846" name="param" description="directory(s) of template sources" type="string|array" variable="$template_dir">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="846" name="param" description="of the array element to assign the template dir to" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="846" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="846" name="throws" description="when the given template directory is not valid" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="854">
          <name>$template_dir</name>
          <default/>
          <type/>
        </argument>
        <argument line="854">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="887" package="Smarty">
        <name>getTemplateDir</name>
        <full_name>getTemplateDir</full_name>
        <docblock line="881">
          <description>Get template directories</description>
          <long-description/>
          <tag line="881" name="param" description="index of directory to get, null to get all" type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="881" name="return" description="list of template directories, or directory of $index" type="array|string">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="887">
          <name>$index</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="902" package="Smarty">
        <name>setConfigDir</name>
        <full_name>setConfigDir</full_name>
        <docblock line="896">
          <description>Set config directory</description>
          <long-description/>
          <tag line="896" name="param" description="directory(s) of configuration sources" type="string|array" variable="$template_dir">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="896" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="902">
          <name>$config_dir</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="921" package="Smarty">
        <name>addConfigDir</name>
        <full_name>addConfigDir</full_name>
        <docblock line="914">
          <description>Add config directory(s)</description>
          <long-description/>
          <tag line="914" name="param" description="directory(s) of config sources" type="string|array" variable="$config_dir">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="914" name="param" description="key of the array element to assign the config dir to" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="914" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="921">
          <name>$config_dir</name>
          <default/>
          <type/>
        </argument>
        <argument line="921">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="955" package="Smarty">
        <name>getConfigDir</name>
        <full_name>getConfigDir</full_name>
        <docblock line="949">
          <description>Get config directory</description>
          <long-description/>
          <tag line="949" name="param" description="index of directory to get, null to get all" type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="949" name="return" description="configuration directory" type="array|string">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="955">
          <name>$index</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="970" package="Smarty">
        <name>setPluginsDir</name>
        <full_name>setPluginsDir</full_name>
        <docblock line="964">
          <description>Set plugins directory</description>
          <long-description/>
          <tag line="964" name="param" description="directory(s) of plugins" type="string|array" variable="$plugins_dir">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="964" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="970">
          <name>$plugins_dir</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="987" package="Smarty">
        <name>addPluginsDir</name>
        <full_name>addPluginsDir</full_name>
        <docblock line="980">
          <description>Adds directory of plugin files</description>
          <long-description/>
          <tag line="980" name="param" description="" type="object" variable="$smarty">
            <type by_reference="false">object</type>
          </tag>
          <tag line="980" name="param" description="|array $ plugins folder" type="string" variable="$">
            <type by_reference="false">string</type>
          </tag>
          <tag line="980" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="987">
          <name>$plugins_dir</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1017" package="Smarty">
        <name>getPluginsDir</name>
        <full_name>getPluginsDir</full_name>
        <docblock line="1012">
          <description>Get plugin directories</description>
          <long-description/>
          <tag line="1012" name="return" description="list of plugin directories" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1028" package="Smarty">
        <name>setCompileDir</name>
        <full_name>setCompileDir</full_name>
        <docblock line="1022">
          <description>Set compile directory</description>
          <long-description/>
          <tag line="1022" name="param" description="directory to store compiled templates in" type="string" variable="$compile_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1022" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="1028">
          <name>$compile_dir</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1043" package="Smarty">
        <name>getCompileDir</name>
        <full_name>getCompileDir</full_name>
        <docblock line="1038">
          <description>Get compiled directory</description>
          <long-description/>
          <tag line="1038" name="return" description="path to compiled templates" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1054" package="Smarty">
        <name>setCacheDir</name>
        <full_name>setCacheDir</full_name>
        <docblock line="1048">
          <description>Set cache directory</description>
          <long-description/>
          <tag line="1048" name="param" description="directory to store cached templates in" type="string" variable="$cache_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1048" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="1054">
          <name>$cache_dir</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1069" package="Smarty">
        <name>getCacheDir</name>
        <full_name>getCacheDir</full_name>
        <docblock line="1064">
          <description>Get cache directory</description>
          <long-description/>
          <tag line="1064" name="return" description="path of cache directory" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1080" package="Smarty">
        <name>setDefaultModifiers</name>
        <full_name>setDefaultModifiers</full_name>
        <docblock line="1074">
          <description>Set default modifiers</description>
          <long-description/>
          <tag line="1074" name="param" description="modifier or list of modifiers to set" type="array|string" variable="$modifiers">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1074" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="1080">
          <name>$modifiers</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1093" package="Smarty">
        <name>addDefaultModifiers</name>
        <full_name>addDefaultModifiers</full_name>
        <docblock line="1087">
          <description>Add default modifiers</description>
          <long-description/>
          <tag line="1087" name="param" description="modifier or list of modifiers to add" type="array|string" variable="$modifiers">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1087" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="1093">
          <name>$modifiers</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1109" package="Smarty">
        <name>getDefaultModifiers</name>
        <full_name>getDefaultModifiers</full_name>
        <docblock line="1104">
          <description>Get default modifiers</description>
          <long-description/>
          <tag line="1104" name="return" description="list of default modifiers" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1122" package="Smarty">
        <name>setAutoloadFilters</name>
        <full_name>setAutoloadFilters</full_name>
        <docblock line="1115">
          <description>Set autoload filters</description>
          <long-description/>
          <tag line="1115" name="param" description="filters to load automatically" type="array" variable="$filters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1115" name="param" description="&quot;pre&quot;, &quot;output&quot;, ‚Ä¶ specify the filter type to set. Defaults to none treating $filters' keys as the appropriate types" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1115" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="1122">
          <name>$filters</name>
          <default/>
          <type/>
        </argument>
        <argument line="1122">
          <name>$type</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1140" package="Smarty">
        <name>addAutoloadFilters</name>
        <full_name>addAutoloadFilters</full_name>
        <docblock line="1133">
          <description>Add autoload filters</description>
          <long-description/>
          <tag line="1133" name="param" description="filters to load automatically" type="array" variable="$filters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1133" name="param" description="&quot;pre&quot;, &quot;output&quot;, ‚Ä¶ specify the filter type to set. Defaults to none treating $filters' keys as the appropriate types" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1133" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="1140">
          <name>$filters</name>
          <default/>
          <type/>
        </argument>
        <argument line="1140">
          <name>$type</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1167" package="Smarty">
        <name>getAutoloadFilters</name>
        <full_name>getAutoloadFilters</full_name>
        <docblock line="1161">
          <description>Get autoload filters</description>
          <long-description/>
          <tag line="1161" name="param" description="type of filter to get autoloads for. Defaults to all autoload filters" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1161" name="return" description="array( 'type1' =&gt; array( 'filter1', 'filter2', ‚Ä¶ ) ) or array( 'filter1', 'filter2', ‚Ä¶) if $type was specified" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1167">
          <name>$type</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1181" package="Smarty">
        <name>getDebugTemplate</name>
        <full_name>getDebugTemplate</full_name>
        <docblock line="1176">
          <description>return name of debugging template</description>
          <long-description/>
          <tag line="1176" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1193" package="Smarty">
        <name>setDebugTemplate</name>
        <full_name>setDebugTemplate</full_name>
        <docblock line="1186">
          <description>set the debug template</description>
          <long-description/>
          <tag line="1186" name="param" description="" type="string" variable="$tpl_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1186" name="return" description="current Smarty instance for chaining" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="1186" name="throws" description="if file is not readable" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="1193">
          <name>$tpl_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1213" package="Smarty">
        <name>createTemplate</name>
        <full_name>createTemplate</full_name>
        <docblock line="1203">
          <description>creates a template object</description>
          <long-description/>
          <tag line="1203" name="param" description="the resource handle of the template file" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1203" name="param" description="cache id to be used with this template" type="mixed" variable="$cache_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1203" name="param" description="compile id to be used with this template" type="mixed" variable="$compile_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1203" name="param" description="next higher level of Smarty variables" type="object" variable="$parent">
            <type by_reference="false">object</type>
          </tag>
          <tag line="1203" name="param" description="flag is Smarty object shall be cloned" type="boolean" variable="$do_clone">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1203" name="return" description="template object" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="1213">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
        <argument line="1213">
          <name>$cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1213">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1213">
          <name>$parent</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1213">
          <name>$do_clone</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1280" package="Smarty">
        <name>loadPlugin</name>
        <full_name>loadPlugin</full_name>
        <docblock line="1271">
          <description>Takes unknown classes and loads plugin files for them
class name format: Smarty_PluginType_PluginName
plugin filename format: plugintype.pluginname.php</description>
          <long-description/>
          <tag line="1271" name="param" description="class plugin name to load" type="string" variable="$plugin_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1271" name="param" description="check if already loaded" type="bool" variable="$check">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1271" name="return" description="|boolean filepath of loaded file or false" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1280">
          <name>$plugin_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="1280">
          <name>$check</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1352" package="Smarty">
        <name>compileAllTemplates</name>
        <full_name>compileAllTemplates</full_name>
        <docblock line="1343">
          <description>Compile all template files</description>
          <long-description/>
          <tag line="1343" name="param" description="file extension" type="string" variable="$extension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1343" name="param" description="force all to recompile" type="bool" variable="$force_compile">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1343" name="param" description="" type="int" variable="$time_limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1343" name="param" description="" type="int" variable="$max_errors">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1343" name="return" description="number of template files recompiled" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="1352">
          <name>$extension</name>
          <default>'.tpl'</default>
          <type/>
        </argument>
        <argument line="1352">
          <name>$force_compile</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="1352">
          <name>$time_limit</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1352">
          <name>$max_errors</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1366" package="Smarty">
        <name>compileAllConfig</name>
        <full_name>compileAllConfig</full_name>
        <docblock line="1357">
          <description>Compile all config files</description>
          <long-description/>
          <tag line="1357" name="param" description="file extension" type="string" variable="$extension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1357" name="param" description="force all to recompile" type="bool" variable="$force_compile">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1357" name="param" description="" type="int" variable="$time_limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1357" name="param" description="" type="int" variable="$max_errors">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1357" name="return" description="number of template files recompiled" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="1366">
          <name>$extension</name>
          <default>'.conf'</default>
          <type/>
        </argument>
        <argument line="1366">
          <name>$force_compile</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="1366">
          <name>$time_limit</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1366">
          <name>$max_errors</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1379" package="Smarty">
        <name>clearCompiledTemplate</name>
        <full_name>clearCompiledTemplate</full_name>
        <docblock line="1371">
          <description>Delete compiled template file</description>
          <long-description/>
          <tag line="1371" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1371" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1371" name="param" description="expiration time" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1371" name="return" description="number of template files deleted" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="1379">
          <name>$resource_name</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1379">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1379">
          <name>$exp_time</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1391" package="Smarty">
        <name>getTags</name>
        <full_name>getTags</full_name>
        <docblock line="1385">
          <description>Return array of tag/attributes of all tags used by an template</description>
          <long-description/>
          <tag line="1385" name="param" description="template object" type="object" variable="$templae">
            <type by_reference="false">object</type>
          </tag>
          <tag line="1385" name="return" description="of tag/attributes" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1391">
          <name>$template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1402" package="Smarty">
        <name>testInstall</name>
        <full_name>testInstall</full_name>
        <docblock line="1396">
          <description>Run installation test</description>
          <long-description/>
          <tag line="1396" name="param" description="Array to write errors into, rather than outputting them" type="array" variable="$errors">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1396" name="return" description="true if setup is fine, false if something is wrong" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1402">
          <name>$errors</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1414" package="Smarty">
        <name>mutingErrorHandler</name>
        <full_name>mutingErrorHandler</full_name>
        <docblock line="1407">
          <description>Error Handler to mute expected messages</description>
          <long-description/>
          <tag line="1407" name="link" description="http://php.net/set_error_handler" link="http://php.net/set_error_handler"/>
          <tag line="1407" name="param" description="Error level" type="integer" variable="$errno">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1407" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1414">
          <name>$errno</name>
          <default/>
          <type/>
        </argument>
        <argument line="1414">
          <name>$errstr</name>
          <default/>
          <type/>
        </argument>
        <argument line="1414">
          <name>$errfile</name>
          <default/>
          <type/>
        </argument>
        <argument line="1414">
          <name>$errline</name>
          <default/>
          <type/>
        </argument>
        <argument line="1414">
          <name>$errcontext</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1466" package="Smarty">
        <name>muteExpectedErrors</name>
        <full_name>muteExpectedErrors</full_name>
        <docblock line="1461">
          <description>Enable error handler to mute expected messages</description>
          <long-description/>
          <tag line="1461" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1498" package="Smarty">
        <name>unmuteExpectedErrors</name>
        <full_name>unmuteExpectedErrors</full_name>
        <docblock line="1493">
          <description>Disable error handler muting expected messages</description>
          <long-description/>
          <tag line="1493" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1516" package="Smarty">
      <extends>\Exception</extends>
      <name>SmartyException</name>
      <full_name>\SmartyException</full_name>
      <docblock line="1512">
        <description>Smarty exception class</description>
        <long-description/>
        <tag line="1512" name="package" description="Smarty"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="1518" namespace="global" package="Default">
        <name>$escape</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1520" package="Smarty">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1530" package="Smarty">
      <extends>\SmartyException</extends>
      <name>SmartyCompilerException</name>
      <full_name>\SmartyCompilerException</full_name>
      <docblock line="1526">
        <description>Smarty compiler exception class</description>
        <long-description/>
        <tag line="1526" name="package" description="Smarty"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="1540" namespace="global" package="Default">
        <name>$line</name>
        <default>null</default>
        <docblock line="1536">
          <description>The line number of the template error</description>
          <long-description/>
          <tag line="1536" name="type" description="int|null"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="1545" namespace="global" package="Default">
        <name>$source</name>
        <default>null</default>
        <docblock line="1541">
          <description>The template source snippet relating to the error</description>
          <long-description/>
          <tag line="1541" name="type" description="string|null"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="1550" namespace="global" package="Default">
        <name>$desc</name>
        <default>null</default>
        <docblock line="1546">
          <description>The raw text of the error message</description>
          <long-description/>
          <tag line="1546" name="type" description="string|null"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="1555" namespace="global" package="Default">
        <name>$template</name>
        <default>null</default>
        <docblock line="1551">
          <description>The resource identifier or template name</description>
          <long-description/>
          <tag line="1551" name="type" description="string|null"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1532" package="Smarty">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="1558" code="50015">Argument $class is missing from the Docblock of \smartyAutoload()</error>
      <error line="727" code="50014">Name of argument $varname does not match with the DocBlock's name $smarty in getGlobal()</error>
      <notice line="727" code="50013">Parameter $smarty could not be found in getGlobal()</notice>
      <error line="896" code="50014">Name of argument $config_dir does not match with the DocBlock's name $template_dir in setConfigDir()</error>
      <notice line="896" code="50013">Parameter $template_dir could not be found in setConfigDir()</notice>
      <error line="980" code="50014">Name of argument $plugins_dir does not match with the DocBlock's name $smarty in addPluginsDir()</error>
      <notice line="980" code="50013">Parameter $smarty could not be found in addPluginsDir()</notice>
      <notice line="980" code="50013">Parameter $ could not be found in addPluginsDir()</notice>
      <error line="1385" code="50014">Name of argument $template does not match with the DocBlock's name $templae in getTags()</error>
      <error line="1385" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $template in getTags()</error>
      <notice line="1385" code="50013">Parameter $templae could not be found in getTags()</notice>
      <error line="1407" code="50015">Argument $errstr is missing from the Docblock of mutingErrorHandler()</error>
      <error line="1407" code="50015">Argument $errfile is missing from the Docblock of mutingErrorHandler()</error>
      <error line="1407" code="50015">Argument $errline is missing from the Docblock of mutingErrorHandler()</error>
      <error line="1407" code="50015">Argument $errcontext is missing from the Docblock of mutingErrorHandler()</error>
      <error line="1518" code="50018">No DocBlock was found for property $escape</error>
      <error line="1520" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1532" code="50010">No DocBlock was found for method __toString()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_capture.php" hash="63da15e758511a90eca01813a8d57ece" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Capture</description>
      <long-description>&lt;p&gt;Compiles the {capture} tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Capture</name>
      <full_name>\Smarty_Internal_Compile_Capture</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Capture Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('name')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('name', 'assign', 'append')</default>
        <docblock line="27">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="35">
          <description>Compiles code for the {capture} tag</description>
          <long-description/>
          <tag line="35" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="35" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="42">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="67" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_CaptureClose</name>
      <full_name>\Smarty_Internal_Compile_CaptureClose</full_name>
      <docblock line="61">
        <description>Smarty Internal Plugin Compile Captureclose Class</description>
        <long-description/>
        <tag line="61" name="package" description="Smarty"/>
        <tag line="61" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="69">
          <description>Compiles code for the {/capture} tag</description>
          <long-description/>
          <tag line="69" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="69" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="69" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="76">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_foreach.php" hash="1aa5fb231b4af6b85adda1e395d924f0" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Foreach</description>
      <long-description>&lt;p&gt;Compiles the {foreach} {foreachelse} {/foreach} tags&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Foreach</name>
      <full_name>\Smarty_Internal_Compile_Foreach</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Foreach Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('from', 'item')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('name', 'key')</default>
        <docblock line="27">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('from', 'item', 'key', 'name')</default>
        <docblock line="34">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="34" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="34" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="42">
          <description>Compiles code for the {foreach} tag</description>
          <long-description/>
          <tag line="42" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="42" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="177" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Foreachelse</name>
      <full_name>\Smarty_Internal_Compile_Foreachelse</full_name>
      <docblock line="171">
        <description>Smarty Internal Plugin Compile Foreachelse Class</description>
        <long-description/>
        <tag line="171" name="package" description="Smarty"/>
        <tag line="171" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="187" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="179">
          <description>Compiles code for the {foreachelse} tag</description>
          <long-description/>
          <tag line="179" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="179" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="179" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="179" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="187">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="187">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="187">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="206" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Foreachclose</name>
      <full_name>\Smarty_Internal_Compile_Foreachclose</full_name>
      <docblock line="200">
        <description>Smarty Internal Plugin Compile Foreachclose Class</description>
        <long-description/>
        <tag line="200" name="package" description="Smarty"/>
        <tag line="200" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="216" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="208">
          <description>Compiles code for the {/foreach} tag</description>
          <long-description/>
          <tag line="208" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="208" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="208" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="208" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="216">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="216">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_resource_extends.php" hash="e81af7901b40ce7676e75a99bbaf0fc1" package="Smarty\TemplateResources">
    <docblock line="2">
      <description>Smarty Internal Plugin Resource Extends</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="TemplateResources"/>
      <tag line="2" name="author" description="Uwe Tews"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="19" package="Smarty\TemplateResources">
      <extends>\Smarty_Resource</extends>
      <name>Smarty_Internal_Resource_Extends</name>
      <full_name>\Smarty_Internal_Resource_Extends</full_name>
      <docblock line="11">
        <description>Smarty Internal Plugin Resource Extends</description>
        <long-description>&lt;p&gt;Implements the file system as resource for Smarty which {extend}s a chain of template files templates&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="Smarty"/>
        <tag line="11" name="subpackage" description="TemplateResources"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$mbstring_overload</name>
        <default>0</default>
        <docblock line="21">
          <description>mbstring.overload flag</description>
          <long-description/>
          <tag line="21" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Smarty\TemplateResources">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="28">
          <description>populate Source Object with meta data from Resource</description>
          <long-description/>
          <tag line="28" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="28" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="34">
          <name>$_template</name>
          <default>null</default>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Smarty\TemplateResources">
        <name>populateTimestamp</name>
        <full_name>populateTimestamp</full_name>
        <docblock line="62">
          <description>populate Source Object with timestamp and exists from Resource</description>
          <long-description/>
          <tag line="62" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Smarty\TemplateResources">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="76">
          <description>Load template's source from files into current template object</description>
          <long-description/>
          <tag line="76" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="76" name="return" description="template source" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="throws" description="if source cannot be loaded" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="105" package="Smarty\TemplateResources">
        <name>getBasename</name>
        <full_name>getBasename</full_name>
        <docblock line="99">
          <description>Determine basename for compiled filename</description>
          <long-description/>
          <tag line="99" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="99" name="return" description="resource's basename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_parsetree.php" hash="782764aeeae49b39f472edba259a1a54" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Templateparser Parsetrees</description>
      <long-description>&lt;p&gt;These are classes to build parsetrees in the template parser&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Thue Kristensen"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="18" package="Smarty\Compiler">
      <extends/>
      <name>_smarty_parsetree</name>
      <full_name>\_smarty_parsetree</full_name>
      <docblock line="13">
        <description/>
        <long-description/>
        <tag line="13" name="package" description="Smarty"/>
        <tag line="13" name="subpackage" description="Compiler"/>
        <tag line="13" name="ignore" description=""/>
      </docblock>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$parser</name>
        <default/>
        <docblock line="20">
          <description>Parser object</description>
          <long-description/>
          <tag line="20" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$data</name>
        <default/>
        <docblock line="25">
          <description>Buffer content</description>
          <long-description/>
          <tag line="25" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="36" package="Smarty\Compiler">
        <name>to_smarty_php</name>
        <full_name>to_smarty_php</full_name>
        <docblock line="31">
          <description>Return buffer</description>
          <long-description/>
          <tag line="31" name="return" description="buffer content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="47" package="Smarty\Compiler">
      <extends>\_smarty_parsetree</extends>
      <name>_smarty_tag</name>
      <full_name>\_smarty_tag</full_name>
      <docblock line="40">
        <description>A complete smarty tag.</description>
        <long-description/>
        <tag line="40" name="package" description="Smarty"/>
        <tag line="40" name="subpackage" description="Compiler"/>
        <tag line="40" name="ignore" description=""/>
      </docblock>
      <property final="false" static="false" visibility="public" line="53" namespace="global" package="Default">
        <name>$saved_block_nesting</name>
        <default/>
        <docblock line="49">
          <description>Saved block nesting level</description>
          <long-description/>
          <tag line="49" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Smarty\Compiler">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="55">
          <description>Create parse tree buffer for Smarty tag</description>
          <long-description/>
          <tag line="55" name="param" description="parser object" type="object" variable="$parser">
            <type by_reference="false">object</type>
          </tag>
          <tag line="55" name="param" description="content" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="61">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Smarty\Compiler">
        <name>to_smarty_php</name>
        <full_name>to_smarty_php</full_name>
        <docblock line="68">
          <description>Return buffer content</description>
          <long-description/>
          <tag line="68" name="return" description="content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Smarty\Compiler">
        <name>assign_to_var</name>
        <full_name>assign_to_var</full_name>
        <docblock line="78">
          <description>Return complied code that loads the evaluated outout of buffer content into a temporary variable</description>
          <long-description/>
          <tag line="78" name="return" description="template code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="100" package="Smarty\Compiler">
      <extends>\_smarty_parsetree</extends>
      <name>_smarty_code</name>
      <full_name>\_smarty_code</full_name>
      <docblock line="93">
        <description>Code fragment inside a tag.</description>
        <long-description/>
        <tag line="93" name="package" description="Smarty"/>
        <tag line="93" name="subpackage" description="Compiler"/>
        <tag line="93" name="ignore" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="Smarty\Compiler">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="102">
          <description>Create parse tree buffer for code fragment</description>
          <long-description/>
          <tag line="102" name="param" description="parser object" type="object" variable="$parser">
            <type by_reference="false">object</type>
          </tag>
          <tag line="102" name="param" description="content" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="Smarty\Compiler">
        <name>to_smarty_php</name>
        <full_name>to_smarty_php</full_name>
        <docblock line="114">
          <description>Return buffer content in parentheses</description>
          <long-description/>
          <tag line="114" name="return" description="content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="133" package="Smarty\Compiler">
      <extends>\_smarty_parsetree</extends>
      <name>_smarty_doublequoted</name>
      <full_name>\_smarty_doublequoted</full_name>
      <docblock line="126">
        <description>Double quoted string inside a tag.</description>
        <long-description/>
        <tag line="126" name="package" description="Smarty"/>
        <tag line="126" name="subpackage" description="Compiler"/>
        <tag line="126" name="ignore" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="141" package="Smarty\Compiler">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="135">
          <description>Create parse tree buffer for double quoted string subtrees</description>
          <long-description/>
          <tag line="135" name="param" description="parser object" type="object" variable="$parser">
            <type by_reference="false">object</type>
          </tag>
          <tag line="135" name="param" description="parsetree buffer" type="\_smarty_parsetree" variable="$subtree">
            <type by_reference="false">\_smarty_parsetree</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="141">
          <name>$subtree</name>
          <default/>
          <type>\_smarty_parsetree</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="Smarty\Compiler">
        <name>append_subtree</name>
        <full_name>append_subtree</full_name>
        <docblock line="150">
          <description>Append buffer to subtree</description>
          <long-description/>
          <tag line="150" name="param" description="parsetree buffer" type="\_smarty_parsetree" variable="$subtree">
            <type by_reference="false">\_smarty_parsetree</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$subtree</name>
          <default/>
          <type>\_smarty_parsetree</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="179" package="Smarty\Compiler">
        <name>to_smarty_php</name>
        <full_name>to_smarty_php</full_name>
        <docblock line="174">
          <description>Merge subtree buffer content together</description>
          <long-description/>
          <tag line="174" name="return" description="compiled template code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="211" package="Smarty\Compiler">
      <extends>\_smarty_parsetree</extends>
      <name>_smarty_dq_content</name>
      <full_name>\_smarty_dq_content</full_name>
      <docblock line="204">
        <description>Raw chars as part of a double quoted string.</description>
        <long-description/>
        <tag line="204" name="package" description="Smarty"/>
        <tag line="204" name="subpackage" description="Compiler"/>
        <tag line="204" name="ignore" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="Smarty\Compiler">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="213">
          <description>Create parse tree buffer with string content</description>
          <long-description/>
          <tag line="213" name="param" description="parser object" type="object" variable="$parser">
            <type by_reference="false">object</type>
          </tag>
          <tag line="213" name="param" description="string section" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="219">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="230" package="Smarty\Compiler">
        <name>to_smarty_php</name>
        <full_name>to_smarty_php</full_name>
        <docblock line="225">
          <description>Return content as double quoted string</description>
          <long-description/>
          <tag line="225" name="return" description="doubled quoted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="244" package="Smarty\Compiler">
      <extends>\_smarty_parsetree</extends>
      <name>_smarty_template_buffer</name>
      <full_name>\_smarty_template_buffer</full_name>
      <docblock line="237">
        <description>Template element</description>
        <long-description/>
        <tag line="237" name="package" description="Smarty"/>
        <tag line="237" name="subpackage" description="Compiler"/>
        <tag line="237" name="ignore" description=""/>
      </docblock>
      <property final="false" static="false" visibility="public" line="251" namespace="global" package="Default">
        <name>$subtrees</name>
        <default>array()</default>
        <docblock line="246">
          <description>Array of template elements</description>
          <long-description/>
          <tag line="246" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="258" package="Smarty\Compiler">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="253">
          <description>Create root of parse tree for template elements</description>
          <long-description/>
          <tag line="253" name="param" description="parse object" type="object" variable="$parser">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="268" package="Smarty\Compiler">
        <name>append_subtree</name>
        <full_name>append_subtree</full_name>
        <docblock line="263">
          <description>Append buffer to subtree</description>
          <long-description/>
          <tag line="263" name="param" description="" type="\_smarty_parsetree" variable="$subtree">
            <type by_reference="false">\_smarty_parsetree</type>
          </tag>
        </docblock>
        <argument line="268">
          <name>$subtree</name>
          <default/>
          <type>\_smarty_parsetree</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="278" package="Smarty\Compiler">
        <name>to_smarty_php</name>
        <full_name>to_smarty_php</full_name>
        <docblock line="273">
          <description>Sanitize and merge subtree buffers together</description>
          <long-description/>
          <tag line="273" name="return" description="template code content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="336" package="Smarty\Compiler">
      <extends>\_smarty_parsetree</extends>
      <name>_smarty_text</name>
      <full_name>\_smarty_text</full_name>
      <docblock line="329">
        <description>template text</description>
        <long-description/>
        <tag line="329" name="package" description="Smarty"/>
        <tag line="329" name="subpackage" description="Compiler"/>
        <tag line="329" name="ignore" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="344" package="Smarty\Compiler">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="338">
          <description>Create template text buffer</description>
          <long-description/>
          <tag line="338" name="param" description="parser object" type="object" variable="$parser">
            <type by_reference="false">object</type>
          </tag>
          <tag line="338" name="param" description="text" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="344">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="344">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="355" package="Smarty\Compiler">
        <name>to_smarty_php</name>
        <full_name>to_smarty_php</full_name>
        <docblock line="350">
          <description>Return buffer content</description>
          <long-description/>
          <tag line="350" name="return" description="text" type="\strint">
            <type by_reference="false">\strint</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="369" package="Smarty\Compiler">
      <extends>\_smarty_parsetree</extends>
      <name>_smarty_linebreak</name>
      <full_name>\_smarty_linebreak</full_name>
      <docblock line="362">
        <description>template linebreaks</description>
        <long-description/>
        <tag line="362" name="package" description="Smarty"/>
        <tag line="362" name="subpackage" description="Compiler"/>
        <tag line="362" name="ignore" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="377" package="Smarty\Compiler">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="371">
          <description>Create buffer with linebreak content</description>
          <long-description/>
          <tag line="371" name="param" description="parser object" type="object" variable="$parser">
            <type by_reference="false">object</type>
          </tag>
          <tag line="371" name="param" description="linebreak string" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="377">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="377">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="388" package="Smarty\Compiler">
        <name>to_smarty_php</name>
        <full_name>to_smarty_php</full_name>
        <docblock line="383">
          <description>Return linebrak</description>
          <long-description/>
          <tag line="383" name="return" description="linebreak" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_append.php" hash="ffa31e8b25bf56897f63f8f364917512" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Append</description>
      <long-description>&lt;p&gt;Compiles the {append} tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_Compile_Assign</extends>
      <name>Smarty_Internal_Compile_Append</name>
      <full_name>\Smarty_Internal_Compile_Append</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Append Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="20">
          <description>Compiles code for the {append} tag</description>
          <long-description/>
          <tag line="20" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="20" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_write_file.php" hash="b426067049627418a9954a8f0ce947a5" package="Smarty\PluginsInternal">
    <docblock line="2">
      <description>Smarty write file plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsInternal"/>
      <tag line="2" name="author" description="Monte Ohrt"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Smarty\PluginsInternal">
      <extends/>
      <name>Smarty_Internal_Write_File</name>
      <full_name>\Smarty_Internal_Write_File</full_name>
      <docblock line="10">
        <description>Smarty Internal Write File Class</description>
        <long-description/>
        <tag line="10" name="package" description="Smarty"/>
        <tag line="10" name="subpackage" description="PluginsInternal"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="26" package="Smarty\PluginsInternal">
        <name>writeFile</name>
        <full_name>writeFile</full_name>
        <docblock line="18">
          <description>Writes file in a safe way to disk</description>
          <long-description/>
          <tag line="18" name="param" description="complete filepath" type="string" variable="$_filepath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="file content" type="string" variable="$_contents">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="smarty instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="18" name="return" description="true" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$_filepath</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$_contents</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_security.php" hash="7b23859d1780da004540311113abdc09" package="Smarty\Security">
    <docblock line="2">
      <description>Smarty plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Security"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="22" package="Default">
      <extends/>
      <name>Smarty_Security</name>
      <full_name>\Smarty_Security</full_name>
      <docblock line="19">
        <description>This class does contain the security settings</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="public" line="36" namespace="global" package="Default">
        <name>$php_handling</name>
        <default>\Smarty::PHP_PASSTHRU</default>
        <docblock line="24">
          <description>This determines how Smarty handles "&lt;?php .</description>
          <long-description>&lt;p&gt;.. ?&gt;" tags in templates.
possible values:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Smarty::PHP_PASSTHRU -&gt; echo PHP tags as they are&lt;/li&gt;
  &lt;li&gt;Smarty::PHP_QUOTE    -&gt; escape tags as entities&lt;/li&gt;
  &lt;li&gt;Smarty::PHP_REMOVE   -&gt; remove php tags&lt;/li&gt;
  &lt;li&gt;Smarty::PHP_ALLOW    -&gt; execute php tags&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="24" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="global" package="Default">
        <name>$secure_dir</name>
        <default>array()</default>
        <docblock line="37">
          <description>This is the list of template directories that are considered secure.</description>
          <long-description>&lt;p&gt;$template_dir is in this list implicitly.&lt;/p&gt;</long-description>
          <tag line="37" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="50" namespace="global" package="Default">
        <name>$trusted_dir</name>
        <default>array()</default>
        <docblock line="44">
          <description>This is an array of directories where trusted php scripts reside.</description>
          <long-description>&lt;p&gt;{@link $security} is disabled during their inclusion/execution.&lt;/p&gt;</long-description>
          <tag line="44" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="56" namespace="global" package="Default">
        <name>$trusted_uri</name>
        <default>array()</default>
        <docblock line="51">
          <description>List of regular expressions (PCRE) that include trusted URIs</description>
          <long-description/>
          <tag line="51" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="64" namespace="global" package="Default">
        <name>$static_classes</name>
        <default>array()</default>
        <docblock line="57">
          <description>This is an array of trusted static classes.</description>
          <long-description>&lt;p&gt;If empty access to all static classes is allowed.
If set to 'none' none is allowed.&lt;/p&gt;</long-description>
          <tag line="57" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="72" namespace="global" package="Default">
        <name>$php_functions</name>
        <default>array('isset', 'empty', 'count', 'sizeof', 'in_array', 'is_array', 'time', 'nl2br')</default>
        <docblock line="65">
          <description>This is an array of trusted PHP functions.</description>
          <long-description>&lt;p&gt;If empty all functions are allowed.
To disable all PHP functions set $php_functions = null.&lt;/p&gt;</long-description>
          <tag line="65" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="86" namespace="global" package="Default">
        <name>$php_modifiers</name>
        <default>array('escape', 'count')</default>
        <docblock line="79">
          <description>This is an array of trusted PHP modifiers.</description>
          <long-description>&lt;p&gt;If empty all modifiers are allowed.
To disable all modifier set $modifiers = null.&lt;/p&gt;</long-description>
          <tag line="79" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="96" namespace="global" package="Default">
        <name>$allowed_tags</name>
        <default>array()</default>
        <docblock line="90">
          <description>This is an array of allowed tags.</description>
          <long-description>&lt;p&gt;If empty no restriction by allowed_tags.&lt;/p&gt;</long-description>
          <tag line="90" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="103" namespace="global" package="Default">
        <name>$disabled_tags</name>
        <default>array()</default>
        <docblock line="97">
          <description>This is an array of disabled tags.</description>
          <long-description>&lt;p&gt;If empty no restriction by disabled_tags.&lt;/p&gt;</long-description>
          <tag line="97" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="110" namespace="global" package="Default">
        <name>$allowed_modifiers</name>
        <default>array()</default>
        <docblock line="104">
          <description>This is an array of allowed modifier plugins.</description>
          <long-description>&lt;p&gt;If empty no restriction by allowed_modifiers.&lt;/p&gt;</long-description>
          <tag line="104" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="117" namespace="global" package="Default">
        <name>$disabled_modifiers</name>
        <default>array()</default>
        <docblock line="111">
          <description>This is an array of disabled modifier plugins.</description>
          <long-description>&lt;p&gt;If empty no restriction by disabled_modifiers.&lt;/p&gt;</long-description>
          <tag line="111" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="125" namespace="global" package="Default">
        <name>$streams</name>
        <default>array('file')</default>
        <docblock line="118">
          <description>This is an array of trusted streams.</description>
          <long-description>&lt;p&gt;If empty all streams are allowed.
To disable all streams set $streams = null.&lt;/p&gt;</long-description>
          <tag line="118" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="130" namespace="global" package="Default">
        <name>$allow_constants</name>
        <default>true</default>
        <docblock line="126">
          <description>+ flag if constants can be accessed from template</description>
          <long-description/>
          <tag line="126" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="135" namespace="global" package="Default">
        <name>$allow_super_globals</name>
        <default>true</default>
        <docblock line="131">
          <description>+ flag if super globals can be accessed from template</description>
          <long-description/>
          <tag line="131" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="141" namespace="global" package="Default">
        <name>$_resource_dir</name>
        <default>null</default>
        <docblock line="137">
          <description>Cache for $resource_dir lookups</description>
          <long-description/>
          <tag line="137" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="146" namespace="global" package="Default">
        <name>$_template_dir</name>
        <default>null</default>
        <docblock line="142">
          <description>Cache for $template_dir lookups</description>
          <long-description/>
          <tag line="142" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="151" namespace="global" package="Default">
        <name>$_config_dir</name>
        <default>null</default>
        <docblock line="147">
          <description>Cache for $config_dir lookups</description>
          <long-description/>
          <tag line="147" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="156" namespace="global" package="Default">
        <name>$_secure_dir</name>
        <default>null</default>
        <docblock line="152">
          <description>Cache for $secure_dir lookups</description>
          <long-description/>
          <tag line="152" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="161" namespace="global" package="Default">
        <name>$_php_resource_dir</name>
        <default>null</default>
        <docblock line="157">
          <description>Cache for $php_resource_dir lookups</description>
          <long-description/>
          <tag line="157" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="166" namespace="global" package="Default">
        <name>$_trusted_dir</name>
        <default>null</default>
        <docblock line="162">
          <description>Cache for $trusted_dir lookups</description>
          <long-description/>
          <tag line="162" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="168">
          <description/>
          <long-description/>
          <tag line="168" name="param" description="" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$smarty</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="184" package="Default">
        <name>isTrustedPhpFunction</name>
        <full_name>isTrustedPhpFunction</full_name>
        <docblock line="176">
          <description>Check if PHP function is trusted.</description>
          <long-description/>
          <tag line="176" name="param" description="" type="string" variable="$function_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="176" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="176" name="return" description="true if function is trusted" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="176" name="throws" description="if php function is not trusted" type="\SmartyCompilerException">
            <type by_reference="false">\SmartyCompilerException</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$function_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="184">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="203" package="Default">
        <name>isTrustedStaticClass</name>
        <full_name>isTrustedStaticClass</full_name>
        <docblock line="195">
          <description>Check if static class is trusted.</description>
          <long-description/>
          <tag line="195" name="param" description="" type="string" variable="$class_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="195" name="return" description="true if class is trusted" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="195" name="throws" description="if static class is not trusted" type="\SmartyCompilerException">
            <type by_reference="false">\SmartyCompilerException</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$class_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="203">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="222" package="Default">
        <name>isTrustedPhpModifier</name>
        <full_name>isTrustedPhpModifier</full_name>
        <docblock line="214">
          <description>Check if PHP modifier is trusted.</description>
          <long-description/>
          <tag line="214" name="param" description="" type="string" variable="$modifier_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="214" name="return" description="true if modifier is trusted" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="214" name="throws" description="if modifier is not trusted" type="\SmartyCompilerException">
            <type by_reference="false">\SmartyCompilerException</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$modifier_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="222">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="241" package="Default">
        <name>isTrustedTag</name>
        <full_name>isTrustedTag</full_name>
        <docblock line="233">
          <description>Check if tag is trusted.</description>
          <long-description/>
          <tag line="233" name="param" description="" type="string" variable="$tag_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="233" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="233" name="return" description="true if tag is trusted" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="233" name="throws" description="if modifier is not trusted" type="\SmartyCompilerException">
            <type by_reference="false">\SmartyCompilerException</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$tag_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="241">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="272" package="Default">
        <name>isTrustedModifier</name>
        <full_name>isTrustedModifier</full_name>
        <docblock line="264">
          <description>Check if modifier plugin is trusted.</description>
          <long-description/>
          <tag line="264" name="param" description="" type="string" variable="$modifier_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="264" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="264" name="return" description="true if tag is trusted" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="264" name="throws" description="if modifier is not trusted" type="\SmartyCompilerException">
            <type by_reference="false">\SmartyCompilerException</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$modifier_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="272">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="301" package="Default">
        <name>isTrustedStream</name>
        <full_name>isTrustedStream</full_name>
        <docblock line="294">
          <description>Check if stream is trusted.</description>
          <long-description/>
          <tag line="294" name="param" description="" type="string" variable="$stream_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="294" name="return" description="true if stream is trusted" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="294" name="throws" description="if stream is not trusted" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="301">
          <name>$stream_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="317" package="Default">
        <name>isTrustedResourceDir</name>
        <full_name>isTrustedResourceDir</full_name>
        <docblock line="310">
          <description>Check if directory of file resource is trusted.</description>
          <long-description/>
          <tag line="310" name="param" description="" type="string" variable="$filepath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="310" name="return" description="true if directory is trusted" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="310" name="throws" description="if directory is not trusted" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$filepath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="400" package="Default">
        <name>isTrustedUri</name>
        <full_name>isTrustedUri</full_name>
        <docblock line="389">
          <description>Check if URI (e.g.</description>
          <long-description>&lt;p&gt;{fetch} or {html_image}) is trusted&lt;/p&gt;

&lt;p&gt;To simplify things, isTrustedUri() resolves all input to "{$PROTOCOL}://{$HOSTNAME}".
So "http://username:password@hello.world.example.org:8080/some-path?some=query-string"
is reduced to "http://hello.world.example.org" prior to applying the patters from {@link $trusted_uri}.&lt;/p&gt;</long-description>
          <tag line="389" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="389" name="return" description="true if URI is trusted" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="389" name="throws" description="if URI is not trusted" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
          <tag line="389" name="uses" description="for list of patterns to match against $uri" refers="\$trusted_uri"/>
        </docblock>
        <argument line="400">
          <name>$uri</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="422" package="Default">
        <name>isTrustedPHPDir</name>
        <full_name>isTrustedPHPDir</full_name>
        <docblock line="415">
          <description>Check if directory of file resource is trusted.</description>
          <long-description/>
          <tag line="415" name="param" description="" type="string" variable="$filepath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="415" name="return" description="true if directory is trusted" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="415" name="throws" description="if PHP directory is not trusted" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="422">
          <name>$filepath</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="168" code="50012">No short description for method __construct()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_resource_eval.php" hash="288b9419dea2089cf64c34308c092b30" package="Smarty\TemplateResources">
    <docblock line="2">
      <description>Smarty Internal Plugin Resource Eval</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="TemplateResources"/>
      <tag line="2" name="author" description="Uwe Tews"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Smarty\TemplateResources">
      <extends>\Smarty_Resource_Recompiled</extends>
      <name>Smarty_Internal_Resource_Eval</name>
      <full_name>\Smarty_Internal_Resource_Eval</full_name>
      <docblock line="11">
        <description>Smarty Internal Plugin Resource Eval</description>
        <long-description>&lt;p&gt;Implements the strings as resource for Smarty template&lt;/p&gt;

&lt;p&gt;{@internal unlike string-resources the compiled state of eval-resources is NOT saved for subsequent access}}&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="Smarty"/>
        <tag line="11" name="subpackage" description="TemplateResources"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Smarty\TemplateResources">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="23">
          <description>populate Source Object with meta data from Resource</description>
          <long-description/>
          <tag line="23" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="23" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="23" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="30">
          <name>$_template</name>
          <default>null</default>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Smarty\TemplateResources">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="37">
          <description>Load template's source from $resource_name into current template object</description>
          <long-description/>
          <tag line="37" name="uses" description="to decode base64 and urlencoded template_resources" refers="\decode()"/>
          <tag line="37" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="37" name="return" description="template source" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="55" package="Smarty\TemplateResources">
        <name>decode</name>
        <full_name>decode</full_name>
        <docblock line="49">
          <description>decode base64 and urlencode</description>
          <long-description/>
          <tag line="49" name="param" description="template_resource to decode" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="decoded template_resource" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="77" package="Smarty\TemplateResources">
        <name>buildUniqueResourceName</name>
        <full_name>buildUniqueResourceName</full_name>
        <docblock line="69">
          <description>modify resource_name according to resource handlers specifications</description>
          <long-description/>
          <tag line="69" name="param" description="Smarty instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="69" name="param" description="resource_name to make unique" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="flag for config resource" type="boolean" variable="$is_config">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="69" name="return" description="unique resource name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="77">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="77">
          <name>$is_config</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="88" package="Smarty\TemplateResources">
        <name>getBasename</name>
        <full_name>getBasename</full_name>
        <docblock line="82">
          <description>Determine basename for compiled filename</description>
          <long-description/>
          <tag line="82" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="82" name="return" description="resource's basename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_cacheresource_keyvaluestore.php" hash="72af987e1e39948d1b22e74cabfe5fde" package="Smarty\Cacher">
    <docblock line="2">
      <description>Smarty Internal Plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Cacher"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="34" package="Smarty\Cacher">
      <extends>\Smarty_CacheResource</extends>
      <name>Smarty_CacheResource_KeyValueStore</name>
      <full_name>\Smarty_CacheResource_KeyValueStore</full_name>
      <docblock line="9">
        <description>Smarty Cache Handler Base for Key/Value Storage Implementations</description>
        <long-description>&lt;p&gt;This class implements the functionality required to use simple key/value stores
for hierarchical cache groups. key/value stores like memcache or APC do not support
wildcards in keys, therefore a cache group cannot be cleared like "a|*" - which
is no problem to filesystem and RDBMS implementations.&lt;/p&gt;

&lt;p&gt;This implementation is based on the concept of invalidation. While one specific cache
can be identified and cleared, any range of caches cannot be identified. For this reason
each level of the cache group hierarchy can have its own value in the store. These values
are nothing but microtimes, telling us when a particular cache group was cleared for the
last time. These keys are evaluated for every cache read to determine if the cache has
been invalidated since it was created and should hence be treated as inexistent.&lt;/p&gt;

&lt;p&gt;Although deep hierarchies are possible, they are not recommended. Try to keep your
cache groups as shallow as possible. Anything up 3-5 parents should be ok. So
¬ªa|b|c¬´ is a good depth where ¬ªa|b|c|d|e|f|g|h|i|j|k¬´ isn't. Try to join correlating
cache groups: if your cache groups look somewhat like ¬ªa|b|$page|$items|$whatever¬´
consider using ¬ªa|b|c|$page-$items-$whatever¬´ instead.&lt;/p&gt;</long-description>
        <tag line="9" name="package" description="Smarty"/>
        <tag line="9" name="subpackage" description="Cacher"/>
        <tag line="9" name="author" description="Rodney Rehm"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$contents</name>
        <default>array()</default>
        <docblock line="36">
          <description>cache for contents</description>
          <long-description/>
          <tag line="36" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$timestamps</name>
        <default>array()</default>
        <docblock line="41">
          <description>cache for timestamps</description>
          <long-description/>
          <tag line="41" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="Smarty\Cacher">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="47">
          <description>populate Cached Object with meta data from Resource</description>
          <long-description/>
          <tag line="47" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="47" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="47" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
        <argument line="54">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Smarty\Cacher">
        <name>populateTimestamp</name>
        <full_name>populateTimestamp</full_name>
        <docblock line="64">
          <description>populate Cached Object with timestamp and exists from Resource</description>
          <long-description/>
          <tag line="64" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="64" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Smarty\Cacher">
        <name>process</name>
        <full_name>process</full_name>
        <docblock line="80">
          <description>Read the cached template and process the header</description>
          <long-description/>
          <tag line="80" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="80" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="80" name="return" description="true or false if the cached content does not exist" type="\booelan">
            <type by_reference="false">\booelan</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="87">
          <name>$cached</name>
          <default>null</default>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="116" package="Smarty\Cacher">
        <name>writeCachedContent</name>
        <full_name>writeCachedContent</full_name>
        <docblock line="109">
          <description>Write the rendered template output to cache</description>
          <long-description/>
          <tag line="109" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="109" name="param" description="content to cache" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="return" description="success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="116">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="134" package="Smarty\Cacher">
        <name>clearAll</name>
        <full_name>clearAll</full_name>
        <docblock line="123">
          <description>Empty cache</description>
          <long-description>&lt;p&gt;{@internal the $exp_time argument is ignored altogether }}&lt;/p&gt;</long-description>
          <tag line="123" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="123" name="param" description="expiration time [being ignored]" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="123" name="return" description="number of cache files deleted [always -1]" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="123" name="uses" description="to clear the whole store" refers="\purge()"/>
          <tag line="123" name="uses" description="to mark everything outdated if purge() is inapplicable" refers="\invalidate()"/>
        </docblock>
        <argument line="134">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="134">
          <name>$exp_time</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="Smarty\Cacher">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="143">
          <description>Empty cache for a specific template</description>
          <long-description>&lt;p&gt;{@internal the $exp_time argument is ignored altogether}}&lt;/p&gt;</long-description>
          <tag line="143" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="143" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="143" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="143" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="143" name="param" description="expiration time [being ignored]" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="143" name="return" description="number of cache files deleted [always -1]" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="143" name="uses" description="to generate the CacheID" refers="\buildCachedFilepath()"/>
          <tag line="143" name="uses" description="to mark CacheIDs parent chain as outdated" refers="\invalidate()"/>
          <tag line="143" name="uses" description="to remove CacheID from cache" refers="\delete()"/>
        </docblock>
        <argument line="158">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="158">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="158">
          <name>$cache_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="158">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="158">
          <name>$exp_time</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="176" package="Smarty\Cacher">
        <name>getTemplateUid</name>
        <full_name>getTemplateUid</full_name>
        <docblock line="167">
          <description>Get template's unique ID</description>
          <long-description/>
          <tag line="167" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="167" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="return" description="filepath of cache file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="176">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="176">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="176">
          <name>$cache_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="176">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="206" package="Smarty\Cacher">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="200">
          <description>Sanitize CacheID components</description>
          <long-description/>
          <tag line="200" name="param" description="CacheID component to sanitize" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="return" description="sanitized CacheID component" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="206">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="229" package="Smarty\Cacher">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="217">
          <description>Fetch and prepare a cache object.</description>
          <long-description/>
          <tag line="217" name="param" description="CacheID to fetch" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="param" description="cached content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="param" description="&amp;$timestamp    cached timestamp (epoch)" type="integer" variable="$timestamp">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="217" name="param" description="resource's uid" type="string" variable="$resource_uid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="return" description="success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$cid</name>
          <default/>
          <type/>
        </argument>
        <argument line="229">
          <name>$resource_name</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="229">
          <name>$cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="229">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="229">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="229">
          <name>$timestamp</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="229">
          <name>$resource_uid</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="253" package="Smarty\Cacher">
        <name>addMetaTimestamp</name>
        <full_name>addMetaTimestamp</full_name>
        <docblock line="246">
          <description>Add current microtime to the beginning of $cache_content</description>
          <long-description>&lt;p&gt;{@internal the header uses 8 Bytes, the first 4 Bytes are the seconds, the second 4 Bytes are the microseconds}}&lt;/p&gt;</long-description>
          <tag line="246" name="param" description="&amp;$content the content to be cached" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="266" package="Smarty\Cacher">
        <name>getMetaTimestamp</name>
        <full_name>getMetaTimestamp</full_name>
        <docblock line="260">
          <description>Extract the timestamp the $content was cached</description>
          <long-description/>
          <tag line="260" name="param" description="&amp;$content the cached content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="260" name="return" description="the microtime the content was cached" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="285" package="Smarty\Cacher">
        <name>invalidate</name>
        <full_name>invalidate</full_name>
        <docblock line="275">
          <description>Invalidate CacheID</description>
          <long-description/>
          <tag line="275" name="param" description="CacheID" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="source's uid" type="string" variable="$resource_uid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$cid</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="285">
          <name>$resource_name</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="285">
          <name>$cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="285">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="285">
          <name>$resource_uid</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="322" package="Smarty\Cacher">
        <name>getLatestInvalidationTimestamp</name>
        <full_name>getLatestInvalidationTimestamp</full_name>
        <docblock line="312">
          <description>Determine the latest timestamp known to the invalidation chain</description>
          <long-description/>
          <tag line="312" name="param" description="CacheID to determine latest invalidation timestamp of" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="312" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="312" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="312" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="312" name="param" description="source's filepath" type="string" variable="$resource_uid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="312" name="return" description="the microtime the CacheID was invalidated" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="322">
          <name>$cid</name>
          <default/>
          <type/>
        </argument>
        <argument line="322">
          <name>$resource_name</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="322">
          <name>$cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="322">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="322">
          <name>$resource_uid</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="356" package="Smarty\Cacher">
        <name>listInvalidationKeys</name>
        <full_name>listInvalidationKeys</full_name>
        <docblock line="343">
          <description>Translate a CacheID into the list of applicable InvalidationKeys.</description>
          <long-description>&lt;p&gt;Splits "some|chain|into|an|array" into array( '#clearAll#', 'some', 'some|chain', 'some|chain|into', ... )&lt;/p&gt;</long-description>
          <tag line="343" name="param" description="CacheID to translate" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="343" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="343" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="343" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="343" name="param" description="source's filepath" type="string" variable="$resource_uid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="343" name="return" description="list of InvalidationKeys" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="343" name="uses" description="to prepend to each InvalidationKey" refers="\$invalidationKeyPrefix"/>
        </docblock>
        <argument line="356">
          <name>$cid</name>
          <default/>
          <type/>
        </argument>
        <argument line="356">
          <name>$resource_name</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="356">
          <name>$cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="356">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="356">
          <name>$resource_uid</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="403" package="Smarty\Cacher">
        <name>hasLock</name>
        <full_name>hasLock</full_name>
        <docblock line="396">
          <description>Check is cache is locked for this template</description>
          <long-description/>
          <tag line="396" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="396" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="396" name="return" description="true or false if cache is locked" type="\booelan">
            <type by_reference="false">\booelan</type>
          </tag>
        </docblock>
        <argument line="403">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="403">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="417" package="Smarty\Cacher">
        <name>acquireLock</name>
        <full_name>acquireLock</full_name>
        <docblock line="411">
          <description>Lock cache for this template</description>
          <long-description/>
          <tag line="411" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="411" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
        </docblock>
        <argument line="417">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="417">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="430" package="Smarty\Cacher">
        <name>releaseLock</name>
        <full_name>releaseLock</full_name>
        <docblock line="424">
          <description>Unlock cache for this template</description>
          <long-description/>
          <tag line="424" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="424" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
        </docblock>
        <argument line="430">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="430">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="443" package="Smarty\Cacher">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="437">
          <description>Read values for a set of keys from cache</description>
          <long-description/>
          <tag line="437" name="param" description="list of keys to fetch" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="437" name="return" description="list of values with the given keys used as indexes" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="443">
          <name>$keys</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="452" package="Smarty\Cacher">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="445">
          <description>Save values for a set of keys to cache</description>
          <long-description/>
          <tag line="445" name="param" description="list of values to save" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="445" name="param" description="expiration time" type="int" variable="$expire">
            <type by_reference="false">int</type>
          </tag>
          <tag line="445" name="return" description="true on success, false on failure" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="452">
          <name>$keys</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="452">
          <name>$expire</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="460" package="Smarty\Cacher">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="454">
          <description>Remove values from cache</description>
          <long-description/>
          <tag line="454" name="param" description="list of keys to delete" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="454" name="return" description="true on success, false on failure" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="460">
          <name>$keys</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="467" package="Smarty\Cacher">
        <name>purge</name>
        <full_name>purge</full_name>
        <docblock line="462">
          <description>Remove *all* values from cache</description>
          <long-description/>
          <tag line="462" name="return" description="true on success, false on failure" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_get_include_path.php" hash="a254a209e5526b908eb2b87835c459e5" package="Smarty\PluginsInternal">
    <docblock line="2">
      <description>Smarty read include path plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsInternal"/>
      <tag line="2" name="author" description="Monte Ohrt"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Smarty\PluginsInternal">
      <extends/>
      <name>Smarty_Internal_Get_Include_Path</name>
      <full_name>\Smarty_Internal_Get_Include_Path</full_name>
      <docblock line="10">
        <description>Smarty Internal Read Include Path Class</description>
        <long-description/>
        <tag line="10" name="package" description="Smarty"/>
        <tag line="10" name="subpackage" description="PluginsInternal"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="24" package="Smarty\PluginsInternal">
        <name>getIncludePath</name>
        <full_name>getIncludePath</full_name>
        <docblock line="18">
          <description>Return full file path from PHP include_path</description>
          <long-description/>
          <tag line="18" name="param" description="filepath" type="string" variable="$filepath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="return" description="full filepath or false" type="string|boolean">
            <type by_reference="false">string</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$filepath</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_config_file_compiler.php" hash="91bfa10a3d30d9698702063237534d46" package="Smarty\Config">
    <docblock line="2">
      <description>Smarty Internal Plugin Config File Compiler</description>
      <long-description>&lt;p&gt;This is the config file compiler class. It calls the lexer and parser to
perform the compiling.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Config"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="19" package="Smarty\Config">
      <extends/>
      <name>Smarty_Internal_Config_File_Compiler</name>
      <full_name>\Smarty_Internal_Config_File_Compiler</full_name>
      <docblock line="13">
        <description>Main config file compiler class</description>
        <long-description/>
        <tag line="13" name="package" description="Smarty"/>
        <tag line="13" name="subpackage" description="Config"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$lex</name>
        <default/>
        <docblock line="21">
          <description>Lexer object</description>
          <long-description/>
          <tag line="21" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$parser</name>
        <default/>
        <docblock line="28">
          <description>Parser object</description>
          <long-description/>
          <tag line="28" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$smarty</name>
        <default/>
        <docblock line="35">
          <description>Smarty object</description>
          <long-description/>
          <tag line="35" name="var" description="object" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="47" namespace="global" package="Default">
        <name>$config</name>
        <default/>
        <docblock line="42">
          <description>Smarty object</description>
          <long-description/>
          <tag line="42" name="var" description="object" type="\Smarty_Internal_Config">
            <type by_reference="false">\Smarty_Internal_Config</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="54" namespace="global" package="Default">
        <name>$config_data</name>
        <default>array()</default>
        <docblock line="49">
          <description>Compiled config data sections and variables</description>
          <long-description/>
          <tag line="49" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Smarty\Config">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="56">
          <description>Initialize compiler</description>
          <long-description/>
          <tag line="56" name="param" description="base instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$smarty</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="74" package="Smarty\Config">
        <name>compileSource</name>
        <full_name>compileSource</full_name>
        <docblock line="68">
          <description>Method to compile a Smarty template.</description>
          <long-description/>
          <tag line="68" name="param" description="config object" type="\Smarty_Internal_Config" variable="$config">
            <type by_reference="false">\Smarty_Internal_Config</type>
          </tag>
          <tag line="68" name="return" description="true if compiling succeeded, false if it failed" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$config</name>
          <default/>
          <type>\Smarty_Internal_Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Smarty\Config">
        <name>trigger_config_file_error</name>
        <full_name>trigger_config_file_error</full_name>
        <docblock line="100">
          <description>display compiler error messages without dying</description>
          <long-description>&lt;p&gt;If parameter $args is empty it is a parser detected syntax error.
In this case the parser is called to obtain information about exspected tokens.&lt;/p&gt;

&lt;p&gt;If parameter $args contains a string this is used as error message&lt;/p&gt;</long-description>
          <tag line="100" name="param" description="individual error message or null" type="string" variable="$args">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$args</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_include.php" hash="7b179cacbf3342e4c265b5e59f24b633" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Include</description>
      <long-description>&lt;p&gt;Compiles the {include} tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Include</name>
      <full_name>\Smarty_Internal_Compile_Include</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Include Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <constant namespace="global" line="23" package="Smarty\Compiler">
        <name>CACHING_NOCACHE_CODE</name>
        <full_name>CACHING_NOCACHE_CODE</full_name>
        <value>9999</value>
        <docblock line="20">
          <description>caching mode to create nocache code but no cache file</description>
          <long-description/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('file')</default>
        <docblock line="24">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="24" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="24" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('file')</default>
        <docblock line="31">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="31" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="31" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="44" namespace="global" package="Default">
        <name>$option_flags</name>
        <default>array('nocache', 'inline', 'caching')</default>
        <docblock line="38">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="38" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="51" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('_any')</default>
        <docblock line="45">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="45" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="45" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="53">
          <description>Compiles code for the {include} tag</description>
          <long-description/>
          <tag line="53" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="53" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="53" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="53" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="61">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="61">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_private_block_plugin.php" hash="b1268ab799910965390bd98aa2f9b1bc" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Block Plugin</description>
      <long-description>&lt;p&gt;Compiles code for the execution of block plugin&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Private_Block_Plugin</name>
      <full_name>\Smarty_Internal_Compile_Private_Block_Plugin</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Block Plugin Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('_any')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="28">
          <description>Compiles code for the execution of block plugin</description>
          <long-description/>
          <tag line="28" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="28" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="name of block plugin" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="PHP function name" type="string" variable="$function">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_if.php" hash="cd7134209216ac842381c9b073d5c4f8" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile If</description>
      <long-description>&lt;p&gt;Compiles the {if} {else} {elseif} {/if} tags&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_If</name>
      <full_name>\Smarty_Internal_Compile_If</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile If Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="20">
          <description>Compiles code for the {if} tag</description>
          <long-description/>
          <tag line="20" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="20" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="74" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Else</name>
      <full_name>\Smarty_Internal_Compile_Else</full_name>
      <docblock line="68">
        <description>Smarty Internal Plugin Compile Else Class</description>
        <long-description/>
        <tag line="68" name="package" description="Smarty"/>
        <tag line="68" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="76">
          <description>Compiles code for the {else} tag</description>
          <long-description/>
          <tag line="76" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="76" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="76" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="76" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="84">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="84">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="100" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Elseif</name>
      <full_name>\Smarty_Internal_Compile_Elseif</full_name>
      <docblock line="94">
        <description>Smarty Internal Plugin Compile ElseIf Class</description>
        <long-description/>
        <tag line="94" name="package" description="Smarty"/>
        <tag line="94" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="102">
          <description>Compiles code for the {elseif} tag</description>
          <long-description/>
          <tag line="102" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="102" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="102" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="102" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="110">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="110">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="185" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Ifclose</name>
      <full_name>\Smarty_Internal_Compile_Ifclose</full_name>
      <docblock line="179">
        <description>Smarty Internal Plugin Compile Ifclose Class</description>
        <long-description/>
        <tag line="179" name="package" description="Smarty"/>
        <tag line="179" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="187">
          <description>Compiles code for the {/if} tag</description>
          <long-description/>
          <tag line="187" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="187" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="187" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="187" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="195">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="195">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_setfilter.php" hash="4953252d47bf5fab70b0c5096ad97a8c" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Setfilter</description>
      <long-description>&lt;p&gt;Compiles code for setfilter tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Setfilter</name>
      <full_name>\Smarty_Internal_Compile_Setfilter</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Setfilter Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="20">
          <description>Compiles code for setfilter tag</description>
          <long-description/>
          <tag line="20" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="20" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="46" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Setfilterclose</name>
      <full_name>\Smarty_Internal_Compile_Setfilterclose</full_name>
      <docblock line="40">
        <description>Smarty Internal Plugin Compile Setfilterclose Class</description>
        <long-description/>
        <tag line="40" name="package" description="Smarty"/>
        <tag line="40" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="48">
          <description>Compiles code for the {/setfilter} tag</description>
          <long-description>&lt;p&gt;This tag does not generate compiled output. It resets variable filter.&lt;/p&gt;</long-description>
          <tag line="48" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="48" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="48" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="57">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_config_load.php" hash="23bea359eaac32b3da69062832e8c1d4" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Config Load</description>
      <long-description>&lt;p&gt;Compiles the {config load} tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Config_Load</name>
      <full_name>\Smarty_Internal_Compile_Config_Load</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Config Load Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('file')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('file', 'section')</default>
        <docblock line="27">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('section', 'scope')</default>
        <docblock line="34">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="34" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="34" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="42">
          <description>Compiles code for the {config_load} tag</description>
          <long-description/>
          <tag line="42" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="42" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_nocache.php" hash="fb45c6e02d6d123f3d9a0cafb9715ab1" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Nocache</description>
      <long-description>&lt;p&gt;Compiles the {nocache} {/nocache} tags.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Nocache</name>
      <full_name>\Smarty_Internal_Compile_Nocache</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Nocache Classv</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="20">
          <description>Compiles code for the {nocache} tag</description>
          <long-description>&lt;p&gt;This tag does not generate compiled output. It only sets a compiler flag.&lt;/p&gt;</long-description>
          <tag line="20" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="20" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="54" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Nocacheclose</name>
      <full_name>\Smarty_Internal_Compile_Nocacheclose</full_name>
      <docblock line="48">
        <description>Smarty Internal Plugin Compile Nocacheclose Class</description>
        <long-description/>
        <tag line="48" name="package" description="Smarty"/>
        <tag line="48" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="56">
          <description>Compiles code for the {/nocache} tag</description>
          <long-description>&lt;p&gt;This tag does not generate compiled output. It only sets a compiler flag.&lt;/p&gt;</long-description>
          <tag line="56" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="56" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="56" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="65">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_private_special_variable.php" hash="5dada1f43e49583a174eb0f9457807f4" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Special Smarty Variable</description>
      <long-description>&lt;p&gt;Compiles the special $smarty variables&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Private_Special_Variable</name>
      <full_name>\Smarty_Internal_Compile_Private_Special_Variable</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile special Smarty Variable Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="20">
          <description>Compiles code for the speical $smarty variables</description>
          <long-description/>
          <tag line="20" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="20" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="27">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="27">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="20" code="50015">Argument $parameter is missing from the Docblock of compile()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_templatelexer.php" hash="9146be7171737908c20668b7cc1fc992" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Templatelexer</description>
      <long-description>&lt;p&gt;This is the lexer to break the template source into tokens&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends/>
      <name>Smarty_Internal_Templatelexer</name>
      <full_name>\Smarty_Internal_Templatelexer</full_name>
      <docblock line="10">
        <description>Smarty Internal Plugin Templatelexer</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="219" package="Default">
        <name>TEXT</name>
        <full_name>TEXT</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="499" package="Default">
        <name>SMARTY</name>
        <full_name>SMARTY</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="937" package="Default">
        <name>LITERAL</name>
        <full_name>LITERAL</full_name>
        <value>3</value>
      </constant>
      <constant namespace="global" line="1073" package="Default">
        <name>DOUBLEQUOTEDSTRING</name>
        <full_name>DOUBLEQUOTEDSTRING</full_name>
        <value>4</value>
      </constant>
      <constant namespace="global" line="1235" package="Default">
        <name>CHILDBODY</name>
        <full_name>CHILDBODY</full_name>
        <value>5</value>
      </constant>
      <constant namespace="global" line="1345" package="Default">
        <name>CHILDBLOCK</name>
        <full_name>CHILDBLOCK</full_name>
        <value>6</value>
      </constant>
      <property final="false" static="false" visibility="public" line="15" namespace="global" package="Default">
        <name>$data</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="16" namespace="global" package="Default">
        <name>$counter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$token</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$value</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$node</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$line</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$taglineno</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$state</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="private" line="23" namespace="global" package="Default">
        <name>$heredoc_id_stack</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$yyTraceFILE</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$yyTracePrompt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$state_name</name>
        <default>array(1 =&gt; 'TEXT', 2 =&gt; 'SMARTY', 3 =&gt; 'LITERAL', 4 =&gt; 'DOUBLEQUOTEDSTRING', 5 =&gt; 'CHILDBODY')</default>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$smarty_token_names</name>
        <default>array('IDENTITY' =&gt; '===', 'NONEIDENTITY' =&gt; '!==', 'EQUALS' =&gt; '==', 'NOTEQUALS' =&gt; '!=', 'GREATEREQUAL' =&gt; '(&gt;=,ge)', 'LESSEQUAL' =&gt; '(&lt;=,le)', 'GREATERTHAN' =&gt; '(&gt;,gt)', 'LESSTHAN' =&gt; '(&lt;,lt)', 'MOD' =&gt; '(%,mod)', 'NOT' =&gt; '(!,not)', 'LAND' =&gt; '(&amp;&amp;,and)', 'LOR' =&gt; '(||,or)', 'LXOR' =&gt; 'xor', 'OPENP' =&gt; '(', 'CLOSEP' =&gt; ')', 'OPENB' =&gt; '[', 'CLOSEB' =&gt; ']', 'PTR' =&gt; '-&gt;', 'APTR' =&gt; '=&gt;', 'EQUAL' =&gt; '=', 'NUMBER' =&gt; 'number', 'UNIMATH' =&gt; '+" , "-', 'MATH' =&gt; '*" , "/" , "%', 'INCDEC' =&gt; '++" , "--', 'SPACE' =&gt; ' ', 'DOLLAR' =&gt; '$', 'SEMICOLON' =&gt; ';', 'COLON' =&gt; ':', 'DOUBLECOLON' =&gt; '::', 'AT' =&gt; '@', 'HATCH' =&gt; '#', 'QUOTE' =&gt; '"', 'BACKTICK' =&gt; '`', 'VERT' =&gt; '|', 'DOT' =&gt; '.', 'COMMA' =&gt; '","', 'ANDSYM' =&gt; '"&amp;"', 'QMARK' =&gt; '"?"', 'ID' =&gt; 'identifier', 'TEXT' =&gt; 'text', 'FAKEPHPSTARTTAG' =&gt; 'Fake PHP start tag', 'PHPSTARTTAG' =&gt; 'PHP start tag', 'PHPENDTAG' =&gt; 'PHP end tag', 'LITERALSTART' =&gt; 'Literal start', 'LITERALEND' =&gt; 'Literal end', 'LDELSLASH' =&gt; 'closing tag', 'COMMENT' =&gt; 'comment', 'AS' =&gt; 'as', 'TO' =&gt; 'to')</default>
      </property>
      <property final="false" static="false" visibility="private" line="104" namespace="global" package="Default">
        <name>$_yy_state</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="private" line="105" namespace="global" package="Default">
        <name>$_yy_stack</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="80">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
        <argument line="80">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="Default">
        <name>PrintTrace</name>
        <full_name>PrintTrace</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="Default">
        <name>yylex</name>
        <full_name>yylex</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="112" package="Default">
        <name>yypushstate</name>
        <full_name>yypushstate</full_name>
        <argument line="112">
          <name>$state</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="124" package="Default">
        <name>yypopstate</name>
        <full_name>yypopstate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="Default">
        <name>yybegin</name>
        <full_name>yybegin</full_name>
        <argument line="136">
          <name>$state</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="146" package="Default">
        <name>yylex1</name>
        <full_name>yylex1</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="220" package="Default">
        <name>yy_r1_1</name>
        <full_name>yy_r1_1</full_name>
        <argument line="220">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="225" package="Default">
        <name>yy_r1_2</name>
        <full_name>yy_r1_2</full_name>
        <argument line="225">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="230" package="Default">
        <name>yy_r1_4</name>
        <full_name>yy_r1_4</full_name>
        <argument line="230">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="239" package="Default">
        <name>yy_r1_5</name>
        <full_name>yy_r1_5</full_name>
        <argument line="239">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="248" package="Default">
        <name>yy_r1_6</name>
        <full_name>yy_r1_6</full_name>
        <argument line="248">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="258" package="Default">
        <name>yy_r1_7</name>
        <full_name>yy_r1_7</full_name>
        <argument line="258">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="269" package="Default">
        <name>yy_r1_9</name>
        <full_name>yy_r1_9</full_name>
        <argument line="269">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="280" package="Default">
        <name>yy_r1_10</name>
        <full_name>yy_r1_10</full_name>
        <argument line="280">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="291" package="Default">
        <name>yy_r1_11</name>
        <full_name>yy_r1_11</full_name>
        <argument line="291">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="302" package="Default">
        <name>yy_r1_12</name>
        <full_name>yy_r1_12</full_name>
        <argument line="302">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="313" package="Default">
        <name>yy_r1_13</name>
        <full_name>yy_r1_13</full_name>
        <argument line="313">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="324" package="Default">
        <name>yy_r1_14</name>
        <full_name>yy_r1_14</full_name>
        <argument line="324">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="336" package="Default">
        <name>yy_r1_15</name>
        <full_name>yy_r1_15</full_name>
        <argument line="336">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="341" package="Default">
        <name>yy_r1_16</name>
        <full_name>yy_r1_16</full_name>
        <argument line="341">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="346" package="Default">
        <name>yy_r1_17</name>
        <full_name>yy_r1_17</full_name>
        <argument line="346">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="351" package="Default">
        <name>yy_r1_18</name>
        <full_name>yy_r1_18</full_name>
        <argument line="351">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="356" package="Default">
        <name>yy_r1_19</name>
        <full_name>yy_r1_19</full_name>
        <argument line="356">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="377" package="Default">
        <name>yylex2</name>
        <full_name>yylex2</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="500" package="Default">
        <name>yy_r2_1</name>
        <full_name>yy_r2_1</full_name>
        <argument line="500">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="506" package="Default">
        <name>yy_r2_2</name>
        <full_name>yy_r2_2</full_name>
        <argument line="506">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="511" package="Default">
        <name>yy_r2_3</name>
        <full_name>yy_r2_3</full_name>
        <argument line="511">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="517" package="Default">
        <name>yy_r2_5</name>
        <full_name>yy_r2_5</full_name>
        <argument line="517">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="522" package="Default">
        <name>yy_r2_6</name>
        <full_name>yy_r2_6</full_name>
        <argument line="522">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="528" package="Default">
        <name>yy_r2_7</name>
        <full_name>yy_r2_7</full_name>
        <argument line="528">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="533" package="Default">
        <name>yy_r2_8</name>
        <full_name>yy_r2_8</full_name>
        <argument line="533">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="538" package="Default">
        <name>yy_r2_9</name>
        <full_name>yy_r2_9</full_name>
        <argument line="538">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="543" package="Default">
        <name>yy_r2_10</name>
        <full_name>yy_r2_10</full_name>
        <argument line="543">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="548" package="Default">
        <name>yy_r2_11</name>
        <full_name>yy_r2_11</full_name>
        <argument line="548">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="553" package="Default">
        <name>yy_r2_12</name>
        <full_name>yy_r2_12</full_name>
        <argument line="553">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="558" package="Default">
        <name>yy_r2_13</name>
        <full_name>yy_r2_13</full_name>
        <argument line="558">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="563" package="Default">
        <name>yy_r2_14</name>
        <full_name>yy_r2_14</full_name>
        <argument line="563">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="568" package="Default">
        <name>yy_r2_15</name>
        <full_name>yy_r2_15</full_name>
        <argument line="568">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="573" package="Default">
        <name>yy_r2_17</name>
        <full_name>yy_r2_17</full_name>
        <argument line="573">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="578" package="Default">
        <name>yy_r2_19</name>
        <full_name>yy_r2_19</full_name>
        <argument line="578">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="583" package="Default">
        <name>yy_r2_21</name>
        <full_name>yy_r2_21</full_name>
        <argument line="583">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="588" package="Default">
        <name>yy_r2_22</name>
        <full_name>yy_r2_22</full_name>
        <argument line="588">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="593" package="Default">
        <name>yy_r2_23</name>
        <full_name>yy_r2_23</full_name>
        <argument line="593">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="598" package="Default">
        <name>yy_r2_24</name>
        <full_name>yy_r2_24</full_name>
        <argument line="598">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="603" package="Default">
        <name>yy_r2_25</name>
        <full_name>yy_r2_25</full_name>
        <argument line="603">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="608" package="Default">
        <name>yy_r2_26</name>
        <full_name>yy_r2_26</full_name>
        <argument line="608">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="613" package="Default">
        <name>yy_r2_27</name>
        <full_name>yy_r2_27</full_name>
        <argument line="613">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="618" package="Default">
        <name>yy_r2_28</name>
        <full_name>yy_r2_28</full_name>
        <argument line="618">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="623" package="Default">
        <name>yy_r2_29</name>
        <full_name>yy_r2_29</full_name>
        <argument line="623">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="628" package="Default">
        <name>yy_r2_30</name>
        <full_name>yy_r2_30</full_name>
        <argument line="628">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="633" package="Default">
        <name>yy_r2_31</name>
        <full_name>yy_r2_31</full_name>
        <argument line="633">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="638" package="Default">
        <name>yy_r2_32</name>
        <full_name>yy_r2_32</full_name>
        <argument line="638">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="643" package="Default">
        <name>yy_r2_33</name>
        <full_name>yy_r2_33</full_name>
        <argument line="643">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="648" package="Default">
        <name>yy_r2_34</name>
        <full_name>yy_r2_34</full_name>
        <argument line="648">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="653" package="Default">
        <name>yy_r2_35</name>
        <full_name>yy_r2_35</full_name>
        <argument line="653">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="658" package="Default">
        <name>yy_r2_36</name>
        <full_name>yy_r2_36</full_name>
        <argument line="658">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="663" package="Default">
        <name>yy_r2_37</name>
        <full_name>yy_r2_37</full_name>
        <argument line="663">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="668" package="Default">
        <name>yy_r2_38</name>
        <full_name>yy_r2_38</full_name>
        <argument line="668">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="673" package="Default">
        <name>yy_r2_42</name>
        <full_name>yy_r2_42</full_name>
        <argument line="673">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="678" package="Default">
        <name>yy_r2_43</name>
        <full_name>yy_r2_43</full_name>
        <argument line="678">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="683" package="Default">
        <name>yy_r2_44</name>
        <full_name>yy_r2_44</full_name>
        <argument line="683">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="688" package="Default">
        <name>yy_r2_45</name>
        <full_name>yy_r2_45</full_name>
        <argument line="688">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="693" package="Default">
        <name>yy_r2_46</name>
        <full_name>yy_r2_46</full_name>
        <argument line="693">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="698" package="Default">
        <name>yy_r2_47</name>
        <full_name>yy_r2_47</full_name>
        <argument line="698">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="703" package="Default">
        <name>yy_r2_48</name>
        <full_name>yy_r2_48</full_name>
        <argument line="703">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="708" package="Default">
        <name>yy_r2_49</name>
        <full_name>yy_r2_49</full_name>
        <argument line="708">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="713" package="Default">
        <name>yy_r2_50</name>
        <full_name>yy_r2_50</full_name>
        <argument line="713">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="718" package="Default">
        <name>yy_r2_52</name>
        <full_name>yy_r2_52</full_name>
        <argument line="718">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="723" package="Default">
        <name>yy_r2_54</name>
        <full_name>yy_r2_54</full_name>
        <argument line="723">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="728" package="Default">
        <name>yy_r2_55</name>
        <full_name>yy_r2_55</full_name>
        <argument line="728">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="733" package="Default">
        <name>yy_r2_56</name>
        <full_name>yy_r2_56</full_name>
        <argument line="733">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="745" package="Default">
        <name>yy_r2_57</name>
        <full_name>yy_r2_57</full_name>
        <argument line="745">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="750" package="Default">
        <name>yy_r2_58</name>
        <full_name>yy_r2_58</full_name>
        <argument line="750">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="755" package="Default">
        <name>yy_r2_59</name>
        <full_name>yy_r2_59</full_name>
        <argument line="755">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="761" package="Default">
        <name>yy_r2_60</name>
        <full_name>yy_r2_60</full_name>
        <argument line="761">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="766" package="Default">
        <name>yy_r2_61</name>
        <full_name>yy_r2_61</full_name>
        <argument line="766">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="771" package="Default">
        <name>yy_r2_62</name>
        <full_name>yy_r2_62</full_name>
        <argument line="771">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="776" package="Default">
        <name>yy_r2_63</name>
        <full_name>yy_r2_63</full_name>
        <argument line="776">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="781" package="Default">
        <name>yy_r2_64</name>
        <full_name>yy_r2_64</full_name>
        <argument line="781">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="786" package="Default">
        <name>yy_r2_65</name>
        <full_name>yy_r2_65</full_name>
        <argument line="786">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="791" package="Default">
        <name>yy_r2_66</name>
        <full_name>yy_r2_66</full_name>
        <argument line="791">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="796" package="Default">
        <name>yy_r2_67</name>
        <full_name>yy_r2_67</full_name>
        <argument line="796">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="801" package="Default">
        <name>yy_r2_68</name>
        <full_name>yy_r2_68</full_name>
        <argument line="801">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="806" package="Default">
        <name>yy_r2_69</name>
        <full_name>yy_r2_69</full_name>
        <argument line="806">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="811" package="Default">
        <name>yy_r2_70</name>
        <full_name>yy_r2_70</full_name>
        <argument line="811">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="822" package="Default">
        <name>yy_r2_72</name>
        <full_name>yy_r2_72</full_name>
        <argument line="822">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="833" package="Default">
        <name>yy_r2_73</name>
        <full_name>yy_r2_73</full_name>
        <argument line="833">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="844" package="Default">
        <name>yy_r2_74</name>
        <full_name>yy_r2_74</full_name>
        <argument line="844">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="855" package="Default">
        <name>yy_r2_75</name>
        <full_name>yy_r2_75</full_name>
        <argument line="855">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="866" package="Default">
        <name>yy_r2_76</name>
        <full_name>yy_r2_76</full_name>
        <argument line="866">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="874" package="Default">
        <name>yylex3</name>
        <full_name>yylex3</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="938" package="Default">
        <name>yy_r3_1</name>
        <full_name>yy_r3_1</full_name>
        <argument line="938">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="948" package="Default">
        <name>yy_r3_2</name>
        <full_name>yy_r3_2</full_name>
        <argument line="948">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="958" package="Default">
        <name>yy_r3_3</name>
        <full_name>yy_r3_3</full_name>
        <argument line="958">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="968" package="Default">
        <name>yy_r3_4</name>
        <full_name>yy_r3_4</full_name>
        <argument line="968">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="973" package="Default">
        <name>yy_r3_5</name>
        <full_name>yy_r3_5</full_name>
        <argument line="973">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="978" package="Default">
        <name>yy_r3_6</name>
        <full_name>yy_r3_6</full_name>
        <argument line="978">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="983" package="Default">
        <name>yy_r3_7</name>
        <full_name>yy_r3_7</full_name>
        <argument line="983">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1006" package="Default">
        <name>yylex4</name>
        <full_name>yylex4</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1074" package="Default">
        <name>yy_r4_1</name>
        <full_name>yy_r4_1</full_name>
        <argument line="1074">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1085" package="Default">
        <name>yy_r4_3</name>
        <full_name>yy_r4_3</full_name>
        <argument line="1085">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1096" package="Default">
        <name>yy_r4_4</name>
        <full_name>yy_r4_4</full_name>
        <argument line="1096">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1107" package="Default">
        <name>yy_r4_5</name>
        <full_name>yy_r4_5</full_name>
        <argument line="1107">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1118" package="Default">
        <name>yy_r4_6</name>
        <full_name>yy_r4_6</full_name>
        <argument line="1118">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1129" package="Default">
        <name>yy_r4_7</name>
        <full_name>yy_r4_7</full_name>
        <argument line="1129">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1135" package="Default">
        <name>yy_r4_8</name>
        <full_name>yy_r4_8</full_name>
        <argument line="1135">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1143" package="Default">
        <name>yy_r4_9</name>
        <full_name>yy_r4_9</full_name>
        <argument line="1143">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1148" package="Default">
        <name>yy_r4_10</name>
        <full_name>yy_r4_10</full_name>
        <argument line="1148">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1153" package="Default">
        <name>yy_r4_11</name>
        <full_name>yy_r4_11</full_name>
        <argument line="1153">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1158" package="Default">
        <name>yy_r4_15</name>
        <full_name>yy_r4_15</full_name>
        <argument line="1158">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1175" package="Default">
        <name>yylex5</name>
        <full_name>yylex5</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1236" package="Default">
        <name>yy_r5_1</name>
        <full_name>yy_r5_1</full_name>
        <argument line="1236">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1245" package="Default">
        <name>yy_r5_2</name>
        <full_name>yy_r5_2</full_name>
        <argument line="1245">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1254" package="Default">
        <name>yy_r5_3</name>
        <full_name>yy_r5_3</full_name>
        <argument line="1254">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1264" package="Default">
        <name>yy_r5_4</name>
        <full_name>yy_r5_4</full_name>
        <argument line="1264">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1285" package="Default">
        <name>yylex6</name>
        <full_name>yylex6</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1346" package="Default">
        <name>yy_r6_1</name>
        <full_name>yy_r6_1</full_name>
        <argument line="1346">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1356" package="Default">
        <name>yy_r6_2</name>
        <full_name>yy_r6_2</full_name>
        <argument line="1356">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1366" package="Default">
        <name>yy_r6_3</name>
        <full_name>yy_r6_3</full_name>
        <argument line="1366">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1376" package="Default">
        <name>yy_r6_5</name>
        <full_name>yy_r6_5</full_name>
        <argument line="1376">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="15" code="50018">No DocBlock was found for property $data</error>
      <error line="16" code="50018">No DocBlock was found for property $counter</error>
      <error line="17" code="50018">No DocBlock was found for property $token</error>
      <error line="18" code="50018">No DocBlock was found for property $value</error>
      <error line="19" code="50018">No DocBlock was found for property $node</error>
      <error line="20" code="50018">No DocBlock was found for property $line</error>
      <error line="21" code="50018">No DocBlock was found for property $taglineno</error>
      <error line="22" code="50018">No DocBlock was found for property $state</error>
      <error line="23" code="50018">No DocBlock was found for property $heredoc_id_stack</error>
      <error line="24" code="50018">No DocBlock was found for property $yyTraceFILE</error>
      <error line="25" code="50018">No DocBlock was found for property $yyTracePrompt</error>
      <error line="26" code="50018">No DocBlock was found for property $state_name</error>
      <error line="27" code="50018">No DocBlock was found for property $smarty_token_names</error>
      <error line="104" code="50018">No DocBlock was found for property $_yy_state</error>
      <error line="105" code="50018">No DocBlock was found for property $_yy_stack</error>
      <error line="80" code="50010">No DocBlock was found for method __construct()</error>
      <error line="97" code="50010">No DocBlock was found for method PrintTrace()</error>
      <error line="107" code="50010">No DocBlock was found for method yylex()</error>
      <error line="112" code="50010">No DocBlock was found for method yypushstate()</error>
      <error line="124" code="50010">No DocBlock was found for method yypopstate()</error>
      <error line="136" code="50010">No DocBlock was found for method yybegin()</error>
      <error line="146" code="50010">No DocBlock was found for method yylex1()</error>
      <error line="220" code="50010">No DocBlock was found for method yy_r1_1()</error>
      <error line="225" code="50010">No DocBlock was found for method yy_r1_2()</error>
      <error line="230" code="50010">No DocBlock was found for method yy_r1_4()</error>
      <error line="239" code="50010">No DocBlock was found for method yy_r1_5()</error>
      <error line="248" code="50010">No DocBlock was found for method yy_r1_6()</error>
      <error line="258" code="50010">No DocBlock was found for method yy_r1_7()</error>
      <error line="269" code="50010">No DocBlock was found for method yy_r1_9()</error>
      <error line="280" code="50010">No DocBlock was found for method yy_r1_10()</error>
      <error line="291" code="50010">No DocBlock was found for method yy_r1_11()</error>
      <error line="302" code="50010">No DocBlock was found for method yy_r1_12()</error>
      <error line="313" code="50010">No DocBlock was found for method yy_r1_13()</error>
      <error line="324" code="50010">No DocBlock was found for method yy_r1_14()</error>
      <error line="336" code="50010">No DocBlock was found for method yy_r1_15()</error>
      <error line="341" code="50010">No DocBlock was found for method yy_r1_16()</error>
      <error line="346" code="50010">No DocBlock was found for method yy_r1_17()</error>
      <error line="351" code="50010">No DocBlock was found for method yy_r1_18()</error>
      <error line="356" code="50010">No DocBlock was found for method yy_r1_19()</error>
      <error line="377" code="50010">No DocBlock was found for method yylex2()</error>
      <error line="500" code="50010">No DocBlock was found for method yy_r2_1()</error>
      <error line="506" code="50010">No DocBlock was found for method yy_r2_2()</error>
      <error line="511" code="50010">No DocBlock was found for method yy_r2_3()</error>
      <error line="517" code="50010">No DocBlock was found for method yy_r2_5()</error>
      <error line="522" code="50010">No DocBlock was found for method yy_r2_6()</error>
      <error line="528" code="50010">No DocBlock was found for method yy_r2_7()</error>
      <error line="533" code="50010">No DocBlock was found for method yy_r2_8()</error>
      <error line="538" code="50010">No DocBlock was found for method yy_r2_9()</error>
      <error line="543" code="50010">No DocBlock was found for method yy_r2_10()</error>
      <error line="548" code="50010">No DocBlock was found for method yy_r2_11()</error>
      <error line="553" code="50010">No DocBlock was found for method yy_r2_12()</error>
      <error line="558" code="50010">No DocBlock was found for method yy_r2_13()</error>
      <error line="563" code="50010">No DocBlock was found for method yy_r2_14()</error>
      <error line="568" code="50010">No DocBlock was found for method yy_r2_15()</error>
      <error line="573" code="50010">No DocBlock was found for method yy_r2_17()</error>
      <error line="578" code="50010">No DocBlock was found for method yy_r2_19()</error>
      <error line="583" code="50010">No DocBlock was found for method yy_r2_21()</error>
      <error line="588" code="50010">No DocBlock was found for method yy_r2_22()</error>
      <error line="593" code="50010">No DocBlock was found for method yy_r2_23()</error>
      <error line="598" code="50010">No DocBlock was found for method yy_r2_24()</error>
      <error line="603" code="50010">No DocBlock was found for method yy_r2_25()</error>
      <error line="608" code="50010">No DocBlock was found for method yy_r2_26()</error>
      <error line="613" code="50010">No DocBlock was found for method yy_r2_27()</error>
      <error line="618" code="50010">No DocBlock was found for method yy_r2_28()</error>
      <error line="623" code="50010">No DocBlock was found for method yy_r2_29()</error>
      <error line="628" code="50010">No DocBlock was found for method yy_r2_30()</error>
      <error line="633" code="50010">No DocBlock was found for method yy_r2_31()</error>
      <error line="638" code="50010">No DocBlock was found for method yy_r2_32()</error>
      <error line="643" code="50010">No DocBlock was found for method yy_r2_33()</error>
      <error line="648" code="50010">No DocBlock was found for method yy_r2_34()</error>
      <error line="653" code="50010">No DocBlock was found for method yy_r2_35()</error>
      <error line="658" code="50010">No DocBlock was found for method yy_r2_36()</error>
      <error line="663" code="50010">No DocBlock was found for method yy_r2_37()</error>
      <error line="668" code="50010">No DocBlock was found for method yy_r2_38()</error>
      <error line="673" code="50010">No DocBlock was found for method yy_r2_42()</error>
      <error line="678" code="50010">No DocBlock was found for method yy_r2_43()</error>
      <error line="683" code="50010">No DocBlock was found for method yy_r2_44()</error>
      <error line="688" code="50010">No DocBlock was found for method yy_r2_45()</error>
      <error line="693" code="50010">No DocBlock was found for method yy_r2_46()</error>
      <error line="698" code="50010">No DocBlock was found for method yy_r2_47()</error>
      <error line="703" code="50010">No DocBlock was found for method yy_r2_48()</error>
      <error line="708" code="50010">No DocBlock was found for method yy_r2_49()</error>
      <error line="713" code="50010">No DocBlock was found for method yy_r2_50()</error>
      <error line="718" code="50010">No DocBlock was found for method yy_r2_52()</error>
      <error line="723" code="50010">No DocBlock was found for method yy_r2_54()</error>
      <error line="728" code="50010">No DocBlock was found for method yy_r2_55()</error>
      <error line="733" code="50010">No DocBlock was found for method yy_r2_56()</error>
      <error line="745" code="50010">No DocBlock was found for method yy_r2_57()</error>
      <error line="750" code="50010">No DocBlock was found for method yy_r2_58()</error>
      <error line="755" code="50010">No DocBlock was found for method yy_r2_59()</error>
      <error line="761" code="50010">No DocBlock was found for method yy_r2_60()</error>
      <error line="766" code="50010">No DocBlock was found for method yy_r2_61()</error>
      <error line="771" code="50010">No DocBlock was found for method yy_r2_62()</error>
      <error line="776" code="50010">No DocBlock was found for method yy_r2_63()</error>
      <error line="781" code="50010">No DocBlock was found for method yy_r2_64()</error>
      <error line="786" code="50010">No DocBlock was found for method yy_r2_65()</error>
      <error line="791" code="50010">No DocBlock was found for method yy_r2_66()</error>
      <error line="796" code="50010">No DocBlock was found for method yy_r2_67()</error>
      <error line="801" code="50010">No DocBlock was found for method yy_r2_68()</error>
      <error line="806" code="50010">No DocBlock was found for method yy_r2_69()</error>
      <error line="811" code="50010">No DocBlock was found for method yy_r2_70()</error>
      <error line="822" code="50010">No DocBlock was found for method yy_r2_72()</error>
      <error line="833" code="50010">No DocBlock was found for method yy_r2_73()</error>
      <error line="844" code="50010">No DocBlock was found for method yy_r2_74()</error>
      <error line="855" code="50010">No DocBlock was found for method yy_r2_75()</error>
      <error line="866" code="50010">No DocBlock was found for method yy_r2_76()</error>
      <error line="874" code="50010">No DocBlock was found for method yylex3()</error>
      <error line="938" code="50010">No DocBlock was found for method yy_r3_1()</error>
      <error line="948" code="50010">No DocBlock was found for method yy_r3_2()</error>
      <error line="958" code="50010">No DocBlock was found for method yy_r3_3()</error>
      <error line="968" code="50010">No DocBlock was found for method yy_r3_4()</error>
      <error line="973" code="50010">No DocBlock was found for method yy_r3_5()</error>
      <error line="978" code="50010">No DocBlock was found for method yy_r3_6()</error>
      <error line="983" code="50010">No DocBlock was found for method yy_r3_7()</error>
      <error line="1006" code="50010">No DocBlock was found for method yylex4()</error>
      <error line="1074" code="50010">No DocBlock was found for method yy_r4_1()</error>
      <error line="1085" code="50010">No DocBlock was found for method yy_r4_3()</error>
      <error line="1096" code="50010">No DocBlock was found for method yy_r4_4()</error>
      <error line="1107" code="50010">No DocBlock was found for method yy_r4_5()</error>
      <error line="1118" code="50010">No DocBlock was found for method yy_r4_6()</error>
      <error line="1129" code="50010">No DocBlock was found for method yy_r4_7()</error>
      <error line="1135" code="50010">No DocBlock was found for method yy_r4_8()</error>
      <error line="1143" code="50010">No DocBlock was found for method yy_r4_9()</error>
      <error line="1148" code="50010">No DocBlock was found for method yy_r4_10()</error>
      <error line="1153" code="50010">No DocBlock was found for method yy_r4_11()</error>
      <error line="1158" code="50010">No DocBlock was found for method yy_r4_15()</error>
      <error line="1175" code="50010">No DocBlock was found for method yylex5()</error>
      <error line="1236" code="50010">No DocBlock was found for method yy_r5_1()</error>
      <error line="1245" code="50010">No DocBlock was found for method yy_r5_2()</error>
      <error line="1254" code="50010">No DocBlock was found for method yy_r5_3()</error>
      <error line="1264" code="50010">No DocBlock was found for method yy_r5_4()</error>
      <error line="1285" code="50010">No DocBlock was found for method yylex6()</error>
      <error line="1346" code="50010">No DocBlock was found for method yy_r6_1()</error>
      <error line="1356" code="50010">No DocBlock was found for method yy_r6_2()</error>
      <error line="1366" code="50010">No DocBlock was found for method yy_r6_3()</error>
      <error line="1376" code="50010">No DocBlock was found for method yy_r6_5()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_ldelim.php" hash="6c600702f32526fc97489bd2d24cf694" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Ldelim</description>
      <long-description>&lt;p&gt;Compiles the {ldelim} tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Ldelim</name>
      <full_name>\Smarty_Internal_Compile_Ldelim</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Ldelim Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="20">
          <description>Compiles code for the {ldelim} tag</description>
          <long-description>&lt;p&gt;This tag does output the left delimiter&lt;/p&gt;</long-description>
          <tag line="20" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="20" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_resource_recompiled.php" hash="50eccd380d108c15ea6c31c5bf5dee8a" package="Smarty\TemplateResources">
    <docblock line="2">
      <description>Smarty Resource Plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="TemplateResources"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="18" package="Smarty\TemplateResources">
      <extends>\Smarty_Resource</extends>
      <name>Smarty_Resource_Recompiled</name>
      <full_name>\Smarty_Resource_Recompiled</full_name>
      <docblock line="10">
        <description>Smarty Resource Plugin</description>
        <long-description>&lt;p&gt;Base implementation for resource plugins that don't compile cache&lt;/p&gt;</long-description>
        <tag line="10" name="package" description="Smarty"/>
        <tag line="10" name="subpackage" description="TemplateResources"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="Smarty\TemplateResources">
        <name>populateCompiledFilepath</name>
        <full_name>populateCompiledFilepath</full_name>
        <docblock line="20">
          <description>populate Compiled Object with compiled filepath</description>
          <long-description/>
          <tag line="20" name="param" description="compiled object" type="\Smarty_Template_Compiled" variable="$compiled">
            <type by_reference="false">\Smarty_Template_Compiled</type>
          </tag>
          <tag line="20" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="20" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$compiled</name>
          <default/>
          <type>\Smarty_Template_Compiled</type>
        </argument>
        <argument line="27">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_utility.php" hash="cd69f07c30b629c0a5cda17ce859a3ae" package="Smarty\PluginsInternal">
    <docblock line="2">
      <description>Project:     Smarty: the PHP compiling template engine
File:        smarty_internal_utility.php
SVN:         $Id: $</description>
      <long-description>&lt;p&gt;This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.&lt;/p&gt;

&lt;p&gt;This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.&lt;/p&gt;

&lt;p&gt;You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&lt;/p&gt;

&lt;p&gt;For questions, help, comments, discussion, etc., please join the
Smarty mailing list. Send a blank e-mail to
smarty-discussion-subscribe@googlegroups.com&lt;/p&gt;</long-description>
      <tag line="2" name="link" description="http://www.smarty.net/" link="http://www.smarty.net/"/>
      <tag line="2" name="copyright" description="2008 New Digital Group, Inc."/>
      <tag line="2" name="author" description="Monte Ohrt &lt;monte at ohrt dot com&gt;"/>
      <tag line="2" name="author" description="Uwe Tews"/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsInternal"/>
      <tag line="2" name="version" description="3-SVN$Rev: 3286 $"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="40" package="Smarty\Security">
      <extends/>
      <name>Smarty_Internal_Utility</name>
      <full_name>\Smarty_Internal_Utility</full_name>
      <docblock line="34">
        <description>Utility class</description>
        <long-description/>
        <tag line="34" name="package" description="Smarty"/>
        <tag line="34" name="subpackage" description="Security"/>
      </docblock>
      <method final="true" abstract="false" static="false" visibility="private" namespace="global" line="45" package="Smarty\Security">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="42">
          <description>private constructor to prevent calls creation of new instances</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="60" package="Smarty\Security">
        <name>compileAllTemplates</name>
        <full_name>compileAllTemplates</full_name>
        <docblock line="50">
          <description>Compile all template files</description>
          <long-description/>
          <tag line="50" name="param" description="template file name extension" type="string" variable="$extension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="param" description="force all to recompile" type="bool" variable="$force_compile">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="50" name="param" description="set maximum execution time" type="int" variable="$time_limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="50" name="param" description="set maximum allowed errors" type="int" variable="$max_errors">
            <type by_reference="false">int</type>
          </tag>
          <tag line="50" name="param" description="Smarty instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="50" name="return" description="number of template files compiled" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$extension</name>
          <default/>
          <type/>
        </argument>
        <argument line="60">
          <name>$force_compile</name>
          <default/>
          <type/>
        </argument>
        <argument line="60">
          <name>$time_limit</name>
          <default/>
          <type/>
        </argument>
        <argument line="60">
          <name>$max_errors</name>
          <default/>
          <type/>
        </argument>
        <argument line="60">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="124" package="Smarty\Security">
        <name>compileAllConfig</name>
        <full_name>compileAllConfig</full_name>
        <docblock line="114">
          <description>Compile all config files</description>
          <long-description/>
          <tag line="114" name="param" description="config file name extension" type="string" variable="$extension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="114" name="param" description="force all to recompile" type="bool" variable="$force_compile">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="114" name="param" description="set maximum execution time" type="int" variable="$time_limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="114" name="param" description="set maximum allowed errors" type="int" variable="$max_errors">
            <type by_reference="false">int</type>
          </tag>
          <tag line="114" name="param" description="Smarty instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="114" name="return" description="number of config files compiled" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$extension</name>
          <default/>
          <type/>
        </argument>
        <argument line="124">
          <name>$force_compile</name>
          <default/>
          <type/>
        </argument>
        <argument line="124">
          <name>$time_limit</name>
          <default/>
          <type/>
        </argument>
        <argument line="124">
          <name>$max_errors</name>
          <default/>
          <type/>
        </argument>
        <argument line="124">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="183" package="Smarty\Security">
        <name>clearCompiledTemplate</name>
        <full_name>clearCompiledTemplate</full_name>
        <docblock line="174">
          <description>Delete compiled template file</description>
          <long-description/>
          <tag line="174" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="174" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="174" name="param" description="expiration time" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="174" name="param" description="Smarty instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="174" name="return" description="number of template files deleted" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="183">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="183">
          <name>$exp_time</name>
          <default/>
          <type/>
        </argument>
        <argument line="183">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="278" package="Smarty\Security">
        <name>getTags</name>
        <full_name>getTags</full_name>
        <docblock line="272">
          <description>Return array of tag/attributes of all tags used by an template</description>
          <long-description/>
          <tag line="272" name="param" description="template object" type="\Smarty_Internal_Template" variable="$templae">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="272" name="return" description="of tag/attributes" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="295" package="Smarty\Security">
        <name>testInstall</name>
        <full_name>testInstall</full_name>
        <docblock line="286">
          <description>diagnose Smarty setup</description>
          <long-description>&lt;p&gt;If $errors is secified, the diagnostic report will be appended to the array, rather than being output.&lt;/p&gt;</long-description>
          <tag line="286" name="param" description="Smarty instance to test" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="286" name="param" description="array to push results into rather than outputting them" type="array" variable="$errors">
            <type by_reference="false">array</type>
          </tag>
          <tag line="286" name="return" description="status, true if everything is fine, false else" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="295">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="295">
          <name>$errors</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="272" code="50014">Name of argument $template does not match with the DocBlock's name $templae in getTags()</error>
      <notice line="272" code="50013">Parameter $templae could not be found in getTags()</notice>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_private_registered_function.php" hash="b1be6a1457bcea72fc35ff9d5d80b1a6" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Registered Function</description>
      <long-description>&lt;p&gt;Compiles code for the execution of a registered function&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Private_Registered_Function</name>
      <full_name>\Smarty_Internal_Compile_Private_Registered_Function</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Registered Function Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('_any')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="28">
          <description>Compiles code for the execution of a registered function</description>
          <long-description/>
          <tag line="28" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="28" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="name of function" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="37">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="37">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
        <argument line="37">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_assign.php" hash="2fd093423d47bc077bdcba992945a44c" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Assign</description>
      <long-description>&lt;p&gt;Compiles the {assign} tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Assign</name>
      <full_name>\Smarty_Internal_Compile_Assign</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Assign Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="20">
          <description>Compiles code for the {assign} tag</description>
          <long-description/>
          <tag line="20" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="20" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_while.php" hash="5b8a326871ca3cd3b798760649a8a33b" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile While</description>
      <long-description>&lt;p&gt;Compiles the {while} tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_While</name>
      <full_name>\Smarty_Internal_Compile_While</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile While Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="20">
          <description>Compiles code for the {while} tag</description>
          <long-description/>
          <tag line="20" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="20" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="74" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Whileclose</name>
      <full_name>\Smarty_Internal_Compile_Whileclose</full_name>
      <docblock line="68">
        <description>Smarty Internal Plugin Compile Whileclose Class</description>
        <long-description/>
        <tag line="68" name="package" description="Smarty"/>
        <tag line="68" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="76">
          <description>Compiles code for the {/while} tag</description>
          <long-description/>
          <tag line="76" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="76" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="76" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="83">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_templatecompilerbase.php" hash="3b0ce955fd1681aa1c1dee133a7f4ceb" package="Smarty\Compiler">
    <docblock line="3">
      <description>Smarty Internal Plugin Smarty Template Compiler Base</description>
      <long-description>&lt;p&gt;This file contains the basic classes and methodes for compiling Smarty templates with lexer/parser&lt;/p&gt;</long-description>
      <tag line="3" name="package" description="Smarty"/>
      <tag line="3" name="subpackage" description="Compiler"/>
      <tag line="3" name="author" description="Uwe Tews"/>
    </docblock>
    <include line="657" type="Include Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="true" namespace="global" line="19" package="Smarty\Compiler">
      <extends/>
      <name>Smarty_Internal_TemplateCompilerBase</name>
      <full_name>\Smarty_Internal_TemplateCompilerBase</full_name>
      <docblock line="13">
        <description>Main abstract compiler class</description>
        <long-description/>
        <tag line="13" name="package" description="Smarty"/>
        <tag line="13" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="26" namespace="global" package="Default">
        <name>$nocache_hash</name>
        <default>null</default>
        <docblock line="21">
          <description>hash for nocache sections</description>
          <long-description/>
          <tag line="21" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$suppressNocacheProcessing</name>
        <default>false</default>
        <docblock line="28">
          <description>suppress generation of nocache code</description>
          <long-description/>
          <tag line="28" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$suppressMergedTemplates</name>
        <default>false</default>
        <docblock line="35">
          <description>suppress generation of merged template code</description>
          <long-description/>
          <tag line="35" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="47" namespace="global" package="Default">
        <name>$_tag_objects</name>
        <default>array()</default>
        <docblock line="42">
          <description>compile tag objects</description>
          <long-description/>
          <tag line="42" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="54" namespace="global" package="Default">
        <name>$_tag_stack</name>
        <default>array()</default>
        <docblock line="49">
          <description>tag stack</description>
          <long-description/>
          <tag line="49" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="61" namespace="global" package="Default">
        <name>$template</name>
        <default>null</default>
        <docblock line="56">
          <description>current template</description>
          <long-description/>
          <tag line="56" name="var" description="" type="\Smarty_Internal_Template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="68" namespace="global" package="Default">
        <name>$merged_templates</name>
        <default>array()</default>
        <docblock line="63">
          <description>merged templates</description>
          <long-description/>
          <tag line="63" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="75" namespace="global" package="Default">
        <name>$sources</name>
        <default>array()</default>
        <docblock line="70">
          <description>sources which must be compiled</description>
          <long-description/>
          <tag line="70" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="82" namespace="global" package="Default">
        <name>$inheritance</name>
        <default>false</default>
        <docblock line="77">
          <description>flag that we are inside {block}</description>
          <long-description/>
          <tag line="77" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="89" namespace="global" package="Default">
        <name>$inheritance_child</name>
        <default>false</default>
        <docblock line="84">
          <description>flag when compiling inheritance child template</description>
          <long-description/>
          <tag line="84" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="96" namespace="global" package="Default">
        <name>$extends_uid</name>
        <default>array()</default>
        <docblock line="91">
          <description>uid of templates called by {extends} for recursion check</description>
          <long-description/>
          <tag line="91" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="103" namespace="global" package="Default">
        <name>$trace_line_offset</name>
        <default>0</default>
        <docblock line="98">
          <description>source line offset for error messages</description>
          <long-description/>
          <tag line="98" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="110" namespace="global" package="Default">
        <name>$trace_uid</name>
        <default>''</default>
        <docblock line="105">
          <description>trace uid</description>
          <long-description/>
          <tag line="105" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="117" namespace="global" package="Default">
        <name>$trace_filepath</name>
        <default>''</default>
        <docblock line="112">
          <description>trace file path</description>
          <long-description/>
          <tag line="112" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="123" namespace="global" package="Default">
        <name>$trace_stack</name>
        <default>array()</default>
        <docblock line="118">
          <description>stack for tracing file and line of nested {block} tags</description>
          <long-description/>
          <tag line="118" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="130" namespace="global" package="Default">
        <name>$default_handler_plugins</name>
        <default>array()</default>
        <docblock line="125">
          <description>plugins loaded by default plugin handler</description>
          <long-description/>
          <tag line="125" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="137" namespace="global" package="Default">
        <name>$default_modifier_list</name>
        <default>null</default>
        <docblock line="132">
          <description>saved preprocessed modifier list</description>
          <long-description/>
          <tag line="132" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="143" namespace="global" package="Default">
        <name>$forceNocache</name>
        <default>false</default>
        <docblock line="139">
          <description>force compilation of complete template as nocache</description>
          <long-description/>
          <tag line="139" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="149" namespace="global" package="Default">
        <name>$suppressHeader</name>
        <default>false</default>
        <docblock line="145">
          <description>suppress Smarty header code in compiled template</description>
          <long-description/>
          <tag line="145" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="155" namespace="global" package="Default">
        <name>$suppressTemplatePropertyHeader</name>
        <default>false</default>
        <docblock line="151">
          <description>suppress template property header code in compiled template</description>
          <long-description/>
          <tag line="151" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="161" namespace="global" package="Default">
        <name>$suppressFilter</name>
        <default>false</default>
        <docblock line="157">
          <description>suppress pre and post filter</description>
          <long-description/>
          <tag line="157" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="167" namespace="global" package="Default">
        <name>$write_compiled_code</name>
        <default>true</default>
        <docblock line="163">
          <description>flag if compiled template file shall we written</description>
          <long-description/>
          <tag line="163" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="173" namespace="global" package="Default">
        <name>$compiles_template_function</name>
        <default>false</default>
        <docblock line="169">
          <description>flag if currently a template function is compiled</description>
          <long-description/>
          <tag line="169" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="179" namespace="global" package="Default">
        <name>$called_functions</name>
        <default>array()</default>
        <docblock line="175">
          <description>called subfuntions from template function</description>
          <long-description/>
          <tag line="175" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="185" namespace="global" package="Default">
        <name>$modifier_plugins</name>
        <default>array()</default>
        <docblock line="181">
          <description>flags for used modifier plugins</description>
          <long-description/>
          <tag line="181" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="191" namespace="global" package="Default">
        <name>$known_modifier_type</name>
        <default>array()</default>
        <docblock line="187">
          <description>type of already compiled modifier</description>
          <long-description/>
          <tag line="187" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="199" package="Smarty\Compiler">
        <name>doCompile</name>
        <full_name>doCompile</full_name>
        <docblock line="193">
          <description>Methode to compile a Smarty template</description>
          <long-description/>
          <tag line="193" name="param" description="template source" type="mixed" variable="$_content">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="193" name="return" description="true if compiling succeeded, false if it failed" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="199">
          <name>$_content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="204" package="Smarty\Compiler">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="201">
          <description>Initialize compiler</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="216" package="Smarty\Compiler">
        <name>compileTemplate</name>
        <full_name>compileTemplate</full_name>
        <docblock line="209">
          <description>Method to compile a Smarty template</description>
          <long-description/>
          <tag line="209" name="param" description="template object to compile" type="\Smarty_Internal_Template" variable="$template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="209" name="param" description="true is shall be compiled in nocache mode" type="bool" variable="$nocache">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="209" name="return" description="true if compiling succeeded, false if it failed" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="216">
          <name>$nocache</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="320" package="Smarty\Compiler">
        <name>compileTag</name>
        <full_name>compileTag</full_name>
        <docblock line="309">
          <description>Compile Tag</description>
          <long-description>&lt;p&gt;This is a call back from the lexer/parser
It executes the required compile plugin for the Smarty tag&lt;/p&gt;</long-description>
          <tag line="309" name="param" description="tag name" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="309" name="param" description="array with tag attributes" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="309" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="309" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="320">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="320">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="320">
          <name>$parameter</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="551" package="Smarty\Compiler">
        <name>callTagCompiler</name>
        <full_name>callTagCompiler</full_name>
        <docblock line="537">
          <description>lazy loads internal compile plugin for tag and calls the compile methode</description>
          <long-description>&lt;p&gt;compile objects cached for reuse.
class name format:  Smarty_Internal_Compile_TagName
plugin filename format: Smarty_Internal_Tagname.php&lt;/p&gt;</long-description>
          <tag line="537" name="param" description="tag name" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="537" name="param" description="list of tag attributes" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="537" name="param" description="optional parameter" type="mixed" variable="$param1">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="537" name="param" description="optional parameter" type="mixed" variable="$param2">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="537" name="param" description="optional parameter" type="mixed" variable="$param3">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="537" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="551">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="551">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="551">
          <name>$param1</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="551">
          <name>$param2</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="551">
          <name>$param3</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="580" package="Smarty\Compiler">
        <name>getPlugin</name>
        <full_name>getPlugin</full_name>
        <docblock line="573">
          <description>Check for plugins and return function name</description>
          <long-description/>
          <tag line="573" name="param" description="name of plugin or function" type="string" variable="$pugin_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="573" name="param" description="type of plugin" type="string" variable="$plugin_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="573" name="return" description="call name of function" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="580">
          <name>$plugin_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="580">
          <name>$plugin_type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="638" package="Smarty\Compiler">
        <name>getPluginFromDefaultHandler</name>
        <full_name>getPluginFromDefaultHandler</full_name>
        <docblock line="631">
          <description>Check for plugins by default plugin handler</description>
          <long-description/>
          <tag line="631" name="param" description="name of tag" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="631" name="param" description="type of plugin" type="string" variable="$plugin_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="631" name="return" description="true if found" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="638">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="638">
          <name>$plugin_type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="688" package="Smarty\Compiler">
        <name>processNocacheCode</name>
        <full_name>processNocacheCode</full_name>
        <docblock line="677">
          <description>Inject inline code for nocache template sections</description>
          <long-description>&lt;p&gt;This method gets the content of each template element from the parser.
If the content is compiled code and it should be not cached the code is injected
into the rendered output.&lt;/p&gt;</long-description>
          <tag line="677" name="param" description="content of template element" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="677" name="param" description="true if content is compiled code" type="boolean" variable="$is_code">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="677" name="return" description="content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="688">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
        <argument line="688">
          <name>$is_code</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="727" package="Smarty\Compiler">
        <name>pushTrace</name>
        <full_name>pushTrace</full_name>
        <docblock line="719">
          <description>push current file and line offset on stack for tracing {block} source lines</description>
          <long-description/>
          <tag line="719" name="param" description="new filename" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="719" name="param" description="uid of file" type="string" variable="$uid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="719" name="param" description="false debug end_compile shall not be called" type="string" variable="$debug">
            <type by_reference="false">string</type>
          </tag>
          <tag line="719" name="param" description="line offset to source" type="int" variable="$line">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="727">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
        <argument line="727">
          <name>$uid</name>
          <default/>
          <type/>
        </argument>
        <argument line="727">
          <name>$line</name>
          <default/>
          <type/>
        </argument>
        <argument line="727">
          <name>$debug</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="745" package="Smarty\Compiler">
        <name>popTrace</name>
        <full_name>popTrace</full_name>
        <docblock line="741">
          <description>restore file and line offset</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="772" package="Smarty\Compiler">
        <name>trigger_template_error</name>
        <full_name>trigger_template_error</full_name>
        <docblock line="760">
          <description>display compiler error messages without dying</description>
          <long-description>&lt;p&gt;If parameter $args is empty it is a parser detected syntax error.
In this case the parser is called to obtain information about expected tokens.&lt;/p&gt;

&lt;p&gt;If parameter $args contains a string this is used as error message&lt;/p&gt;</long-description>
          <tag line="760" name="param" description="individual error message or null" type="string" variable="$args">
            <type by_reference="false">string</type>
          </tag>
          <tag line="760" name="param" description="line-number" type="string" variable="$line">
            <type by_reference="false">string</type>
          </tag>
          <tag line="760" name="throws" description="when an unexpected token is found" type="\SmartyCompilerException">
            <type by_reference="false">\SmartyCompilerException</type>
          </tag>
        </docblock>
        <argument line="772">
          <name>$args</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="772">
          <name>$line</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="573" code="50014">Name of argument $plugin_name does not match with the DocBlock's name $pugin_name in getPlugin()</error>
      <notice line="573" code="50013">Parameter $pugin_name could not be found in getPlugin()</notice>
      <error line="719" code="50014">Name of argument $line does not match with the DocBlock's name $debug in pushTrace()</error>
      <error line="719" code="50014">Name of argument $debug does not match with the DocBlock's name $line in pushTrace()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_templateparser.php" hash="b5dc914f36efb533cc659954a59637a5" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="Smarty\Compiler">
      <extends/>
      <implements>\ArrayAccess</implements>
      <name>TP_yyToken</name>
      <full_name>\TP_yyToken</full_name>
      <docblock line="2">
        <description>Smarty Internal Plugin Templateparser</description>
        <long-description>&lt;p&gt;This is the template parser.
It is generated from the internal.templateparser.y file&lt;/p&gt;</long-description>
        <tag line="2" name="package" description="Smarty"/>
        <tag line="2" name="subpackage" description="Compiler"/>
        <tag line="2" name="author" description="Uwe Tews"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$string</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="public" line="15" namespace="global" package="Default">
        <name>$metadata</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Smarty\Compiler">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="17">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
        <argument line="17">
          <name>$m</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Smarty\Compiler">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Smarty\Compiler">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <argument line="37">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Smarty\Compiler">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <argument line="42">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Smarty\Compiler">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <argument line="47">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
        <argument line="47">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Smarty\Compiler">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <argument line="71">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="77" package="Default">
      <extends/>
      <name>TP_yyStackEntry</name>
      <full_name>\TP_yyStackEntry</full_name>
      <property final="false" static="false" visibility="public" line="79" namespace="global" package="Default">
        <name>$stateno</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="80" namespace="global" package="Default">
        <name>$major</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="82" namespace="global" package="Default">
        <name>$minor</name>
        <default/>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="88" package="Default">
      <extends/>
      <name>Smarty_Internal_Templateparser</name>
      <full_name>\Smarty_Internal_Templateparser</full_name>
      <constant namespace="global" line="92" package="Default">
        <name>Err1</name>
        <full_name>Err1</full_name>
        <value>"Security error: Call to private object member not allowed"</value>
      </constant>
      <constant namespace="global" line="93" package="Default">
        <name>Err2</name>
        <full_name>Err2</full_name>
        <value>"Security error: Call to dynamic object member not allowed"</value>
      </constant>
      <constant namespace="global" line="94" package="Default">
        <name>Err3</name>
        <full_name>Err3</full_name>
        <value>"PHP in template not allowed. Use SmartyBC to enable it"</value>
      </constant>
      <constant namespace="global" line="142" package="Default">
        <name>TP_VERT</name>
        <full_name>TP_VERT</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="143" package="Default">
        <name>TP_COLON</name>
        <full_name>TP_COLON</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="144" package="Default">
        <name>TP_RDEL</name>
        <full_name>TP_RDEL</full_name>
        <value>3</value>
      </constant>
      <constant namespace="global" line="145" package="Default">
        <name>TP_COMMENT</name>
        <full_name>TP_COMMENT</full_name>
        <value>4</value>
      </constant>
      <constant namespace="global" line="146" package="Default">
        <name>TP_PHPSTARTTAG</name>
        <full_name>TP_PHPSTARTTAG</full_name>
        <value>5</value>
      </constant>
      <constant namespace="global" line="147" package="Default">
        <name>TP_PHPENDTAG</name>
        <full_name>TP_PHPENDTAG</full_name>
        <value>6</value>
      </constant>
      <constant namespace="global" line="148" package="Default">
        <name>TP_ASPSTARTTAG</name>
        <full_name>TP_ASPSTARTTAG</full_name>
        <value>7</value>
      </constant>
      <constant namespace="global" line="149" package="Default">
        <name>TP_ASPENDTAG</name>
        <full_name>TP_ASPENDTAG</full_name>
        <value>8</value>
      </constant>
      <constant namespace="global" line="150" package="Default">
        <name>TP_FAKEPHPSTARTTAG</name>
        <full_name>TP_FAKEPHPSTARTTAG</full_name>
        <value>9</value>
      </constant>
      <constant namespace="global" line="151" package="Default">
        <name>TP_XMLTAG</name>
        <full_name>TP_XMLTAG</full_name>
        <value>10</value>
      </constant>
      <constant namespace="global" line="152" package="Default">
        <name>TP_TEXT</name>
        <full_name>TP_TEXT</full_name>
        <value>11</value>
      </constant>
      <constant namespace="global" line="153" package="Default">
        <name>TP_STRIPON</name>
        <full_name>TP_STRIPON</full_name>
        <value>12</value>
      </constant>
      <constant namespace="global" line="154" package="Default">
        <name>TP_STRIPOFF</name>
        <full_name>TP_STRIPOFF</full_name>
        <value>13</value>
      </constant>
      <constant namespace="global" line="155" package="Default">
        <name>TP_BLOCKSOURCE</name>
        <full_name>TP_BLOCKSOURCE</full_name>
        <value>14</value>
      </constant>
      <constant namespace="global" line="156" package="Default">
        <name>TP_LITERALSTART</name>
        <full_name>TP_LITERALSTART</full_name>
        <value>15</value>
      </constant>
      <constant namespace="global" line="157" package="Default">
        <name>TP_LITERALEND</name>
        <full_name>TP_LITERALEND</full_name>
        <value>16</value>
      </constant>
      <constant namespace="global" line="158" package="Default">
        <name>TP_LITERAL</name>
        <full_name>TP_LITERAL</full_name>
        <value>17</value>
      </constant>
      <constant namespace="global" line="159" package="Default">
        <name>TP_LDEL</name>
        <full_name>TP_LDEL</full_name>
        <value>18</value>
      </constant>
      <constant namespace="global" line="160" package="Default">
        <name>TP_DOLLAR</name>
        <full_name>TP_DOLLAR</full_name>
        <value>19</value>
      </constant>
      <constant namespace="global" line="161" package="Default">
        <name>TP_ID</name>
        <full_name>TP_ID</full_name>
        <value>20</value>
      </constant>
      <constant namespace="global" line="162" package="Default">
        <name>TP_EQUAL</name>
        <full_name>TP_EQUAL</full_name>
        <value>21</value>
      </constant>
      <constant namespace="global" line="163" package="Default">
        <name>TP_PTR</name>
        <full_name>TP_PTR</full_name>
        <value>22</value>
      </constant>
      <constant namespace="global" line="164" package="Default">
        <name>TP_LDELIF</name>
        <full_name>TP_LDELIF</full_name>
        <value>23</value>
      </constant>
      <constant namespace="global" line="165" package="Default">
        <name>TP_LDELFOR</name>
        <full_name>TP_LDELFOR</full_name>
        <value>24</value>
      </constant>
      <constant namespace="global" line="166" package="Default">
        <name>TP_SEMICOLON</name>
        <full_name>TP_SEMICOLON</full_name>
        <value>25</value>
      </constant>
      <constant namespace="global" line="167" package="Default">
        <name>TP_INCDEC</name>
        <full_name>TP_INCDEC</full_name>
        <value>26</value>
      </constant>
      <constant namespace="global" line="168" package="Default">
        <name>TP_TO</name>
        <full_name>TP_TO</full_name>
        <value>27</value>
      </constant>
      <constant namespace="global" line="169" package="Default">
        <name>TP_STEP</name>
        <full_name>TP_STEP</full_name>
        <value>28</value>
      </constant>
      <constant namespace="global" line="170" package="Default">
        <name>TP_LDELFOREACH</name>
        <full_name>TP_LDELFOREACH</full_name>
        <value>29</value>
      </constant>
      <constant namespace="global" line="171" package="Default">
        <name>TP_SPACE</name>
        <full_name>TP_SPACE</full_name>
        <value>30</value>
      </constant>
      <constant namespace="global" line="172" package="Default">
        <name>TP_AS</name>
        <full_name>TP_AS</full_name>
        <value>31</value>
      </constant>
      <constant namespace="global" line="173" package="Default">
        <name>TP_APTR</name>
        <full_name>TP_APTR</full_name>
        <value>32</value>
      </constant>
      <constant namespace="global" line="174" package="Default">
        <name>TP_LDELSETFILTER</name>
        <full_name>TP_LDELSETFILTER</full_name>
        <value>33</value>
      </constant>
      <constant namespace="global" line="175" package="Default">
        <name>TP_SMARTYBLOCKCHILDPARENT</name>
        <full_name>TP_SMARTYBLOCKCHILDPARENT</full_name>
        <value>34</value>
      </constant>
      <constant namespace="global" line="176" package="Default">
        <name>TP_LDELSLASH</name>
        <full_name>TP_LDELSLASH</full_name>
        <value>35</value>
      </constant>
      <constant namespace="global" line="177" package="Default">
        <name>TP_ATTR</name>
        <full_name>TP_ATTR</full_name>
        <value>36</value>
      </constant>
      <constant namespace="global" line="178" package="Default">
        <name>TP_INTEGER</name>
        <full_name>TP_INTEGER</full_name>
        <value>37</value>
      </constant>
      <constant namespace="global" line="179" package="Default">
        <name>TP_COMMA</name>
        <full_name>TP_COMMA</full_name>
        <value>38</value>
      </constant>
      <constant namespace="global" line="180" package="Default">
        <name>TP_OPENP</name>
        <full_name>TP_OPENP</full_name>
        <value>39</value>
      </constant>
      <constant namespace="global" line="181" package="Default">
        <name>TP_CLOSEP</name>
        <full_name>TP_CLOSEP</full_name>
        <value>40</value>
      </constant>
      <constant namespace="global" line="182" package="Default">
        <name>TP_MATH</name>
        <full_name>TP_MATH</full_name>
        <value>41</value>
      </constant>
      <constant namespace="global" line="183" package="Default">
        <name>TP_UNIMATH</name>
        <full_name>TP_UNIMATH</full_name>
        <value>42</value>
      </constant>
      <constant namespace="global" line="184" package="Default">
        <name>TP_ANDSYM</name>
        <full_name>TP_ANDSYM</full_name>
        <value>43</value>
      </constant>
      <constant namespace="global" line="185" package="Default">
        <name>TP_ISIN</name>
        <full_name>TP_ISIN</full_name>
        <value>44</value>
      </constant>
      <constant namespace="global" line="186" package="Default">
        <name>TP_ISDIVBY</name>
        <full_name>TP_ISDIVBY</full_name>
        <value>45</value>
      </constant>
      <constant namespace="global" line="187" package="Default">
        <name>TP_ISNOTDIVBY</name>
        <full_name>TP_ISNOTDIVBY</full_name>
        <value>46</value>
      </constant>
      <constant namespace="global" line="188" package="Default">
        <name>TP_ISEVEN</name>
        <full_name>TP_ISEVEN</full_name>
        <value>47</value>
      </constant>
      <constant namespace="global" line="189" package="Default">
        <name>TP_ISNOTEVEN</name>
        <full_name>TP_ISNOTEVEN</full_name>
        <value>48</value>
      </constant>
      <constant namespace="global" line="190" package="Default">
        <name>TP_ISEVENBY</name>
        <full_name>TP_ISEVENBY</full_name>
        <value>49</value>
      </constant>
      <constant namespace="global" line="191" package="Default">
        <name>TP_ISNOTEVENBY</name>
        <full_name>TP_ISNOTEVENBY</full_name>
        <value>50</value>
      </constant>
      <constant namespace="global" line="192" package="Default">
        <name>TP_ISODD</name>
        <full_name>TP_ISODD</full_name>
        <value>51</value>
      </constant>
      <constant namespace="global" line="193" package="Default">
        <name>TP_ISNOTODD</name>
        <full_name>TP_ISNOTODD</full_name>
        <value>52</value>
      </constant>
      <constant namespace="global" line="194" package="Default">
        <name>TP_ISODDBY</name>
        <full_name>TP_ISODDBY</full_name>
        <value>53</value>
      </constant>
      <constant namespace="global" line="195" package="Default">
        <name>TP_ISNOTODDBY</name>
        <full_name>TP_ISNOTODDBY</full_name>
        <value>54</value>
      </constant>
      <constant namespace="global" line="196" package="Default">
        <name>TP_INSTANCEOF</name>
        <full_name>TP_INSTANCEOF</full_name>
        <value>55</value>
      </constant>
      <constant namespace="global" line="197" package="Default">
        <name>TP_QMARK</name>
        <full_name>TP_QMARK</full_name>
        <value>56</value>
      </constant>
      <constant namespace="global" line="198" package="Default">
        <name>TP_NOT</name>
        <full_name>TP_NOT</full_name>
        <value>57</value>
      </constant>
      <constant namespace="global" line="199" package="Default">
        <name>TP_TYPECAST</name>
        <full_name>TP_TYPECAST</full_name>
        <value>58</value>
      </constant>
      <constant namespace="global" line="200" package="Default">
        <name>TP_HEX</name>
        <full_name>TP_HEX</full_name>
        <value>59</value>
      </constant>
      <constant namespace="global" line="201" package="Default">
        <name>TP_DOT</name>
        <full_name>TP_DOT</full_name>
        <value>60</value>
      </constant>
      <constant namespace="global" line="202" package="Default">
        <name>TP_SINGLEQUOTESTRING</name>
        <full_name>TP_SINGLEQUOTESTRING</full_name>
        <value>61</value>
      </constant>
      <constant namespace="global" line="203" package="Default">
        <name>TP_DOUBLECOLON</name>
        <full_name>TP_DOUBLECOLON</full_name>
        <value>62</value>
      </constant>
      <constant namespace="global" line="204" package="Default">
        <name>TP_AT</name>
        <full_name>TP_AT</full_name>
        <value>63</value>
      </constant>
      <constant namespace="global" line="205" package="Default">
        <name>TP_HATCH</name>
        <full_name>TP_HATCH</full_name>
        <value>64</value>
      </constant>
      <constant namespace="global" line="206" package="Default">
        <name>TP_OPENB</name>
        <full_name>TP_OPENB</full_name>
        <value>65</value>
      </constant>
      <constant namespace="global" line="207" package="Default">
        <name>TP_CLOSEB</name>
        <full_name>TP_CLOSEB</full_name>
        <value>66</value>
      </constant>
      <constant namespace="global" line="208" package="Default">
        <name>TP_EQUALS</name>
        <full_name>TP_EQUALS</full_name>
        <value>67</value>
      </constant>
      <constant namespace="global" line="209" package="Default">
        <name>TP_NOTEQUALS</name>
        <full_name>TP_NOTEQUALS</full_name>
        <value>68</value>
      </constant>
      <constant namespace="global" line="210" package="Default">
        <name>TP_GREATERTHAN</name>
        <full_name>TP_GREATERTHAN</full_name>
        <value>69</value>
      </constant>
      <constant namespace="global" line="211" package="Default">
        <name>TP_LESSTHAN</name>
        <full_name>TP_LESSTHAN</full_name>
        <value>70</value>
      </constant>
      <constant namespace="global" line="212" package="Default">
        <name>TP_GREATEREQUAL</name>
        <full_name>TP_GREATEREQUAL</full_name>
        <value>71</value>
      </constant>
      <constant namespace="global" line="213" package="Default">
        <name>TP_LESSEQUAL</name>
        <full_name>TP_LESSEQUAL</full_name>
        <value>72</value>
      </constant>
      <constant namespace="global" line="214" package="Default">
        <name>TP_IDENTITY</name>
        <full_name>TP_IDENTITY</full_name>
        <value>73</value>
      </constant>
      <constant namespace="global" line="215" package="Default">
        <name>TP_NONEIDENTITY</name>
        <full_name>TP_NONEIDENTITY</full_name>
        <value>74</value>
      </constant>
      <constant namespace="global" line="216" package="Default">
        <name>TP_MOD</name>
        <full_name>TP_MOD</full_name>
        <value>75</value>
      </constant>
      <constant namespace="global" line="217" package="Default">
        <name>TP_LAND</name>
        <full_name>TP_LAND</full_name>
        <value>76</value>
      </constant>
      <constant namespace="global" line="218" package="Default">
        <name>TP_LOR</name>
        <full_name>TP_LOR</full_name>
        <value>77</value>
      </constant>
      <constant namespace="global" line="219" package="Default">
        <name>TP_LXOR</name>
        <full_name>TP_LXOR</full_name>
        <value>78</value>
      </constant>
      <constant namespace="global" line="220" package="Default">
        <name>TP_QUOTE</name>
        <full_name>TP_QUOTE</full_name>
        <value>79</value>
      </constant>
      <constant namespace="global" line="221" package="Default">
        <name>TP_BACKTICK</name>
        <full_name>TP_BACKTICK</full_name>
        <value>80</value>
      </constant>
      <constant namespace="global" line="222" package="Default">
        <name>TP_DOLLARID</name>
        <full_name>TP_DOLLARID</full_name>
        <value>81</value>
      </constant>
      <constant namespace="global" line="223" package="Default">
        <name>YY_NO_ACTION</name>
        <full_name>YY_NO_ACTION</full_name>
        <value>570</value>
      </constant>
      <constant namespace="global" line="224" package="Default">
        <name>YY_ACCEPT_ACTION</name>
        <full_name>YY_ACCEPT_ACTION</full_name>
        <value>569</value>
      </constant>
      <constant namespace="global" line="225" package="Default">
        <name>YY_ERROR_ACTION</name>
        <full_name>YY_ERROR_ACTION</full_name>
        <value>568</value>
      </constant>
      <constant namespace="global" line="227" package="Default">
        <name>YY_SZ_ACTTAB</name>
        <full_name>YY_SZ_ACTTAB</full_name>
        <value>2407</value>
      </constant>
      <constant namespace="global" line="714" package="Default">
        <name>YY_SHIFT_USE_DFLT</name>
        <full_name>YY_SHIFT_USE_DFLT</full_name>
        <value>-53</value>
      </constant>
      <constant namespace="global" line="715" package="Default">
        <name>YY_SHIFT_MAX</name>
        <full_name>YY_SHIFT_MAX</full_name>
        <value>259</value>
      </constant>
      <constant namespace="global" line="744" package="Default">
        <name>YY_REDUCE_USE_DFLT</name>
        <full_name>YY_REDUCE_USE_DFLT</full_name>
        <value>-73</value>
      </constant>
      <constant namespace="global" line="745" package="Default">
        <name>YY_REDUCE_MAX</name>
        <full_name>YY_REDUCE_MAX</full_name>
        <value>208</value>
      </constant>
      <constant namespace="global" line="1173" package="Default">
        <name>YYNOCODE</name>
        <full_name>YYNOCODE</full_name>
        <value>125</value>
      </constant>
      <constant namespace="global" line="1174" package="Default">
        <name>YYSTACKDEPTH</name>
        <full_name>YYSTACKDEPTH</full_name>
        <value>500</value>
      </constant>
      <constant namespace="global" line="1175" package="Default">
        <name>YYNSTATE</name>
        <full_name>YYNSTATE</full_name>
        <value>363</value>
      </constant>
      <constant namespace="global" line="1176" package="Default">
        <name>YYNRULE</name>
        <full_name>YYNRULE</full_name>
        <value>205</value>
      </constant>
      <constant namespace="global" line="1177" package="Default">
        <name>YYERRORSYMBOL</name>
        <full_name>YYERRORSYMBOL</full_name>
        <value>82</value>
      </constant>
      <constant namespace="global" line="1178" package="Default">
        <name>YYERRSYMDT</name>
        <full_name>YYERRSYMDT</full_name>
        <value>'yy0'</value>
      </constant>
      <constant namespace="global" line="1179" package="Default">
        <name>YYFALLBACK</name>
        <full_name>YYFALLBACK</full_name>
        <value>0</value>
      </constant>
      <property final="false" static="false" visibility="public" line="96" namespace="global" package="Default">
        <name>$successful</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="public" line="97" namespace="global" package="Default">
        <name>$retvalue</name>
        <default>0</default>
      </property>
      <property final="false" static="true" visibility="public" line="98" namespace="global" package="Default">
        <name>$prefix_number</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="private" line="99" namespace="global" package="Default">
        <name>$lex</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="100" namespace="global" package="Default">
        <name>$internalError</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="101" namespace="global" package="Default">
        <name>$strip</name>
        <default>false</default>
      </property>
      <property final="false" static="true" visibility="public" line="228" namespace="global" package="Default">
        <name>$yy_action</name>
        <default>array(219, 309, 305, 301, 302, 303, 304, 310, 311, 317, 318, 319, 201, 30, 273, 9, 33, 238, 280, 15, 5, 108, 235, 234, 220, 7, 126, 42, 30, 30, 259, 211, 256, 495, 15, 15, 10, 33, 495, 280, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 219, 326, 434, 219, 192, 434, 569, 95, 263, 227, 306, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 292, 219, 202, 322, 242, 30, 434, 231, 207, 434, 143, 15, 434, 35, 158, 434, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 48, 32, 219, 48, 391, 196, 2, 31, 138, 321, 4, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 127, 48, 290, 349, 251, 30, 145, 140, 30, 207, 264, 15, 200, 322, 15, 334, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 289, 219, 48, 431, 297, 219, 33, 396, 280, 18, 191, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 300, 285, 286, 287, 299, 206, 219, 431, 428, 194, 201, 315, 314, 431, 207, 281, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 33, 48, 280, 34, 30, 48, 197, 322, 276, 158, 15, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 230, 338, 16, 289, 103, 179, 244, 219, 295, 2, 41, 33, 265, 280, 283, 148, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 207, 145, 43, 132, 189, 109, 333, 307, 227, 306, 190, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 20, 22, 248, 339, 219, 99, 174, 48, 324, 33, 346, 280, 18, 288, 207, 283, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 289, 207, 30, 41, 110, 275, 2, 41, 15, 272, 266, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 242, 40, 236, 347, 104, 177, 145, 219, 44, 316, 148, 135, 228, 27, 283, 269, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 207, 208, 33, 7, 280, 245, 239, 136, 173, 241, 279, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 29, 158, 106, 13, 122, 171, 181, 6, 33, 15, 226, 33, 219, 237, 283, 283, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 205, 205, 252, 313, 238, 312, 235, 232, 195, 97, 127, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 28, 320, 230, 105, 182, 164, 176, 33, 279, 254, 282, 186, 207, 283, 283, 253, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 205, 260, 107, 235, 262, 33, 193, 214, 332, 166, 198, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 137, 175, 167, 291, 308, 344, 185, 261, 267, 161, 283, 283, 128, 337, 124, 283, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 38, 205, 203, 141, 169, 257, 134, 35, 130, 156, 114, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 320, 158, 320, 241, 36, 293, 298, 94, 21, 26, 284, 219, 292, 168, 271, 162, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 279, 229, 205, 44, 281, 187, 17, 270, 331, 98, 127, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 199, 320, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 331, 268, 331, 331, 331, 331, 331, 331, 331, 125, 115, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 279, 331, 320, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 331, 204, 331, 331, 331, 331, 331, 331, 159, 100, 116, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 320, 320, 320, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 331, 331, 331, 331, 331, 331, 331, 331, 102, 117, 331, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 320, 320, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 158, 331, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 331, 331, 331, 331, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 331, 331, 331, 331, 331, 331, 211, 331, 331, 331, 331, 10, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 331, 331, 331, 331, 331, 331, 331, 9, 142, 212, 331, 331, 5, 108, 331, 246, 331, 331, 126, 157, 183, 331, 259, 123, 256, 331, 250, 331, 23, 283, 331, 52, 277, 331, 331, 255, 350, 348, 331, 345, 331, 279, 180, 178, 331, 331, 49, 50, 296, 240, 351, 283, 283, 106, 1, 274, 331, 147, 331, 331, 331, 331, 331, 279, 279, 9, 144, 92, 96, 233, 5, 108, 331, 345, 331, 331, 126, 331, 331, 246, 259, 323, 256, 146, 250, 331, 23, 123, 184, 52, 331, 331, 331, 331, 246, 331, 343, 283, 153, 255, 350, 348, 123, 345, 49, 50, 296, 240, 351, 279, 331, 106, 1, 331, 255, 350, 348, 331, 345, 33, 331, 280, 331, 9, 142, 224, 96, 331, 5, 108, 331, 30, 331, 247, 126, 246, 331, 15, 259, 149, 256, 331, 250, 123, 23, 331, 331, 52, 331, 331, 331, 331, 331, 331, 331, 255, 350, 348, 331, 345, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 331, 331, 331, 331, 33, 331, 280, 331, 331, 9, 135, 224, 96, 331, 5, 108, 30, 246, 258, 331, 126, 151, 15, 246, 259, 123, 256, 154, 250, 331, 11, 123, 331, 52, 331, 331, 331, 255, 350, 348, 331, 345, 331, 255, 350, 348, 331, 345, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 9, 142, 210, 96, 331, 5, 108, 331, 331, 331, 331, 126, 246, 331, 331, 259, 155, 256, 331, 216, 123, 23, 331, 331, 52, 331, 331, 331, 331, 331, 331, 331, 255, 350, 348, 331, 345, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 9, 131, 224, 96, 331, 5, 108, 331, 331, 331, 331, 126, 246, 331, 331, 259, 152, 256, 331, 250, 123, 3, 331, 331, 52, 331, 331, 331, 331, 331, 331, 331, 255, 350, 348, 331, 345, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 9, 142, 213, 96, 331, 5, 108, 331, 331, 331, 331, 126, 246, 331, 331, 259, 150, 256, 331, 250, 123, 23, 331, 331, 52, 331, 331, 331, 331, 331, 331, 331, 255, 350, 348, 331, 345, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 219, 331, 401, 331, 331, 331, 331, 331, 331, 9, 142, 209, 96, 331, 5, 108, 331, 331, 331, 331, 126, 249, 331, 331, 259, 331, 256, 331, 250, 30, 23, 190, 163, 52, 331, 15, 331, 331, 2, 331, 331, 283, 331, 331, 20, 22, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 207, 331, 331, 145, 331, 331, 331, 432, 331, 9, 139, 224, 96, 331, 5, 108, 331, 331, 331, 331, 126, 331, 331, 331, 259, 243, 256, 331, 250, 331, 23, 190, 188, 52, 432, 331, 331, 331, 331, 331, 432, 283, 331, 2, 20, 22, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 207, 331, 331, 331, 331, 331, 331, 331, 145, 9, 135, 224, 96, 331, 5, 108, 331, 331, 331, 331, 126, 331, 331, 331, 259, 331, 256, 331, 250, 331, 11, 101, 160, 52, 331, 331, 331, 331, 331, 331, 331, 283, 331, 331, 20, 22, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 331, 331, 207, 331, 331, 331, 331, 331, 331, 331, 331, 9, 135, 225, 96, 331, 5, 108, 331, 331, 331, 331, 126, 331, 331, 331, 259, 331, 256, 331, 250, 331, 11, 331, 477, 52, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 49, 50, 296, 240, 351, 331, 477, 106, 477, 477, 331, 477, 477, 331, 331, 331, 331, 477, 331, 477, 2, 477, 96, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 246, 331, 331, 477, 120, 331, 331, 84, 123, 331, 145, 331, 331, 331, 477, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 331, 331, 331, 477, 331, 331, 331, 246, 331, 218, 362, 120, 331, 331, 84, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 246, 345, 331, 331, 129, 331, 331, 61, 119, 232, 331, 246, 335, 331, 331, 129, 294, 327, 80, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 246, 331, 331, 331, 129, 331, 215, 80, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 331, 331, 331, 246, 190, 170, 221, 129, 331, 331, 55, 119, 133, 331, 283, 331, 331, 20, 22, 294, 327, 331, 331, 255, 350, 348, 246, 345, 331, 331, 129, 207, 331, 80, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 89, 123, 331, 331, 331, 223, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 246, 345, 331, 331, 129, 331, 331, 70, 123, 331, 331, 246, 331, 331, 331, 111, 294, 327, 67, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 86, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 90, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 77, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 74, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 66, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 222, 350, 348, 129, 345, 331, 69, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 78, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 60, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 53, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 65, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 336, 331, 255, 350, 348, 331, 345, 8, 331, 331, 331, 331, 5, 108, 331, 331, 331, 331, 126, 331, 331, 246, 259, 331, 256, 129, 331, 331, 72, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 85, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 81, 123, 331, 19, 340, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 113, 345, 331, 82, 123, 331, 331, 246, 331, 331, 331, 93, 294, 327, 54, 121, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 217, 350, 348, 129, 345, 331, 58, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 336, 255, 350, 348, 331, 345, 331, 8, 331, 331, 331, 331, 5, 108, 331, 331, 331, 331, 126, 246, 331, 331, 259, 129, 256, 331, 88, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 56, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 246, 331, 331, 331, 129, 331, 331, 68, 123, 331, 331, 331, 331, 325, 19, 340, 294, 327, 331, 331, 255, 350, 348, 331, 345, 331, 331, 331, 331, 246, 331, 331, 331, 118, 331, 331, 59, 123, 331, 331, 331, 331, 190, 172, 331, 294, 327, 331, 331, 255, 350, 348, 283, 345, 246, 20, 22, 331, 93, 331, 331, 57, 121, 331, 331, 331, 331, 331, 331, 207, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 64, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 63, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 73, 123, 331, 331, 331, 331, 190, 165, 331, 294, 327, 331, 331, 255, 350, 348, 283, 345, 331, 20, 22, 331, 246, 331, 331, 331, 129, 331, 331, 87, 123, 331, 331, 207, 331, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 246, 331, 331, 331, 129, 331, 331, 75, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 61, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 71, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 83, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 246, 331, 331, 331, 112, 331, 331, 76, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 246, 331, 331, 331, 129, 331, 331, 91, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 62, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 79, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345)</default>
      </property>
      <property final="false" static="true" visibility="public" line="471" namespace="global" package="Default">
        <name>$yy_lookahead</name>
        <default>array(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 30, 66, 18, 18, 2, 20, 36, 23, 24, 94, 95, 96, 39, 29, 28, 30, 30, 33, 60, 35, 60, 36, 36, 65, 18, 65, 20, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 1, 3, 3, 1, 91, 3, 83, 84, 85, 86, 87, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 112, 1, 114, 115, 63, 30, 30, 31, 118, 30, 19, 36, 36, 21, 22, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 55, 32, 1, 55, 3, 91, 39, 18, 19, 20, 38, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 62, 55, 20, 37, 60, 30, 62, 20, 30, 118, 66, 36, 114, 115, 36, 66, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 26, 1, 55, 3, 37, 1, 18, 3, 20, 21, 91, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 5, 6, 7, 8, 9, 20, 1, 30, 3, 100, 15, 16, 17, 36, 118, 119, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 18, 55, 20, 21, 30, 55, 114, 115, 26, 22, 36, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 86, 80, 32, 26, 91, 92, 31, 1, 109, 39, 38, 18, 40, 20, 101, 116, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 118, 62, 18, 19, 20, 122, 123, 85, 86, 87, 91, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 104, 105, 63, 80, 1, 91, 92, 55, 3, 18, 115, 20, 21, 20, 118, 101, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 26, 118, 30, 38, 88, 40, 39, 38, 36, 40, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 63, 21, 63, 109, 91, 92, 62, 1, 2, 16, 116, 19, 20, 18, 101, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 118, 3, 18, 39, 20, 19, 20, 19, 111, 60, 113, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 21, 22, 64, 30, 39, 92, 92, 39, 18, 36, 20, 18, 1, 20, 101, 101, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 118, 118, 22, 87, 2, 89, 94, 95, 91, 98, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 21, 113, 86, 111, 92, 92, 111, 18, 113, 20, 20, 111, 118, 101, 101, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 118, 3, 100, 94, 95, 18, 100, 20, 123, 111, 25, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 38, 92, 92, 20, 3, 3, 92, 20, 40, 64, 101, 101, 19, 3, 19, 101, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 2, 118, 20, 19, 64, 20, 19, 21, 98, 20, 98, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 113, 22, 113, 60, 27, 20, 37, 20, 56, 2, 101, 1, 112, 111, 116, 111, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 113, 97, 118, 2, 119, 111, 97, 30, 124, 98, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 25, 113, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 124, 3, 124, 124, 124, 124, 124, 124, 124, 99, 98, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 113, 124, 113, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 124, 3, 124, 124, 124, 124, 124, 124, 98, 98, 98, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 113, 113, 113, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 124, 124, 124, 124, 124, 124, 124, 124, 98, 98, 124, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 113, 113, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 22, 124, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 124, 124, 124, 124, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 124, 124, 124, 124, 124, 124, 60, 124, 124, 124, 124, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 124, 124, 124, 124, 124, 124, 124, 18, 19, 20, 124, 124, 23, 24, 124, 86, 124, 124, 29, 90, 92, 124, 33, 94, 35, 124, 37, 124, 39, 101, 124, 42, 103, 124, 124, 106, 107, 108, 124, 110, 124, 113, 92, 92, 124, 124, 57, 58, 59, 60, 61, 101, 101, 64, 65, 66, 124, 94, 124, 124, 124, 124, 124, 113, 113, 18, 19, 20, 79, 106, 23, 24, 124, 110, 124, 124, 29, 124, 124, 86, 33, 34, 35, 90, 37, 124, 39, 94, 92, 42, 124, 124, 124, 124, 86, 124, 103, 101, 90, 106, 107, 108, 94, 110, 57, 58, 59, 60, 61, 113, 124, 64, 65, 124, 106, 107, 108, 124, 110, 18, 124, 20, 124, 18, 19, 20, 79, 124, 23, 24, 124, 30, 124, 32, 29, 86, 124, 36, 33, 90, 35, 124, 37, 94, 39, 124, 124, 42, 124, 124, 124, 124, 124, 124, 124, 106, 107, 108, 124, 110, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 124, 124, 124, 124, 18, 124, 20, 124, 124, 18, 19, 20, 79, 124, 23, 24, 30, 86, 32, 124, 29, 90, 36, 86, 33, 94, 35, 90, 37, 124, 39, 94, 124, 42, 124, 124, 124, 106, 107, 108, 124, 110, 124, 106, 107, 108, 124, 110, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 86, 124, 124, 33, 90, 35, 124, 37, 94, 39, 124, 124, 42, 124, 124, 124, 124, 124, 124, 124, 106, 107, 108, 124, 110, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 86, 124, 124, 33, 90, 35, 124, 37, 94, 39, 124, 124, 42, 124, 124, 124, 124, 124, 124, 124, 106, 107, 108, 124, 110, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 86, 124, 124, 33, 90, 35, 124, 37, 94, 39, 124, 124, 42, 124, 124, 124, 124, 124, 124, 124, 106, 107, 108, 124, 110, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 1, 124, 3, 124, 124, 124, 124, 124, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 22, 124, 124, 33, 124, 35, 124, 37, 30, 39, 91, 92, 42, 124, 36, 124, 124, 39, 124, 124, 101, 124, 124, 104, 105, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 118, 124, 124, 62, 124, 124, 124, 3, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 124, 124, 124, 33, 21, 35, 124, 37, 124, 39, 91, 92, 42, 30, 124, 124, 124, 124, 124, 36, 101, 124, 39, 104, 105, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 118, 124, 124, 124, 124, 124, 124, 124, 62, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 124, 124, 124, 33, 124, 35, 124, 37, 124, 39, 91, 92, 42, 124, 124, 124, 124, 124, 124, 124, 101, 124, 124, 104, 105, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 124, 124, 118, 124, 124, 124, 124, 124, 124, 124, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 124, 124, 124, 33, 124, 35, 124, 37, 124, 39, 124, 3, 42, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 57, 58, 59, 60, 61, 124, 25, 64, 27, 28, 124, 30, 31, 124, 124, 124, 124, 36, 124, 38, 39, 40, 79, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 86, 124, 124, 55, 90, 124, 124, 93, 94, 124, 62, 124, 124, 124, 66, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 124, 124, 124, 80, 124, 124, 124, 86, 124, 120, 121, 90, 124, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 86, 110, 124, 124, 90, 124, 124, 93, 94, 95, 124, 86, 121, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 86, 124, 124, 124, 90, 124, 117, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 124, 124, 124, 86, 91, 92, 117, 90, 124, 124, 93, 94, 95, 124, 101, 124, 124, 104, 105, 102, 103, 124, 124, 106, 107, 108, 86, 110, 124, 124, 90, 118, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 117, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 86, 110, 124, 124, 90, 124, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 11, 124, 106, 107, 108, 124, 110, 18, 124, 124, 124, 124, 23, 24, 124, 124, 124, 124, 29, 124, 124, 86, 33, 124, 35, 90, 124, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 79, 80, 81, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 11, 106, 107, 108, 124, 110, 124, 18, 124, 124, 124, 124, 23, 24, 124, 124, 124, 124, 29, 86, 124, 124, 33, 90, 35, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 124, 124, 79, 80, 81, 102, 103, 124, 124, 106, 107, 108, 124, 110, 124, 124, 124, 124, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 124, 124, 91, 92, 124, 102, 103, 124, 124, 106, 107, 108, 101, 110, 86, 104, 105, 124, 90, 124, 124, 93, 94, 124, 124, 124, 124, 124, 124, 118, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 91, 92, 124, 102, 103, 124, 124, 106, 107, 108, 101, 110, 124, 104, 105, 124, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 118, 124, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110)</default>
      </property>
      <property final="false" static="true" visibility="public" line="716" namespace="global" package="Default">
        <name>$yy_shift_ofst</name>
        <default>array(-3, 1213, 981, 1155, 1213, 1155, 981, 981, 923, 923, 865, 981, 981, 1097, 981, 981, 981, 981, 981, 981, 981, 1329, 981, 981, 981, 981, 1271, 981, 981, 981, 1097, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 1039, 1039, 1387, 1387, 1445, 1387, 1387, 1387, 1387, -1, 53, 107, 107, 107, 107, 107, 485, 431, 593, 647, 701, 323, 161, 215, 377, 269, 539, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 797, 797, 1279, 110, 297, -3, 2038, 977, 1034, 191, -2, 191, -2, 297, 297, 798, 340, 354, 367, 1911, 181, 54, 57, 163, 199, 285, 19, 151, 167, 70, 78, 381, 367, 543, 363, -17, 375, 365, 363, 246, 363, 395, 392, -17, 363, 363, 363, 367, 363, 445, 413, 363, 395, 363, 474, 365, 574, 204, 204, 574, 574, 574, 574, 574, 574, 574, 574, -53, 255, 233, -17, -27, -29, -17, -17, -17, -29, -17, -29, -27, -17, -17, -17, -29, -17, -17, -29, -17, -17, -17, -17, -17, -17, -17, -17, -17, -29, -29, -17, 343, 574, 574, 574, 596, 596, 574, 574, 204, 572, 572, 204, 341, 204, 370, -53, -53, -53, -53, -53, 1483, 1342, 98, 76, 210, 435, 212, 328, 299, 81, 287, 472, 294, 217, 290, 292, 292, 370, 511, 455, 505, 520, 528, 478, 481, 541, 527, 446, 15, 114, -14, 533, 130, 493, 497, 503, 523, 512, 525, 549, 551, 507, 526, 530, 516, 571, 137, 119, -52, 69, 171)</default>
      </property>
      <property final="false" static="true" visibility="public" line="746" namespace="global" package="Default">
        <name>$yy_reduce_ofst</name>
        <default>array(-22, 1449, 1540, 1504, 1481, 1568, 1515, 1591, 1925, 2072, 1750, 1818, 1895, 1644, 1663, 1914, 2205, 2277, 1876, 1731, 1857, 1633, 1701, 2186, 2150, 2296, 2266, 2091, 2047, 1993, 2241, 2102, 1720, 1788, 1982, 1769, 1807, 1610, 1682, 2175, 2216, 2121, 1944, 2018, 805, 869, 884, 979, 925, 985, 1041, 1157, 1099, 1220, 1336, 2129, 1278, 1336, 1564, 2055, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 261, 208, 153, 193, 154, 827, 826, 369, 804, 315, 872, 316, 424, -34, 839, 82, -72, 372, 349, -32, -32, -32, 559, 351, 351, 351, -32, 30, -32, 30, 345, 30, 453, 420, 368, 242, 344, -32, 276, 561, 451, 419, 506, 615, 668, 396, 613, 615, 350, 614, 615, 667, 615, 139, -32, 30, 109, -32, -32, -32, -32, -32, -32, -32, 23, -32, 462, 482, 473, 466, 464, 473, 473, 473, 464, 473, 464, 468, 473, 473, 473, 464, 473, 473, 464, 473, 473, 473, 473, 473, 473, 473, 473, 473, 464, 464, 473, 489, 479, 479, 479, 480, 480, 479, 479, 189, 504, 499, 189, 241, 189, 348, 356, 393, 389, 95, 385)</default>
      </property>
      <property final="false" static="true" visibility="public" line="769" namespace="global" package="Default">
        <name>$yyExpectedTokens</name>
        <default>array(array(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 35), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 34, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 34, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 66, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79), array(1, 28, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 3, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80), array(1, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 2, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78), array(1, 3, 22, 30, 36, 39, 62), array(1, 3, 30, 36, 55), array(1, 30, 36), array(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 35), array(11, 18, 23, 24, 29, 33, 35, 79, 80, 81), array(18, 20, 30, 32, 36), array(18, 20, 30, 32, 36), array(1, 3, 30, 36), array(18, 20, 30, 36), array(1, 3, 30, 36), array(18, 20, 30, 36), array(1, 30, 36), array(1, 30, 36), array(22, 60, 65), array(19, 20, 64), array(1, 2), array(19, 39), array(11, 18, 23, 24, 29, 33, 35, 79, 80, 81), array(5, 6, 7, 8, 9, 15, 16, 17), array(1, 3, 30, 31, 36, 55), array(1, 3, 30, 36, 55), array(1, 3, 30, 36, 55), array(18, 20, 21, 26), array(18, 20, 21, 63), array(18, 20, 63), array(18, 20, 21), array(1, 3, 55), array(21, 22, 62), array(1, 32, 55), array(21, 22, 62), array(19, 39), array(22, 62), array(18, 20), array(30, 36), array(30, 36), array(19, 20), array(18, 20), array(1, 55), array(18, 20), array(18, 20), array(18, 20), array(30, 36), array(18, 20), array(18, 20), array(18, 20), array(19, 39), array(18, 20), array(18, 20), array(1, 22), array(18, 20), array(18, 20), array(18, 20), array(18, 20), array(19, 20), array(1), array(22), array(22), array(1), array(1), array(1), array(1), array(1), array(1), array(1), array(1), array(), array(18, 19, 20), array(18, 20, 63), array(30, 36), array(60, 65), array(60, 65), array(30, 36), array(30, 36), array(30, 36), array(60, 65), array(30, 36), array(60, 65), array(60, 65), array(30, 36), array(30, 36), array(30, 36), array(60, 65), array(30, 36), array(30, 36), array(60, 65), array(30, 36), array(30, 36), array(30, 36), array(30, 36), array(30, 36), array(30, 36), array(30, 36), array(30, 36), array(30, 36), array(60, 65), array(60, 65), array(30, 36), array(18, 39), array(1), array(1), array(1), array(2), array(2), array(1), array(1), array(22), array(30), array(30), array(22), array(16), array(22), array(39), array(), array(), array(), array(), array(), array(3, 25, 27, 28, 30, 31, 36, 38, 39, 40, 55, 62, 66, 80), array(3, 21, 30, 36, 39, 62), array(18, 19, 20, 37), array(39, 60, 62, 66), array(32, 39, 62), array(2, 21), array(38, 40), array(21, 60), array(3, 26), array(38, 66), array(20, 63), array(25, 38), array(38, 40), array(26, 80), array(38, 40), array(39, 62), array(39, 62), array(39), array(3), array(64), array(19), array(3), array(19), array(40), array(64), array(27), array(21), array(20), array(2), array(20), array(39), array(37), array(37), array(20), array(20), array(19), array(20), array(3), array(19), array(20), array(20), array(60), array(20), array(20), array(56), array(2), array(26), array(20), array(66), array(19), array(20), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array())</default>
      </property>
      <property final="false" static="true" visibility="public" line="1134" namespace="global" package="Default">
        <name>$yy_default</name>
        <default>array(366, 551, 522, 568, 568, 568, 522, 522, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 428, 568, 405, 428, 428, 428, 397, 568, 568, 568, 568, 568, 568, 568, 433, 568, 568, 568, 553, 449, 520, 552, 457, 433, 452, 439, 462, 521, 461, 430, 435, 554, 438, 454, 453, 410, 458, 466, 465, 477, 441, 428, 363, 568, 428, 428, 485, 428, 448, 428, 428, 428, 534, 568, 419, 568, 568, 568, 441, 441, 441, 568, 495, 495, 495, 441, 486, 441, 486, 568, 486, 568, 428, 428, 568, 568, 441, 495, 568, 568, 407, 568, 568, 568, 568, 568, 568, 422, 568, 568, 568, 568, 568, 451, 486, 531, 464, 446, 445, 468, 444, 469, 470, 424, 529, 568, 496, 395, 489, 492, 412, 392, 406, 514, 409, 490, 491, 413, 394, 398, 513, 393, 408, 493, 400, 417, 402, 415, 404, 414, 418, 416, 403, 515, 512, 399, 495, 448, 420, 485, 523, 524, 423, 425, 532, 567, 567, 509, 383, 535, 495, 495, 528, 528, 528, 495, 443, 477, 568, 477, 477, 507, 568, 473, 467, 568, 568, 568, 568, 467, 568, 477, 463, 507, 568, 568, 568, 568, 568, 568, 568, 436, 568, 568, 507, 568, 533, 568, 475, 568, 568, 568, 568, 568, 568, 568, 568, 473, 568, 568, 479, 507, 467, 568, 568, 568, 568, 508, 429, 437, 364, 501, 519, 503, 440, 500, 479, 566, 516, 517, 502, 504, 518, 411, 530, 459, 506, 507, 527, 525, 427, 426, 388, 389, 390, 526, 471, 443, 487, 494, 497, 442, 482, 472, 474, 476, 387, 386, 371, 372, 373, 374, 370, 369, 365, 367, 368, 375, 376, 382, 384, 385, 381, 380, 377, 378, 379, 505, 498, 510, 421, 562, 555, 563, 447, 545, 546, 547, 556, 557, 558, 548, 550, 565, 564, 560, 559, 561, 544, 543, 450, 484, 488, 511, 483, 481, 499, 478, 480, 455, 456, 540, 541, 542, 539, 538, 460, 536, 537, 549)</default>
      </property>
      <property final="false" static="true" visibility="public" line="1180" namespace="global" package="Default">
        <name>$yyFallback</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="1199" namespace="global" package="Default">
        <name>$yyTraceFILE</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="1200" namespace="global" package="Default">
        <name>$yyTracePrompt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="1201" namespace="global" package="Default">
        <name>$yyidx</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="1202" namespace="global" package="Default">
        <name>$yyerrcnt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="1203" namespace="global" package="Default">
        <name>$yystack</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="1205" namespace="global" package="Default">
        <name>$yyTokenName</name>
        <default>array('$', 'VERT', 'COLON', 'RDEL', 'COMMENT', 'PHPSTARTTAG', 'PHPENDTAG', 'ASPSTARTTAG', 'ASPENDTAG', 'FAKEPHPSTARTTAG', 'XMLTAG', 'TEXT', 'STRIPON', 'STRIPOFF', 'BLOCKSOURCE', 'LITERALSTART', 'LITERALEND', 'LITERAL', 'LDEL', 'DOLLAR', 'ID', 'EQUAL', 'PTR', 'LDELIF', 'LDELFOR', 'SEMICOLON', 'INCDEC', 'TO', 'STEP', 'LDELFOREACH', 'SPACE', 'AS', 'APTR', 'LDELSETFILTER', 'SMARTYBLOCKCHILDPARENT', 'LDELSLASH', 'ATTR', 'INTEGER', 'COMMA', 'OPENP', 'CLOSEP', 'MATH', 'UNIMATH', 'ANDSYM', 'ISIN', 'ISDIVBY', 'ISNOTDIVBY', 'ISEVEN', 'ISNOTEVEN', 'ISEVENBY', 'ISNOTEVENBY', 'ISODD', 'ISNOTODD', 'ISODDBY', 'ISNOTODDBY', 'INSTANCEOF', 'QMARK', 'NOT', 'TYPECAST', 'HEX', 'DOT', 'SINGLEQUOTESTRING', 'DOUBLECOLON', 'AT', 'HATCH', 'OPENB', 'CLOSEB', 'EQUALS', 'NOTEQUALS', 'GREATERTHAN', 'LESSTHAN', 'GREATEREQUAL', 'LESSEQUAL', 'IDENTITY', 'NONEIDENTITY', 'MOD', 'LAND', 'LOR', 'LXOR', 'QUOTE', 'BACKTICK', 'DOLLARID', 'error', 'start', 'template', 'template_element', 'smartytag', 'literal', 'literal_elements', 'literal_element', 'value', 'modifierlist', 'attributes', 'expr', 'varindexed', 'statement', 'statements', 'optspace', 'varvar', 'foraction', 'modparameters', 'attribute', 'ternary', 'array', 'ifcond', 'lop', 'variable', 'function', 'doublequoted_with_quotes', 'static_class_access', 'object', 'arrayindex', 'indexdef', 'varvarele', 'objectchain', 'objectelement', 'method', 'params', 'modifier', 'modparameter', 'arrayelements', 'arrayelement', 'doublequoted', 'doublequotedcontent')</default>
      </property>
      <property final="false" static="true" visibility="public" line="1239" namespace="global" package="Default">
        <name>$yyRuleName</name>
        <default>array("start ::= template", "template ::= template_element", "template ::= template template_element", "template ::=", "template_element ::= smartytag RDEL", "template_element ::= COMMENT", "template_element ::= literal", "template_element ::= PHPSTARTTAG", "template_element ::= PHPENDTAG", "template_element ::= ASPSTARTTAG", "template_element ::= ASPENDTAG", "template_element ::= FAKEPHPSTARTTAG", "template_element ::= XMLTAG", "template_element ::= TEXT", "template_element ::= STRIPON", "template_element ::= STRIPOFF", "template_element ::= BLOCKSOURCE", "literal ::= LITERALSTART LITERALEND", "literal ::= LITERALSTART literal_elements LITERALEND", "literal_elements ::= literal_elements literal_element", "literal_elements ::=", "literal_element ::= literal", "literal_element ::= LITERAL", "literal_element ::= PHPSTARTTAG", "literal_element ::= FAKEPHPSTARTTAG", "literal_element ::= PHPENDTAG", "literal_element ::= ASPSTARTTAG", "literal_element ::= ASPENDTAG", "smartytag ::= LDEL value", "smartytag ::= LDEL value modifierlist attributes", "smartytag ::= LDEL value attributes", "smartytag ::= LDEL expr modifierlist attributes", "smartytag ::= LDEL expr attributes", "smartytag ::= LDEL DOLLAR ID EQUAL value", "smartytag ::= LDEL DOLLAR ID EQUAL expr", "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes", "smartytag ::= LDEL varindexed EQUAL expr attributes", "smartytag ::= LDEL ID attributes", "smartytag ::= LDEL ID", "smartytag ::= LDEL ID PTR ID attributes", "smartytag ::= LDEL ID modifierlist attributes", "smartytag ::= LDEL ID PTR ID modifierlist attributes", "smartytag ::= LDELIF expr", "smartytag ::= LDELIF expr attributes", "smartytag ::= LDELIF statement", "smartytag ::= LDELIF statement attributes", "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes", "foraction ::= EQUAL expr", "foraction ::= INCDEC", "smartytag ::= LDELFOR statement TO expr attributes", "smartytag ::= LDELFOR statement TO expr STEP expr attributes", "smartytag ::= LDELFOREACH attributes", "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes", "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes", "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes", "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes", "smartytag ::= LDELSETFILTER ID modparameters", "smartytag ::= LDELSETFILTER ID modparameters modifierlist", "smartytag ::= LDEL SMARTYBLOCKCHILDPARENT", "smartytag ::= LDELSLASH ID", "smartytag ::= LDELSLASH ID modifierlist", "smartytag ::= LDELSLASH ID PTR ID", "smartytag ::= LDELSLASH ID PTR ID modifierlist", "attributes ::= attributes attribute", "attributes ::= attribute", "attributes ::=", "attribute ::= SPACE ID EQUAL ID", "attribute ::= ATTR expr", "attribute ::= ATTR value", "attribute ::= SPACE ID", "attribute ::= SPACE expr", "attribute ::= SPACE value", "attribute ::= SPACE INTEGER EQUAL expr", "statements ::= statement", "statements ::= statements COMMA statement", "statement ::= DOLLAR varvar EQUAL expr", "statement ::= varindexed EQUAL expr", "statement ::= OPENP statement CLOSEP", "expr ::= value", "expr ::= ternary", "expr ::= DOLLAR ID COLON ID", "expr ::= expr MATH value", "expr ::= expr UNIMATH value", "expr ::= expr ANDSYM value", "expr ::= array", "expr ::= expr modifierlist", "expr ::= expr ifcond expr", "expr ::= expr ISIN array", "expr ::= expr ISIN value", "expr ::= expr lop expr", "expr ::= expr ISDIVBY expr", "expr ::= expr ISNOTDIVBY expr", "expr ::= expr ISEVEN", "expr ::= expr ISNOTEVEN", "expr ::= expr ISEVENBY expr", "expr ::= expr ISNOTEVENBY expr", "expr ::= expr ISODD", "expr ::= expr ISNOTODD", "expr ::= expr ISODDBY expr", "expr ::= expr ISNOTODDBY expr", "expr ::= value INSTANCEOF ID", "expr ::= value INSTANCEOF value", "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr", "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr", "value ::= variable", "value ::= UNIMATH value", "value ::= NOT value", "value ::= TYPECAST value", "value ::= variable INCDEC", "value ::= HEX", "value ::= INTEGER", "value ::= INTEGER DOT INTEGER", "value ::= INTEGER DOT", "value ::= DOT INTEGER", "value ::= ID", "value ::= function", "value ::= OPENP expr CLOSEP", "value ::= SINGLEQUOTESTRING", "value ::= doublequoted_with_quotes", "value ::= ID DOUBLECOLON static_class_access", "value ::= varindexed DOUBLECOLON static_class_access", "value ::= smartytag RDEL", "value ::= value modifierlist", "variable ::= varindexed", "variable ::= DOLLAR varvar AT ID", "variable ::= object", "variable ::= HATCH ID HATCH", "variable ::= HATCH ID HATCH arrayindex", "variable ::= HATCH variable HATCH", "variable ::= HATCH variable HATCH arrayindex", "varindexed ::= DOLLAR varvar arrayindex", "arrayindex ::= arrayindex indexdef", "arrayindex ::=", "indexdef ::= DOT DOLLAR varvar", "indexdef ::= DOT DOLLAR varvar AT ID", "indexdef ::= DOT ID", "indexdef ::= DOT INTEGER", "indexdef ::= DOT LDEL expr RDEL", "indexdef ::= OPENB ID CLOSEB", "indexdef ::= OPENB ID DOT ID CLOSEB", "indexdef ::= OPENB expr CLOSEB", "indexdef ::= OPENB CLOSEB", "varvar ::= varvarele", "varvar ::= varvar varvarele", "varvarele ::= ID", "varvarele ::= LDEL expr RDEL", "object ::= varindexed objectchain", "objectchain ::= objectelement", "objectchain ::= objectchain objectelement", "objectelement ::= PTR ID arrayindex", "objectelement ::= PTR DOLLAR varvar arrayindex", "objectelement ::= PTR LDEL expr RDEL arrayindex", "objectelement ::= PTR ID LDEL expr RDEL arrayindex", "objectelement ::= PTR method", "function ::= ID OPENP params CLOSEP", "method ::= ID OPENP params CLOSEP", "method ::= DOLLAR ID OPENP params CLOSEP", "params ::= params COMMA expr", "params ::= expr", "params ::=", "modifierlist ::= modifierlist modifier modparameters", "modifierlist ::= modifier modparameters", "modifier ::= VERT AT ID", "modifier ::= VERT ID", "modparameters ::= modparameters modparameter", "modparameters ::=", "modparameter ::= COLON value", "modparameter ::= COLON array", "static_class_access ::= method", "static_class_access ::= method objectchain", "static_class_access ::= ID", "static_class_access ::= DOLLAR ID arrayindex", "static_class_access ::= DOLLAR ID arrayindex objectchain", "ifcond ::= EQUALS", "ifcond ::= NOTEQUALS", "ifcond ::= GREATERTHAN", "ifcond ::= LESSTHAN", "ifcond ::= GREATEREQUAL", "ifcond ::= LESSEQUAL", "ifcond ::= IDENTITY", "ifcond ::= NONEIDENTITY", "ifcond ::= MOD", "lop ::= LAND", "lop ::= LOR", "lop ::= LXOR", "array ::= OPENB arrayelements CLOSEB", "arrayelements ::= arrayelement", "arrayelements ::= arrayelements COMMA arrayelement", "arrayelements ::=", "arrayelement ::= value APTR expr", "arrayelement ::= ID APTR expr", "arrayelement ::= expr", "doublequoted_with_quotes ::= QUOTE QUOTE", "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE", "doublequoted ::= doublequoted doublequotedcontent", "doublequoted ::= doublequotedcontent", "doublequotedcontent ::= BACKTICK variable BACKTICK", "doublequotedcontent ::= BACKTICK expr BACKTICK", "doublequotedcontent ::= DOLLARID", "doublequotedcontent ::= LDEL variable RDEL", "doublequotedcontent ::= LDEL expr RDEL", "doublequotedcontent ::= smartytag RDEL", "doublequotedcontent ::= TEXT", "optspace ::= SPACE", "optspace ::=")</default>
      </property>
      <property final="false" static="true" visibility="public" line="1732" namespace="global" package="Default">
        <name>$yyRuleInfo</name>
        <default>array(array('lhs' =&gt; 83, 'rhs' =&gt; 1), array('lhs' =&gt; 84, 'rhs' =&gt; 1), array('lhs' =&gt; 84, 'rhs' =&gt; 2), array('lhs' =&gt; 84, 'rhs' =&gt; 0), array('lhs' =&gt; 85, 'rhs' =&gt; 2), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 85, 'rhs' =&gt; 1), array('lhs' =&gt; 87, 'rhs' =&gt; 2), array('lhs' =&gt; 87, 'rhs' =&gt; 3), array('lhs' =&gt; 88, 'rhs' =&gt; 2), array('lhs' =&gt; 88, 'rhs' =&gt; 0), array('lhs' =&gt; 89, 'rhs' =&gt; 1), array('lhs' =&gt; 89, 'rhs' =&gt; 1), array('lhs' =&gt; 89, 'rhs' =&gt; 1), array('lhs' =&gt; 89, 'rhs' =&gt; 1), array('lhs' =&gt; 89, 'rhs' =&gt; 1), array('lhs' =&gt; 89, 'rhs' =&gt; 1), array('lhs' =&gt; 89, 'rhs' =&gt; 1), array('lhs' =&gt; 86, 'rhs' =&gt; 2), array('lhs' =&gt; 86, 'rhs' =&gt; 4), array('lhs' =&gt; 86, 'rhs' =&gt; 3), array('lhs' =&gt; 86, 'rhs' =&gt; 4), array('lhs' =&gt; 86, 'rhs' =&gt; 3), array('lhs' =&gt; 86, 'rhs' =&gt; 5), array('lhs' =&gt; 86, 'rhs' =&gt; 5), array('lhs' =&gt; 86, 'rhs' =&gt; 6), array('lhs' =&gt; 86, 'rhs' =&gt; 5), array('lhs' =&gt; 86, 'rhs' =&gt; 3), array('lhs' =&gt; 86, 'rhs' =&gt; 2), array('lhs' =&gt; 86, 'rhs' =&gt; 5), array('lhs' =&gt; 86, 'rhs' =&gt; 4), array('lhs' =&gt; 86, 'rhs' =&gt; 6), array('lhs' =&gt; 86, 'rhs' =&gt; 2), array('lhs' =&gt; 86, 'rhs' =&gt; 3), array('lhs' =&gt; 86, 'rhs' =&gt; 2), array('lhs' =&gt; 86, 'rhs' =&gt; 3), array('lhs' =&gt; 86, 'rhs' =&gt; 11), array('lhs' =&gt; 99, 'rhs' =&gt; 2), array('lhs' =&gt; 99, 'rhs' =&gt; 1), array('lhs' =&gt; 86, 'rhs' =&gt; 5), array('lhs' =&gt; 86, 'rhs' =&gt; 7), array('lhs' =&gt; 86, 'rhs' =&gt; 2), array('lhs' =&gt; 86, 'rhs' =&gt; 7), array('lhs' =&gt; 86, 'rhs' =&gt; 10), array('lhs' =&gt; 86, 'rhs' =&gt; 7), array('lhs' =&gt; 86, 'rhs' =&gt; 10), array('lhs' =&gt; 86, 'rhs' =&gt; 3), array('lhs' =&gt; 86, 'rhs' =&gt; 4), array('lhs' =&gt; 86, 'rhs' =&gt; 2), array('lhs' =&gt; 86, 'rhs' =&gt; 2), array('lhs' =&gt; 86, 'rhs' =&gt; 3), array('lhs' =&gt; 86, 'rhs' =&gt; 4), array('lhs' =&gt; 86, 'rhs' =&gt; 5), array('lhs' =&gt; 92, 'rhs' =&gt; 2), array('lhs' =&gt; 92, 'rhs' =&gt; 1), array('lhs' =&gt; 92, 'rhs' =&gt; 0), array('lhs' =&gt; 101, 'rhs' =&gt; 4), array('lhs' =&gt; 101, 'rhs' =&gt; 2), array('lhs' =&gt; 101, 'rhs' =&gt; 2), array('lhs' =&gt; 101, 'rhs' =&gt; 2), array('lhs' =&gt; 101, 'rhs' =&gt; 2), array('lhs' =&gt; 101, 'rhs' =&gt; 2), array('lhs' =&gt; 101, 'rhs' =&gt; 4), array('lhs' =&gt; 96, 'rhs' =&gt; 1), array('lhs' =&gt; 96, 'rhs' =&gt; 3), array('lhs' =&gt; 95, 'rhs' =&gt; 4), array('lhs' =&gt; 95, 'rhs' =&gt; 3), array('lhs' =&gt; 95, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 1), array('lhs' =&gt; 93, 'rhs' =&gt; 1), array('lhs' =&gt; 93, 'rhs' =&gt; 4), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 1), array('lhs' =&gt; 93, 'rhs' =&gt; 2), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 2), array('lhs' =&gt; 93, 'rhs' =&gt; 2), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 2), array('lhs' =&gt; 93, 'rhs' =&gt; 2), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 93, 'rhs' =&gt; 3), array('lhs' =&gt; 102, 'rhs' =&gt; 8), array('lhs' =&gt; 102, 'rhs' =&gt; 7), array('lhs' =&gt; 90, 'rhs' =&gt; 1), array('lhs' =&gt; 90, 'rhs' =&gt; 2), array('lhs' =&gt; 90, 'rhs' =&gt; 2), array('lhs' =&gt; 90, 'rhs' =&gt; 2), array('lhs' =&gt; 90, 'rhs' =&gt; 2), array('lhs' =&gt; 90, 'rhs' =&gt; 1), array('lhs' =&gt; 90, 'rhs' =&gt; 1), array('lhs' =&gt; 90, 'rhs' =&gt; 3), array('lhs' =&gt; 90, 'rhs' =&gt; 2), array('lhs' =&gt; 90, 'rhs' =&gt; 2), array('lhs' =&gt; 90, 'rhs' =&gt; 1), array('lhs' =&gt; 90, 'rhs' =&gt; 1), array('lhs' =&gt; 90, 'rhs' =&gt; 3), array('lhs' =&gt; 90, 'rhs' =&gt; 1), array('lhs' =&gt; 90, 'rhs' =&gt; 1), array('lhs' =&gt; 90, 'rhs' =&gt; 3), array('lhs' =&gt; 90, 'rhs' =&gt; 3), array('lhs' =&gt; 90, 'rhs' =&gt; 2), array('lhs' =&gt; 90, 'rhs' =&gt; 2), array('lhs' =&gt; 106, 'rhs' =&gt; 1), array('lhs' =&gt; 106, 'rhs' =&gt; 4), array('lhs' =&gt; 106, 'rhs' =&gt; 1), array('lhs' =&gt; 106, 'rhs' =&gt; 3), array('lhs' =&gt; 106, 'rhs' =&gt; 4), array('lhs' =&gt; 106, 'rhs' =&gt; 3), array('lhs' =&gt; 106, 'rhs' =&gt; 4), array('lhs' =&gt; 94, 'rhs' =&gt; 3), array('lhs' =&gt; 111, 'rhs' =&gt; 2), array('lhs' =&gt; 111, 'rhs' =&gt; 0), array('lhs' =&gt; 112, 'rhs' =&gt; 3), array('lhs' =&gt; 112, 'rhs' =&gt; 5), array('lhs' =&gt; 112, 'rhs' =&gt; 2), array('lhs' =&gt; 112, 'rhs' =&gt; 2), array('lhs' =&gt; 112, 'rhs' =&gt; 4), array('lhs' =&gt; 112, 'rhs' =&gt; 3), array('lhs' =&gt; 112, 'rhs' =&gt; 5), array('lhs' =&gt; 112, 'rhs' =&gt; 3), array('lhs' =&gt; 112, 'rhs' =&gt; 2), array('lhs' =&gt; 98, 'rhs' =&gt; 1), array('lhs' =&gt; 98, 'rhs' =&gt; 2), array('lhs' =&gt; 113, 'rhs' =&gt; 1), array('lhs' =&gt; 113, 'rhs' =&gt; 3), array('lhs' =&gt; 110, 'rhs' =&gt; 2), array('lhs' =&gt; 114, 'rhs' =&gt; 1), array('lhs' =&gt; 114, 'rhs' =&gt; 2), array('lhs' =&gt; 115, 'rhs' =&gt; 3), array('lhs' =&gt; 115, 'rhs' =&gt; 4), array('lhs' =&gt; 115, 'rhs' =&gt; 5), array('lhs' =&gt; 115, 'rhs' =&gt; 6), array('lhs' =&gt; 115, 'rhs' =&gt; 2), array('lhs' =&gt; 107, 'rhs' =&gt; 4), array('lhs' =&gt; 116, 'rhs' =&gt; 4), array('lhs' =&gt; 116, 'rhs' =&gt; 5), array('lhs' =&gt; 117, 'rhs' =&gt; 3), array('lhs' =&gt; 117, 'rhs' =&gt; 1), array('lhs' =&gt; 117, 'rhs' =&gt; 0), array('lhs' =&gt; 91, 'rhs' =&gt; 3), array('lhs' =&gt; 91, 'rhs' =&gt; 2), array('lhs' =&gt; 118, 'rhs' =&gt; 3), array('lhs' =&gt; 118, 'rhs' =&gt; 2), array('lhs' =&gt; 100, 'rhs' =&gt; 2), array('lhs' =&gt; 100, 'rhs' =&gt; 0), array('lhs' =&gt; 119, 'rhs' =&gt; 2), array('lhs' =&gt; 119, 'rhs' =&gt; 2), array('lhs' =&gt; 109, 'rhs' =&gt; 1), array('lhs' =&gt; 109, 'rhs' =&gt; 2), array('lhs' =&gt; 109, 'rhs' =&gt; 1), array('lhs' =&gt; 109, 'rhs' =&gt; 3), array('lhs' =&gt; 109, 'rhs' =&gt; 4), array('lhs' =&gt; 104, 'rhs' =&gt; 1), array('lhs' =&gt; 104, 'rhs' =&gt; 1), array('lhs' =&gt; 104, 'rhs' =&gt; 1), array('lhs' =&gt; 104, 'rhs' =&gt; 1), array('lhs' =&gt; 104, 'rhs' =&gt; 1), array('lhs' =&gt; 104, 'rhs' =&gt; 1), array('lhs' =&gt; 104, 'rhs' =&gt; 1), array('lhs' =&gt; 104, 'rhs' =&gt; 1), array('lhs' =&gt; 104, 'rhs' =&gt; 1), array('lhs' =&gt; 105, 'rhs' =&gt; 1), array('lhs' =&gt; 105, 'rhs' =&gt; 1), array('lhs' =&gt; 105, 'rhs' =&gt; 1), array('lhs' =&gt; 103, 'rhs' =&gt; 3), array('lhs' =&gt; 120, 'rhs' =&gt; 1), array('lhs' =&gt; 120, 'rhs' =&gt; 3), array('lhs' =&gt; 120, 'rhs' =&gt; 0), array('lhs' =&gt; 121, 'rhs' =&gt; 3), array('lhs' =&gt; 121, 'rhs' =&gt; 3), array('lhs' =&gt; 121, 'rhs' =&gt; 1), array('lhs' =&gt; 108, 'rhs' =&gt; 2), array('lhs' =&gt; 108, 'rhs' =&gt; 3), array('lhs' =&gt; 122, 'rhs' =&gt; 2), array('lhs' =&gt; 122, 'rhs' =&gt; 1), array('lhs' =&gt; 123, 'rhs' =&gt; 3), array('lhs' =&gt; 123, 'rhs' =&gt; 3), array('lhs' =&gt; 123, 'rhs' =&gt; 1), array('lhs' =&gt; 123, 'rhs' =&gt; 3), array('lhs' =&gt; 123, 'rhs' =&gt; 3), array('lhs' =&gt; 123, 'rhs' =&gt; 2), array('lhs' =&gt; 123, 'rhs' =&gt; 1), array('lhs' =&gt; 97, 'rhs' =&gt; 1), array('lhs' =&gt; 97, 'rhs' =&gt; 0))</default>
      </property>
      <property final="false" static="true" visibility="public" line="1940" namespace="global" package="Default">
        <name>$yyReduceMap</name>
        <default>array(0 =&gt; 0, 1 =&gt; 1, 2 =&gt; 1, 4 =&gt; 4, 5 =&gt; 5, 6 =&gt; 6, 7 =&gt; 7, 8 =&gt; 8, 9 =&gt; 9, 10 =&gt; 10, 11 =&gt; 11, 12 =&gt; 12, 13 =&gt; 13, 14 =&gt; 14, 15 =&gt; 15, 16 =&gt; 16, 17 =&gt; 17, 20 =&gt; 17, 204 =&gt; 17, 18 =&gt; 18, 77 =&gt; 18, 19 =&gt; 19, 105 =&gt; 19, 107 =&gt; 19, 108 =&gt; 19, 131 =&gt; 19, 169 =&gt; 19, 21 =&gt; 21, 22 =&gt; 21, 48 =&gt; 21, 70 =&gt; 21, 71 =&gt; 21, 78 =&gt; 21, 79 =&gt; 21, 84 =&gt; 21, 104 =&gt; 21, 109 =&gt; 21, 110 =&gt; 21, 115 =&gt; 21, 117 =&gt; 21, 118 =&gt; 21, 125 =&gt; 21, 142 =&gt; 21, 168 =&gt; 21, 170 =&gt; 21, 186 =&gt; 21, 191 =&gt; 21, 203 =&gt; 21, 23 =&gt; 23, 24 =&gt; 23, 25 =&gt; 25, 26 =&gt; 26, 27 =&gt; 27, 28 =&gt; 28, 29 =&gt; 29, 30 =&gt; 30, 32 =&gt; 30, 31 =&gt; 31, 33 =&gt; 33, 34 =&gt; 33, 35 =&gt; 35, 36 =&gt; 36, 37 =&gt; 37, 38 =&gt; 38, 39 =&gt; 39, 40 =&gt; 40, 41 =&gt; 41, 42 =&gt; 42, 43 =&gt; 43, 45 =&gt; 43, 44 =&gt; 44, 46 =&gt; 46, 47 =&gt; 47, 49 =&gt; 49, 50 =&gt; 50, 51 =&gt; 51, 52 =&gt; 52, 54 =&gt; 52, 53 =&gt; 53, 55 =&gt; 53, 56 =&gt; 56, 57 =&gt; 57, 58 =&gt; 58, 59 =&gt; 59, 60 =&gt; 60, 61 =&gt; 61, 62 =&gt; 62, 63 =&gt; 63, 64 =&gt; 64, 73 =&gt; 64, 158 =&gt; 64, 162 =&gt; 64, 166 =&gt; 64, 167 =&gt; 64, 65 =&gt; 65, 159 =&gt; 65, 165 =&gt; 65, 66 =&gt; 66, 67 =&gt; 67, 68 =&gt; 67, 69 =&gt; 69, 72 =&gt; 72, 74 =&gt; 74, 75 =&gt; 75, 76 =&gt; 75, 80 =&gt; 80, 81 =&gt; 81, 82 =&gt; 81, 83 =&gt; 81, 85 =&gt; 85, 122 =&gt; 85, 86 =&gt; 86, 89 =&gt; 86, 100 =&gt; 86, 87 =&gt; 87, 88 =&gt; 88, 90 =&gt; 90, 91 =&gt; 91, 92 =&gt; 92, 97 =&gt; 92, 93 =&gt; 93, 96 =&gt; 93, 94 =&gt; 94, 99 =&gt; 94, 95 =&gt; 95, 98 =&gt; 95, 101 =&gt; 101, 102 =&gt; 102, 103 =&gt; 103, 106 =&gt; 106, 111 =&gt; 111, 112 =&gt; 112, 113 =&gt; 113, 114 =&gt; 114, 116 =&gt; 116, 119 =&gt; 119, 120 =&gt; 120, 121 =&gt; 121, 123 =&gt; 123, 124 =&gt; 124, 126 =&gt; 126, 127 =&gt; 127, 128 =&gt; 128, 129 =&gt; 129, 130 =&gt; 130, 132 =&gt; 132, 188 =&gt; 132, 133 =&gt; 133, 134 =&gt; 134, 135 =&gt; 135, 136 =&gt; 136, 137 =&gt; 137, 140 =&gt; 137, 138 =&gt; 138, 139 =&gt; 139, 141 =&gt; 141, 143 =&gt; 143, 144 =&gt; 144, 145 =&gt; 145, 146 =&gt; 146, 147 =&gt; 147, 148 =&gt; 148, 149 =&gt; 149, 150 =&gt; 150, 151 =&gt; 151, 152 =&gt; 152, 153 =&gt; 153, 154 =&gt; 154, 155 =&gt; 155, 156 =&gt; 156, 157 =&gt; 157, 160 =&gt; 160, 161 =&gt; 161, 163 =&gt; 163, 164 =&gt; 164, 171 =&gt; 171, 172 =&gt; 172, 173 =&gt; 173, 174 =&gt; 174, 175 =&gt; 175, 176 =&gt; 176, 177 =&gt; 177, 178 =&gt; 178, 179 =&gt; 179, 180 =&gt; 180, 181 =&gt; 181, 182 =&gt; 182, 183 =&gt; 183, 184 =&gt; 184, 185 =&gt; 185, 187 =&gt; 187, 189 =&gt; 189, 190 =&gt; 190, 192 =&gt; 192, 193 =&gt; 193, 194 =&gt; 194, 195 =&gt; 195, 196 =&gt; 196, 197 =&gt; 196, 199 =&gt; 196, 198 =&gt; 198, 200 =&gt; 200, 201 =&gt; 201, 202 =&gt; 202)</default>
      </property>
      <property final="false" static="false" visibility="private" line="3077" namespace="global" package="Default">
        <name>$_retvalue</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="103">
          <name>$lex</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="121" package="Default">
        <name>escape_start_tag</name>
        <full_name>escape_start_tag</full_name>
        <argument line="121">
          <name>$tag_text</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="126" package="Default">
        <name>escape_end_tag</name>
        <full_name>escape_end_tag</full_name>
        <argument line="126">
          <name>$tag_text</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="Default">
        <name>compileVariable</name>
        <full_name>compileVariable</full_name>
        <argument line="130">
          <name>$variable</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1182" package="Default">
        <name>Trace</name>
        <full_name>Trace</full_name>
        <argument line="1182">
          <name>$TraceFILE</name>
          <default/>
          <type/>
        </argument>
        <argument line="1182">
          <name>$zTracePrompt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1193" package="Default">
        <name>PrintTrace</name>
        <full_name>PrintTrace</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1447" package="Default">
        <name>tokenName</name>
        <full_name>tokenName</full_name>
        <argument line="1447">
          <name>$tokenType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1459" package="Default">
        <name>yy_destructor</name>
        <full_name>yy_destructor</full_name>
        <argument line="1459">
          <name>$yymajor</name>
          <default/>
          <type/>
        </argument>
        <argument line="1459">
          <name>$yypminor</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1466" package="Default">
        <name>yy_pop_parser_stack</name>
        <full_name>yy_pop_parser_stack</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1484" package="Default">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1494" package="Default">
        <name>yy_get_expected_tokens</name>
        <full_name>yy_get_expected_tokens</full_name>
        <argument line="1494">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1564" package="Default">
        <name>yy_is_expected_token</name>
        <full_name>yy_is_expected_token</full_name>
        <argument line="1564">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1637" package="Default">
        <name>yy_find_shift_action</name>
        <full_name>yy_find_shift_action</full_name>
        <argument line="1637">
          <name>$iLookAhead</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1673" package="Default">
        <name>yy_find_reduce_action</name>
        <full_name>yy_find_reduce_action</full_name>
        <argument line="1673">
          <name>$stateno</name>
          <default/>
          <type/>
        </argument>
        <argument line="1673">
          <name>$iLookAhead</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1696" package="Default">
        <name>yy_shift</name>
        <full_name>yy_shift</full_name>
        <argument line="1696">
          <name>$yyNewState</name>
          <default/>
          <type/>
        </argument>
        <argument line="1696">
          <name>$yyMajor</name>
          <default/>
          <type/>
        </argument>
        <argument line="1696">
          <name>$yypMinor</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2147" package="Default">
        <name>yy_r0</name>
        <full_name>yy_r0</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2152" package="Default">
        <name>yy_r1</name>
        <full_name>yy_r1</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2159" package="Default">
        <name>yy_r4</name>
        <full_name>yy_r4</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2171" package="Default">
        <name>yy_r5</name>
        <full_name>yy_r5</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2176" package="Default">
        <name>yy_r6</name>
        <full_name>yy_r6</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2181" package="Default">
        <name>yy_r7</name>
        <full_name>yy_r7</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2197" package="Default">
        <name>yy_r8</name>
        <full_name>yy_r8</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2216" package="Default">
        <name>yy_r9</name>
        <full_name>yy_r9</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2240" package="Default">
        <name>yy_r10</name>
        <full_name>yy_r10</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2261" package="Default">
        <name>yy_r11</name>
        <full_name>yy_r11</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2270" package="Default">
        <name>yy_r12</name>
        <full_name>yy_r12</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2279" package="Default">
        <name>yy_r13</name>
        <full_name>yy_r13</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2288" package="Default">
        <name>yy_r14</name>
        <full_name>yy_r14</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2293" package="Default">
        <name>yy_r15</name>
        <full_name>yy_r15</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2298" package="Default">
        <name>yy_r16</name>
        <full_name>yy_r16</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2307" package="Default">
        <name>yy_r17</name>
        <full_name>yy_r17</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2312" package="Default">
        <name>yy_r18</name>
        <full_name>yy_r18</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2317" package="Default">
        <name>yy_r19</name>
        <full_name>yy_r19</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2322" package="Default">
        <name>yy_r21</name>
        <full_name>yy_r21</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2327" package="Default">
        <name>yy_r23</name>
        <full_name>yy_r23</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2332" package="Default">
        <name>yy_r25</name>
        <full_name>yy_r25</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2337" package="Default">
        <name>yy_r26</name>
        <full_name>yy_r26</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2342" package="Default">
        <name>yy_r27</name>
        <full_name>yy_r27</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2347" package="Default">
        <name>yy_r28</name>
        <full_name>yy_r28</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2352" package="Default">
        <name>yy_r29</name>
        <full_name>yy_r29</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2357" package="Default">
        <name>yy_r30</name>
        <full_name>yy_r30</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2362" package="Default">
        <name>yy_r31</name>
        <full_name>yy_r31</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2367" package="Default">
        <name>yy_r33</name>
        <full_name>yy_r33</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2372" package="Default">
        <name>yy_r35</name>
        <full_name>yy_r35</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2377" package="Default">
        <name>yy_r36</name>
        <full_name>yy_r36</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2382" package="Default">
        <name>yy_r37</name>
        <full_name>yy_r37</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2387" package="Default">
        <name>yy_r38</name>
        <full_name>yy_r38</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2392" package="Default">
        <name>yy_r39</name>
        <full_name>yy_r39</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2397" package="Default">
        <name>yy_r40</name>
        <full_name>yy_r40</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2403" package="Default">
        <name>yy_r41</name>
        <full_name>yy_r41</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2409" package="Default">
        <name>yy_r42</name>
        <full_name>yy_r42</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2415" package="Default">
        <name>yy_r43</name>
        <full_name>yy_r43</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2421" package="Default">
        <name>yy_r44</name>
        <full_name>yy_r44</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2427" package="Default">
        <name>yy_r46</name>
        <full_name>yy_r46</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2432" package="Default">
        <name>yy_r47</name>
        <full_name>yy_r47</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2437" package="Default">
        <name>yy_r49</name>
        <full_name>yy_r49</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2442" package="Default">
        <name>yy_r50</name>
        <full_name>yy_r50</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2447" package="Default">
        <name>yy_r51</name>
        <full_name>yy_r51</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2452" package="Default">
        <name>yy_r52</name>
        <full_name>yy_r52</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2457" package="Default">
        <name>yy_r53</name>
        <full_name>yy_r53</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2462" package="Default">
        <name>yy_r56</name>
        <full_name>yy_r56</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2467" package="Default">
        <name>yy_r57</name>
        <full_name>yy_r57</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2472" package="Default">
        <name>yy_r58</name>
        <full_name>yy_r58</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2484" package="Default">
        <name>yy_r59</name>
        <full_name>yy_r59</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2489" package="Default">
        <name>yy_r60</name>
        <full_name>yy_r60</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2494" package="Default">
        <name>yy_r61</name>
        <full_name>yy_r61</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2499" package="Default">
        <name>yy_r62</name>
        <full_name>yy_r62</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2504" package="Default">
        <name>yy_r63</name>
        <full_name>yy_r63</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2510" package="Default">
        <name>yy_r64</name>
        <full_name>yy_r64</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2515" package="Default">
        <name>yy_r65</name>
        <full_name>yy_r65</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2520" package="Default">
        <name>yy_r66</name>
        <full_name>yy_r66</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2533" package="Default">
        <name>yy_r67</name>
        <full_name>yy_r67</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2538" package="Default">
        <name>yy_r69</name>
        <full_name>yy_r69</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2543" package="Default">
        <name>yy_r72</name>
        <full_name>yy_r72</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2548" package="Default">
        <name>yy_r74</name>
        <full_name>yy_r74</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2554" package="Default">
        <name>yy_r75</name>
        <full_name>yy_r75</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2559" package="Default">
        <name>yy_r80</name>
        <full_name>yy_r80</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2564" package="Default">
        <name>yy_r81</name>
        <full_name>yy_r81</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2569" package="Default">
        <name>yy_r85</name>
        <full_name>yy_r85</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2574" package="Default">
        <name>yy_r86</name>
        <full_name>yy_r86</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2579" package="Default">
        <name>yy_r87</name>
        <full_name>yy_r87</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2584" package="Default">
        <name>yy_r88</name>
        <full_name>yy_r88</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2589" package="Default">
        <name>yy_r90</name>
        <full_name>yy_r90</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2594" package="Default">
        <name>yy_r91</name>
        <full_name>yy_r91</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2599" package="Default">
        <name>yy_r92</name>
        <full_name>yy_r92</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2604" package="Default">
        <name>yy_r93</name>
        <full_name>yy_r93</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2609" package="Default">
        <name>yy_r94</name>
        <full_name>yy_r94</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2614" package="Default">
        <name>yy_r95</name>
        <full_name>yy_r95</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2619" package="Default">
        <name>yy_r101</name>
        <full_name>yy_r101</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2626" package="Default">
        <name>yy_r102</name>
        <full_name>yy_r102</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2631" package="Default">
        <name>yy_r103</name>
        <full_name>yy_r103</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2636" package="Default">
        <name>yy_r106</name>
        <full_name>yy_r106</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2641" package="Default">
        <name>yy_r111</name>
        <full_name>yy_r111</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2646" package="Default">
        <name>yy_r112</name>
        <full_name>yy_r112</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2651" package="Default">
        <name>yy_r113</name>
        <full_name>yy_r113</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2656" package="Default">
        <name>yy_r114</name>
        <full_name>yy_r114</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2669" package="Default">
        <name>yy_r116</name>
        <full_name>yy_r116</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2674" package="Default">
        <name>yy_r119</name>
        <full_name>yy_r119</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2687" package="Default">
        <name>yy_r120</name>
        <full_name>yy_r120</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2696" package="Default">
        <name>yy_r121</name>
        <full_name>yy_r121</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2703" package="Default">
        <name>yy_r123</name>
        <full_name>yy_r123</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2716" package="Default">
        <name>yy_r124</name>
        <full_name>yy_r124</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2721" package="Default">
        <name>yy_r126</name>
        <full_name>yy_r126</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2726" package="Default">
        <name>yy_r127</name>
        <full_name>yy_r127</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2731" package="Default">
        <name>yy_r128</name>
        <full_name>yy_r128</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2736" package="Default">
        <name>yy_r129</name>
        <full_name>yy_r129</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2741" package="Default">
        <name>yy_r130</name>
        <full_name>yy_r130</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2746" package="Default">
        <name>yy_r132</name>
        <full_name>yy_r132</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2751" package="Default">
        <name>yy_r133</name>
        <full_name>yy_r133</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2756" package="Default">
        <name>yy_r134</name>
        <full_name>yy_r134</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2761" package="Default">
        <name>yy_r135</name>
        <full_name>yy_r135</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2766" package="Default">
        <name>yy_r136</name>
        <full_name>yy_r136</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2771" package="Default">
        <name>yy_r137</name>
        <full_name>yy_r137</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2776" package="Default">
        <name>yy_r138</name>
        <full_name>yy_r138</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2781" package="Default">
        <name>yy_r139</name>
        <full_name>yy_r139</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2786" package="Default">
        <name>yy_r141</name>
        <full_name>yy_r141</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2791" package="Default">
        <name>yy_r143</name>
        <full_name>yy_r143</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2796" package="Default">
        <name>yy_r144</name>
        <full_name>yy_r144</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2801" package="Default">
        <name>yy_r145</name>
        <full_name>yy_r145</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2806" package="Default">
        <name>yy_r146</name>
        <full_name>yy_r146</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2815" package="Default">
        <name>yy_r147</name>
        <full_name>yy_r147</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2820" package="Default">
        <name>yy_r148</name>
        <full_name>yy_r148</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2825" package="Default">
        <name>yy_r149</name>
        <full_name>yy_r149</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2833" package="Default">
        <name>yy_r150</name>
        <full_name>yy_r150</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2841" package="Default">
        <name>yy_r151</name>
        <full_name>yy_r151</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2849" package="Default">
        <name>yy_r152</name>
        <full_name>yy_r152</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2857" package="Default">
        <name>yy_r153</name>
        <full_name>yy_r153</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2862" package="Default">
        <name>yy_r154</name>
        <full_name>yy_r154</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2898" package="Default">
        <name>yy_r155</name>
        <full_name>yy_r155</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2906" package="Default">
        <name>yy_r156</name>
        <full_name>yy_r156</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2916" package="Default">
        <name>yy_r157</name>
        <full_name>yy_r157</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2921" package="Default">
        <name>yy_r160</name>
        <full_name>yy_r160</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2926" package="Default">
        <name>yy_r161</name>
        <full_name>yy_r161</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2931" package="Default">
        <name>yy_r163</name>
        <full_name>yy_r163</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2936" package="Default">
        <name>yy_r164</name>
        <full_name>yy_r164</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2941" package="Default">
        <name>yy_r171</name>
        <full_name>yy_r171</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2946" package="Default">
        <name>yy_r172</name>
        <full_name>yy_r172</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2951" package="Default">
        <name>yy_r173</name>
        <full_name>yy_r173</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2956" package="Default">
        <name>yy_r174</name>
        <full_name>yy_r174</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2961" package="Default">
        <name>yy_r175</name>
        <full_name>yy_r175</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2966" package="Default">
        <name>yy_r176</name>
        <full_name>yy_r176</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2971" package="Default">
        <name>yy_r177</name>
        <full_name>yy_r177</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2976" package="Default">
        <name>yy_r178</name>
        <full_name>yy_r178</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2981" package="Default">
        <name>yy_r179</name>
        <full_name>yy_r179</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2986" package="Default">
        <name>yy_r180</name>
        <full_name>yy_r180</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2991" package="Default">
        <name>yy_r181</name>
        <full_name>yy_r181</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2996" package="Default">
        <name>yy_r182</name>
        <full_name>yy_r182</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3001" package="Default">
        <name>yy_r183</name>
        <full_name>yy_r183</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3006" package="Default">
        <name>yy_r184</name>
        <full_name>yy_r184</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3011" package="Default">
        <name>yy_r185</name>
        <full_name>yy_r185</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3016" package="Default">
        <name>yy_r187</name>
        <full_name>yy_r187</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3021" package="Default">
        <name>yy_r189</name>
        <full_name>yy_r189</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3026" package="Default">
        <name>yy_r190</name>
        <full_name>yy_r190</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3031" package="Default">
        <name>yy_r192</name>
        <full_name>yy_r192</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3036" package="Default">
        <name>yy_r193</name>
        <full_name>yy_r193</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3041" package="Default">
        <name>yy_r194</name>
        <full_name>yy_r194</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3047" package="Default">
        <name>yy_r195</name>
        <full_name>yy_r195</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3052" package="Default">
        <name>yy_r196</name>
        <full_name>yy_r196</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3057" package="Default">
        <name>yy_r198</name>
        <full_name>yy_r198</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3062" package="Default">
        <name>yy_r200</name>
        <full_name>yy_r200</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3067" package="Default">
        <name>yy_r201</name>
        <full_name>yy_r201</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3072" package="Default">
        <name>yy_r202</name>
        <full_name>yy_r202</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3079" package="Default">
        <name>yy_reduce</name>
        <full_name>yy_reduce</full_name>
        <argument line="3079">
          <name>$yyruleno</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3120" package="Default">
        <name>yy_parse_failed</name>
        <full_name>yy_parse_failed</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3129" package="Default">
        <name>yy_syntax_error</name>
        <full_name>yy_syntax_error</full_name>
        <argument line="3129">
          <name>$yymajor</name>
          <default/>
          <type/>
        </argument>
        <argument line="3129">
          <name>$TOKEN</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3139" package="Default">
        <name>yy_accept</name>
        <full_name>yy_accept</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3155" package="Default">
        <name>doParse</name>
        <full_name>doParse</full_name>
        <argument line="3155">
          <name>$yymajor</name>
          <default/>
          <type/>
        </argument>
        <argument line="3155">
          <name>$yytokenvalue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libs/Smarty/sysplugins/smarty_internal_templateparser.php</error>
      <error line="14" code="50018">No DocBlock was found for property $string</error>
      <error line="15" code="50018">No DocBlock was found for property $metadata</error>
      <error line="17" code="50010">No DocBlock was found for method __construct()</error>
      <error line="32" code="50010">No DocBlock was found for method __toString()</error>
      <error line="37" code="50010">No DocBlock was found for method offsetExists()</error>
      <error line="42" code="50010">No DocBlock was found for method offsetGet()</error>
      <error line="47" code="50010">No DocBlock was found for method offsetSet()</error>
      <error line="71" code="50010">No DocBlock was found for method offsetUnset()</error>
      <error line="77" code="50000">No DocBlock was found for \TP_yyStackEntry</error>
      <error line="79" code="50018">No DocBlock was found for property $stateno</error>
      <error line="80" code="50018">No DocBlock was found for property $major</error>
      <error line="82" code="50018">No DocBlock was found for property $minor</error>
      <error line="88" code="50000">No DocBlock was found for \Smarty_Internal_Templateparser</error>
      <error line="96" code="50018">No DocBlock was found for property $successful</error>
      <error line="97" code="50018">No DocBlock was found for property $retvalue</error>
      <error line="98" code="50018">No DocBlock was found for property $prefix_number</error>
      <error line="99" code="50018">No DocBlock was found for property $lex</error>
      <error line="100" code="50018">No DocBlock was found for property $internalError</error>
      <error line="101" code="50018">No DocBlock was found for property $strip</error>
      <error line="228" code="50018">No DocBlock was found for property $yy_action</error>
      <error line="471" code="50018">No DocBlock was found for property $yy_lookahead</error>
      <error line="716" code="50018">No DocBlock was found for property $yy_shift_ofst</error>
      <error line="746" code="50018">No DocBlock was found for property $yy_reduce_ofst</error>
      <error line="769" code="50018">No DocBlock was found for property $yyExpectedTokens</error>
      <error line="1134" code="50018">No DocBlock was found for property $yy_default</error>
      <error line="1180" code="50018">No DocBlock was found for property $yyFallback</error>
      <error line="1199" code="50018">No DocBlock was found for property $yyTraceFILE</error>
      <error line="1200" code="50018">No DocBlock was found for property $yyTracePrompt</error>
      <error line="1201" code="50018">No DocBlock was found for property $yyidx</error>
      <error line="1202" code="50018">No DocBlock was found for property $yyerrcnt</error>
      <error line="1203" code="50018">No DocBlock was found for property $yystack</error>
      <error line="1205" code="50018">No DocBlock was found for property $yyTokenName</error>
      <error line="1239" code="50018">No DocBlock was found for property $yyRuleName</error>
      <error line="1732" code="50018">No DocBlock was found for property $yyRuleInfo</error>
      <error line="1940" code="50018">No DocBlock was found for property $yyReduceMap</error>
      <error line="3077" code="50018">No DocBlock was found for property $_retvalue</error>
      <error line="103" code="50010">No DocBlock was found for method __construct()</error>
      <error line="121" code="50010">No DocBlock was found for method escape_start_tag()</error>
      <error line="126" code="50010">No DocBlock was found for method escape_end_tag()</error>
      <error line="130" code="50010">No DocBlock was found for method compileVariable()</error>
      <error line="1182" code="50010">No DocBlock was found for method Trace()</error>
      <error line="1193" code="50010">No DocBlock was found for method PrintTrace()</error>
      <error line="1447" code="50010">No DocBlock was found for method tokenName()</error>
      <error line="1459" code="50010">No DocBlock was found for method yy_destructor()</error>
      <error line="1466" code="50010">No DocBlock was found for method yy_pop_parser_stack()</error>
      <error line="1484" code="50010">No DocBlock was found for method __destruct()</error>
      <error line="1494" code="50010">No DocBlock was found for method yy_get_expected_tokens()</error>
      <error line="1564" code="50010">No DocBlock was found for method yy_is_expected_token()</error>
      <error line="1637" code="50010">No DocBlock was found for method yy_find_shift_action()</error>
      <error line="1673" code="50010">No DocBlock was found for method yy_find_reduce_action()</error>
      <error line="1696" code="50010">No DocBlock was found for method yy_shift()</error>
      <error line="2147" code="50010">No DocBlock was found for method yy_r0()</error>
      <error line="2152" code="50010">No DocBlock was found for method yy_r1()</error>
      <error line="2159" code="50010">No DocBlock was found for method yy_r4()</error>
      <error line="2171" code="50010">No DocBlock was found for method yy_r5()</error>
      <error line="2176" code="50010">No DocBlock was found for method yy_r6()</error>
      <error line="2181" code="50010">No DocBlock was found for method yy_r7()</error>
      <error line="2197" code="50010">No DocBlock was found for method yy_r8()</error>
      <error line="2216" code="50010">No DocBlock was found for method yy_r9()</error>
      <error line="2240" code="50010">No DocBlock was found for method yy_r10()</error>
      <error line="2261" code="50010">No DocBlock was found for method yy_r11()</error>
      <error line="2270" code="50010">No DocBlock was found for method yy_r12()</error>
      <error line="2279" code="50010">No DocBlock was found for method yy_r13()</error>
      <error line="2288" code="50010">No DocBlock was found for method yy_r14()</error>
      <error line="2293" code="50010">No DocBlock was found for method yy_r15()</error>
      <error line="2298" code="50010">No DocBlock was found for method yy_r16()</error>
      <error line="2307" code="50010">No DocBlock was found for method yy_r17()</error>
      <error line="2312" code="50010">No DocBlock was found for method yy_r18()</error>
      <error line="2317" code="50010">No DocBlock was found for method yy_r19()</error>
      <error line="2322" code="50010">No DocBlock was found for method yy_r21()</error>
      <error line="2327" code="50010">No DocBlock was found for method yy_r23()</error>
      <error line="2332" code="50010">No DocBlock was found for method yy_r25()</error>
      <error line="2337" code="50010">No DocBlock was found for method yy_r26()</error>
      <error line="2342" code="50010">No DocBlock was found for method yy_r27()</error>
      <error line="2347" code="50010">No DocBlock was found for method yy_r28()</error>
      <error line="2352" code="50010">No DocBlock was found for method yy_r29()</error>
      <error line="2357" code="50010">No DocBlock was found for method yy_r30()</error>
      <error line="2362" code="50010">No DocBlock was found for method yy_r31()</error>
      <error line="2367" code="50010">No DocBlock was found for method yy_r33()</error>
      <error line="2372" code="50010">No DocBlock was found for method yy_r35()</error>
      <error line="2377" code="50010">No DocBlock was found for method yy_r36()</error>
      <error line="2382" code="50010">No DocBlock was found for method yy_r37()</error>
      <error line="2387" code="50010">No DocBlock was found for method yy_r38()</error>
      <error line="2392" code="50010">No DocBlock was found for method yy_r39()</error>
      <error line="2397" code="50010">No DocBlock was found for method yy_r40()</error>
      <error line="2403" code="50010">No DocBlock was found for method yy_r41()</error>
      <error line="2409" code="50010">No DocBlock was found for method yy_r42()</error>
      <error line="2415" code="50010">No DocBlock was found for method yy_r43()</error>
      <error line="2421" code="50010">No DocBlock was found for method yy_r44()</error>
      <error line="2427" code="50010">No DocBlock was found for method yy_r46()</error>
      <error line="2432" code="50010">No DocBlock was found for method yy_r47()</error>
      <error line="2437" code="50010">No DocBlock was found for method yy_r49()</error>
      <error line="2442" code="50010">No DocBlock was found for method yy_r50()</error>
      <error line="2447" code="50010">No DocBlock was found for method yy_r51()</error>
      <error line="2452" code="50010">No DocBlock was found for method yy_r52()</error>
      <error line="2457" code="50010">No DocBlock was found for method yy_r53()</error>
      <error line="2462" code="50010">No DocBlock was found for method yy_r56()</error>
      <error line="2467" code="50010">No DocBlock was found for method yy_r57()</error>
      <error line="2472" code="50010">No DocBlock was found for method yy_r58()</error>
      <error line="2484" code="50010">No DocBlock was found for method yy_r59()</error>
      <error line="2489" code="50010">No DocBlock was found for method yy_r60()</error>
      <error line="2494" code="50010">No DocBlock was found for method yy_r61()</error>
      <error line="2499" code="50010">No DocBlock was found for method yy_r62()</error>
      <error line="2504" code="50010">No DocBlock was found for method yy_r63()</error>
      <error line="2510" code="50010">No DocBlock was found for method yy_r64()</error>
      <error line="2515" code="50010">No DocBlock was found for method yy_r65()</error>
      <error line="2520" code="50010">No DocBlock was found for method yy_r66()</error>
      <error line="2533" code="50010">No DocBlock was found for method yy_r67()</error>
      <error line="2538" code="50010">No DocBlock was found for method yy_r69()</error>
      <error line="2543" code="50010">No DocBlock was found for method yy_r72()</error>
      <error line="2548" code="50010">No DocBlock was found for method yy_r74()</error>
      <error line="2554" code="50010">No DocBlock was found for method yy_r75()</error>
      <error line="2559" code="50010">No DocBlock was found for method yy_r80()</error>
      <error line="2564" code="50010">No DocBlock was found for method yy_r81()</error>
      <error line="2569" code="50010">No DocBlock was found for method yy_r85()</error>
      <error line="2574" code="50010">No DocBlock was found for method yy_r86()</error>
      <error line="2579" code="50010">No DocBlock was found for method yy_r87()</error>
      <error line="2584" code="50010">No DocBlock was found for method yy_r88()</error>
      <error line="2589" code="50010">No DocBlock was found for method yy_r90()</error>
      <error line="2594" code="50010">No DocBlock was found for method yy_r91()</error>
      <error line="2599" code="50010">No DocBlock was found for method yy_r92()</error>
      <error line="2604" code="50010">No DocBlock was found for method yy_r93()</error>
      <error line="2609" code="50010">No DocBlock was found for method yy_r94()</error>
      <error line="2614" code="50010">No DocBlock was found for method yy_r95()</error>
      <error line="2619" code="50010">No DocBlock was found for method yy_r101()</error>
      <error line="2626" code="50010">No DocBlock was found for method yy_r102()</error>
      <error line="2631" code="50010">No DocBlock was found for method yy_r103()</error>
      <error line="2636" code="50010">No DocBlock was found for method yy_r106()</error>
      <error line="2641" code="50010">No DocBlock was found for method yy_r111()</error>
      <error line="2646" code="50010">No DocBlock was found for method yy_r112()</error>
      <error line="2651" code="50010">No DocBlock was found for method yy_r113()</error>
      <error line="2656" code="50010">No DocBlock was found for method yy_r114()</error>
      <error line="2669" code="50010">No DocBlock was found for method yy_r116()</error>
      <error line="2674" code="50010">No DocBlock was found for method yy_r119()</error>
      <error line="2687" code="50010">No DocBlock was found for method yy_r120()</error>
      <error line="2696" code="50010">No DocBlock was found for method yy_r121()</error>
      <error line="2703" code="50010">No DocBlock was found for method yy_r123()</error>
      <error line="2716" code="50010">No DocBlock was found for method yy_r124()</error>
      <error line="2721" code="50010">No DocBlock was found for method yy_r126()</error>
      <error line="2726" code="50010">No DocBlock was found for method yy_r127()</error>
      <error line="2731" code="50010">No DocBlock was found for method yy_r128()</error>
      <error line="2736" code="50010">No DocBlock was found for method yy_r129()</error>
      <error line="2741" code="50010">No DocBlock was found for method yy_r130()</error>
      <error line="2746" code="50010">No DocBlock was found for method yy_r132()</error>
      <error line="2751" code="50010">No DocBlock was found for method yy_r133()</error>
      <error line="2756" code="50010">No DocBlock was found for method yy_r134()</error>
      <error line="2761" code="50010">No DocBlock was found for method yy_r135()</error>
      <error line="2766" code="50010">No DocBlock was found for method yy_r136()</error>
      <error line="2771" code="50010">No DocBlock was found for method yy_r137()</error>
      <error line="2776" code="50010">No DocBlock was found for method yy_r138()</error>
      <error line="2781" code="50010">No DocBlock was found for method yy_r139()</error>
      <error line="2786" code="50010">No DocBlock was found for method yy_r141()</error>
      <error line="2791" code="50010">No DocBlock was found for method yy_r143()</error>
      <error line="2796" code="50010">No DocBlock was found for method yy_r144()</error>
      <error line="2801" code="50010">No DocBlock was found for method yy_r145()</error>
      <error line="2806" code="50010">No DocBlock was found for method yy_r146()</error>
      <error line="2815" code="50010">No DocBlock was found for method yy_r147()</error>
      <error line="2820" code="50010">No DocBlock was found for method yy_r148()</error>
      <error line="2825" code="50010">No DocBlock was found for method yy_r149()</error>
      <error line="2833" code="50010">No DocBlock was found for method yy_r150()</error>
      <error line="2841" code="50010">No DocBlock was found for method yy_r151()</error>
      <error line="2849" code="50010">No DocBlock was found for method yy_r152()</error>
      <error line="2857" code="50010">No DocBlock was found for method yy_r153()</error>
      <error line="2862" code="50010">No DocBlock was found for method yy_r154()</error>
      <error line="2898" code="50010">No DocBlock was found for method yy_r155()</error>
      <error line="2906" code="50010">No DocBlock was found for method yy_r156()</error>
      <error line="2916" code="50010">No DocBlock was found for method yy_r157()</error>
      <error line="2921" code="50010">No DocBlock was found for method yy_r160()</error>
      <error line="2926" code="50010">No DocBlock was found for method yy_r161()</error>
      <error line="2931" code="50010">No DocBlock was found for method yy_r163()</error>
      <error line="2936" code="50010">No DocBlock was found for method yy_r164()</error>
      <error line="2941" code="50010">No DocBlock was found for method yy_r171()</error>
      <error line="2946" code="50010">No DocBlock was found for method yy_r172()</error>
      <error line="2951" code="50010">No DocBlock was found for method yy_r173()</error>
      <error line="2956" code="50010">No DocBlock was found for method yy_r174()</error>
      <error line="2961" code="50010">No DocBlock was found for method yy_r175()</error>
      <error line="2966" code="50010">No DocBlock was found for method yy_r176()</error>
      <error line="2971" code="50010">No DocBlock was found for method yy_r177()</error>
      <error line="2976" code="50010">No DocBlock was found for method yy_r178()</error>
      <error line="2981" code="50010">No DocBlock was found for method yy_r179()</error>
      <error line="2986" code="50010">No DocBlock was found for method yy_r180()</error>
      <error line="2991" code="50010">No DocBlock was found for method yy_r181()</error>
      <error line="2996" code="50010">No DocBlock was found for method yy_r182()</error>
      <error line="3001" code="50010">No DocBlock was found for method yy_r183()</error>
      <error line="3006" code="50010">No DocBlock was found for method yy_r184()</error>
      <error line="3011" code="50010">No DocBlock was found for method yy_r185()</error>
      <error line="3016" code="50010">No DocBlock was found for method yy_r187()</error>
      <error line="3021" code="50010">No DocBlock was found for method yy_r189()</error>
      <error line="3026" code="50010">No DocBlock was found for method yy_r190()</error>
      <error line="3031" code="50010">No DocBlock was found for method yy_r192()</error>
      <error line="3036" code="50010">No DocBlock was found for method yy_r193()</error>
      <error line="3041" code="50010">No DocBlock was found for method yy_r194()</error>
      <error line="3047" code="50010">No DocBlock was found for method yy_r195()</error>
      <error line="3052" code="50010">No DocBlock was found for method yy_r196()</error>
      <error line="3057" code="50010">No DocBlock was found for method yy_r198()</error>
      <error line="3062" code="50010">No DocBlock was found for method yy_r200()</error>
      <error line="3067" code="50010">No DocBlock was found for method yy_r201()</error>
      <error line="3072" code="50010">No DocBlock was found for method yy_r202()</error>
      <error line="3079" code="50010">No DocBlock was found for method yy_reduce()</error>
      <error line="3120" code="50010">No DocBlock was found for method yy_parse_failed()</error>
      <error line="3129" code="50010">No DocBlock was found for method yy_syntax_error()</error>
      <error line="3139" code="50010">No DocBlock was found for method yy_accept()</error>
      <error line="3155" code="50010">No DocBlock was found for method doParse()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_function_call_handler.php" hash="689b43f69c9cd3f244ca51e78a4db191" package="Smarty\PluginsInternal">
    <docblock line="2">
      <description>Smarty Internal Plugin Function Call Handler</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsInternal"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Smarty\PluginsInternal">
      <extends/>
      <name>Smarty_Internal_Function_Call_Handler</name>
      <full_name>\Smarty_Internal_Function_Call_Handler</full_name>
      <docblock line="10">
        <description>This class does call function defined with the {function} tag</description>
        <long-description/>
        <tag line="10" name="package" description="Smarty"/>
        <tag line="10" name="subpackage" description="PluginsInternal"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="28" package="Smarty\PluginsInternal">
        <name>call</name>
        <full_name>call</full_name>
        <docblock line="18">
          <description>This function handles calls to template functions defined by {function}
It does create a PHP function at the first call</description>
          <long-description/>
          <tag line="18" name="param" description="template function name" type="string" variable="$_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="18" name="param" description="Smarty variables passed as call parameter" type="array" variable="$_params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="18" name="param" description="nocache hash value" type="string" variable="$_hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="nocache flag" type="bool" variable="$_nocache">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="28">
          <name>$_params</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$_hash</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$_nocache</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_for.php" hash="065463c26157a39e3a1df1f079b92963" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile For</description>
      <long-description>&lt;p&gt;Compiles the {for} {forelse} {/for} tags&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_For</name>
      <full_name>\Smarty_Internal_Compile_For</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile For Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="20">
          <description>Compiles code for the {for} tag</description>
          <long-description>&lt;p&gt;Smarty 3 does implement two different sytaxes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;{for $var in $array}
For looping over arrays or iterators&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;{for $x=0; $x&amp;lt;$y; $x++}
For general loops&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The parser is gereration different sets of attribute by which this compiler can
determin which syntax is used.&lt;/p&gt;</long-description>
          <tag line="20" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="20" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="93" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Forelse</name>
      <full_name>\Smarty_Internal_Compile_Forelse</full_name>
      <docblock line="87">
        <description>Smarty Internal Plugin Compile Forelse Class</description>
        <long-description/>
        <tag line="87" name="package" description="Smarty"/>
        <tag line="87" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="95">
          <description>Compiles code for the {forelse} tag</description>
          <long-description/>
          <tag line="95" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="95" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="95" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="95" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="122" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Forclose</name>
      <full_name>\Smarty_Internal_Compile_Forclose</full_name>
      <docblock line="116">
        <description>Smarty Internal Plugin Compile Forclose Class</description>
        <long-description/>
        <tag line="116" name="package" description="Smarty"/>
        <tag line="116" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="124">
          <description>Compiles code for the {/for} tag</description>
          <long-description/>
          <tag line="124" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="124" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="124" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="124" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="132">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="132">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_resource_string.php" hash="0648e405a5a41480ab6ae87cc363ec74" package="Smarty\TemplateResources">
    <docblock line="2">
      <description>Smarty Internal Plugin Resource String</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="TemplateResources"/>
      <tag line="2" name="author" description="Uwe Tews"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Smarty\TemplateResources">
      <extends>\Smarty_Resource</extends>
      <name>Smarty_Internal_Resource_String</name>
      <full_name>\Smarty_Internal_Resource_String</full_name>
      <docblock line="11">
        <description>Smarty Internal Plugin Resource String</description>
        <long-description>&lt;p&gt;Implements the strings as resource for Smarty template&lt;/p&gt;

&lt;p&gt;{@internal unlike eval-resources the compiled state of string-resources is saved for subsequent access}}&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="Smarty"/>
        <tag line="11" name="subpackage" description="TemplateResources"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Smarty\TemplateResources">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="23">
          <description>populate Source Object with meta data from Resource</description>
          <long-description/>
          <tag line="23" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="23" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="23" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="30">
          <name>$_template</name>
          <default>null</default>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Smarty\TemplateResources">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="37">
          <description>Load template's source from $resource_name into current template object</description>
          <long-description/>
          <tag line="37" name="uses" description="to decode base64 and urlencoded template_resources" refers="\decode()"/>
          <tag line="37" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="37" name="return" description="template source" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="55" package="Smarty\TemplateResources">
        <name>decode</name>
        <full_name>decode</full_name>
        <docblock line="49">
          <description>decode base64 and urlencode</description>
          <long-description/>
          <tag line="49" name="param" description="template_resource to decode" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="decoded template_resource" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="77" package="Smarty\TemplateResources">
        <name>buildUniqueResourceName</name>
        <full_name>buildUniqueResourceName</full_name>
        <docblock line="69">
          <description>modify resource_name according to resource handlers specifications</description>
          <long-description/>
          <tag line="69" name="param" description="Smarty instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="69" name="param" description="resource_name to make unique" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="flag for config resource" type="boolean" variable="$is_config">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="69" name="return" description="unique resource name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="77">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="77">
          <name>$is_config</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="90" package="Smarty\TemplateResources">
        <name>getBasename</name>
        <full_name>getBasename</full_name>
        <docblock line="82">
          <description>Determine basename for compiled filename</description>
          <long-description>&lt;p&gt;Always returns an empty string.&lt;/p&gt;</long-description>
          <tag line="82" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="82" name="return" description="resource's basename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_insert.php" hash="835b471512bd17de3b92ec6677fb18ce" package="Smarty\Compiler">
    <docblock line="3">
      <description>Smarty Internal Plugin Compile Insert</description>
      <long-description>&lt;p&gt;Compiles the {insert} tag&lt;/p&gt;</long-description>
      <tag line="3" name="package" description="Smarty"/>
      <tag line="3" name="subpackage" description="Compiler"/>
      <tag line="3" name="author" description="Uwe Tews"/>
    </docblock>
    <include line="99" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="19" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Insert</name>
      <full_name>\Smarty_Internal_Compile_Insert</full_name>
      <docblock line="13">
        <description>Smarty Internal Plugin Compile Insert Class</description>
        <long-description/>
        <tag line="13" name="package" description="Smarty"/>
        <tag line="13" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('name')</default>
        <docblock line="21">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="21" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="21" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="34" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('name')</default>
        <docblock line="28">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="28" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="41" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('_any')</default>
        <docblock line="35">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="35" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="43">
          <description>Compiles code for the {insert} tag</description>
          <long-description/>
          <tag line="43" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="43" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="43" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_private_object_function.php" hash="329402a92b1d8c94c4d37698c447d715" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Object Funtion</description>
      <long-description>&lt;p&gt;Compiles code for registered objects as function&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Private_Object_Function</name>
      <full_name>\Smarty_Internal_Compile_Private_Object_Function</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Object Function Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('_any')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="28">
          <description>Compiles code for the execution of function plugin</description>
          <long-description/>
          <tag line="28" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="28" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="name of function" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="name of method to call" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_resource.php" hash="bbc67234c7d886853eb0b6cd11615123" package="Smarty\TemplateResources">
    <docblock line="2">
      <description>Smarty Resource Plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="TemplateResources"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="18" package="Smarty\TemplateResources">
      <extends/>
      <name>Smarty_Resource</name>
      <full_name>\Smarty_Resource</full_name>
      <docblock line="10">
        <description>Smarty Resource Plugin</description>
        <long-description>&lt;p&gt;Base implementation for resource plugins&lt;/p&gt;</long-description>
        <tag line="10" name="package" description="Smarty"/>
        <tag line="10" name="subpackage" description="TemplateResources"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="24" namespace="global" package="Default">
        <name>$sources</name>
        <default>array()</default>
        <docblock line="20">
          <description>cache for Smarty_Template_Source instances</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="29" namespace="global" package="Default">
        <name>$compileds</name>
        <default>array()</default>
        <docblock line="25">
          <description>cache for Smarty_Template_Compiled instances</description>
          <long-description/>
          <tag line="25" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="34" namespace="global" package="Default">
        <name>$resources</name>
        <default>array()</default>
        <docblock line="30">
          <description>cache for Smarty_Resource instances</description>
          <long-description/>
          <tag line="30" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="39" namespace="global" package="Default">
        <name>$sysplugins</name>
        <default>array('file' =&gt; true, 'string' =&gt; true, 'extends' =&gt; true, 'stream' =&gt; true, 'eval' =&gt; true, 'php' =&gt; true)</default>
        <docblock line="35">
          <description>resource types provided by the core</description>
          <long-description/>
          <tag line="35" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="52" namespace="global" package="Default">
        <name>$compiler_class</name>
        <default>'Smarty_Internal_SmartyTemplateCompiler'</default>
        <docblock line="48">
          <description>Name of the Class to compile this resource's contents with</description>
          <long-description/>
          <tag line="48" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="58" namespace="global" package="Default">
        <name>$template_lexer_class</name>
        <default>'Smarty_Internal_Templatelexer'</default>
        <docblock line="54">
          <description>Name of the Class to tokenize this resource's contents with</description>
          <long-description/>
          <tag line="54" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="64" namespace="global" package="Default">
        <name>$template_parser_class</name>
        <default>'Smarty_Internal_Templateparser'</default>
        <docblock line="60">
          <description>Name of the Class to parse this resource's contents with</description>
          <long-description/>
          <tag line="60" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="75" package="Smarty\TemplateResources">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="66">
          <description>Load template's source into current template object</description>
          <long-description>&lt;p&gt;{@internal The loaded source is assigned to $_template-&gt;source-&gt;content directly.}}&lt;/p&gt;</long-description>
          <tag line="66" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="66" name="return" description="template source" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="throws" description="if source cannot be loaded" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="83" package="Smarty\TemplateResources">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="77">
          <description>populate Source Object with meta data from Resource</description>
          <long-description/>
          <tag line="77" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="77" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="83">
          <name>$_template</name>
          <default>null</default>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="Smarty\TemplateResources">
        <name>populateTimestamp</name>
        <full_name>populateTimestamp</full_name>
        <docblock line="85">
          <description>populate Source Object with timestamp and exists from Resource</description>
          <long-description/>
          <tag line="85" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="103" package="Smarty\TemplateResources">
        <name>buildUniqueResourceName</name>
        <full_name>buildUniqueResourceName</full_name>
        <docblock line="95">
          <description>modify resource_name according to resource handlers specifications</description>
          <long-description/>
          <tag line="95" name="param" description="Smarty instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="95" name="param" description="resource_name to make unique" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="flag for config resource" type="boolean" variable="$is_config">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="95" name="return" description="unique resource name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="103">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$is_config</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Smarty\TemplateResources">
        <name>populateCompiledFilepath</name>
        <full_name>populateCompiledFilepath</full_name>
        <docblock line="112">
          <description>populate Compiled Object with compiled filepath</description>
          <long-description/>
          <tag line="112" name="param" description="compiled object" type="\Smarty_Template_Compiled" variable="$compiled">
            <type by_reference="false">\Smarty_Template_Compiled</type>
          </tag>
          <tag line="112" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$compiled</name>
          <default/>
          <type>\Smarty_Template_Compiled</type>
        </argument>
        <argument line="118">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="160" package="Smarty\TemplateResources">
        <name>normalizePath</name>
        <full_name>normalizePath</full_name>
        <docblock line="153">
          <description>Normalize Paths "foo/.</description>
          <long-description>&lt;p&gt;./bar" to "bar"&lt;/p&gt;</long-description>
          <tag line="153" name="param" description="path to normalize" type="string" variable="$_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="param" description="respect windows directory separator" type="boolean" variable="$ds">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="153" name="return" description="normalized path" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$_path</name>
          <default/>
          <type/>
        </argument>
        <argument line="160">
          <name>$ds</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="206" package="Smarty\TemplateResources">
        <name>buildFilepath</name>
        <full_name>buildFilepath</full_name>
        <docblock line="198">
          <description>build template filepath by traversing the template_dir array</description>
          <long-description/>
          <tag line="198" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="198" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="198" name="return" description="fully qualified filepath" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="198" name="throws" description="if default template handler is registered but not callable" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="206">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="206">
          <name>$_template</name>
          <default>null</default>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="354" package="Smarty\TemplateResources">
        <name>fileExists</name>
        <full_name>fileExists</full_name>
        <docblock line="347">
          <description>test is file exists and save timestamp</description>
          <long-description/>
          <tag line="347" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="347" name="param" description="file name" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="347" name="return" description="true if file exists" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="354">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="368" package="Smarty\TemplateResources">
        <name>getBasename</name>
        <full_name>getBasename</full_name>
        <docblock line="362">
          <description>Determine basename for compiled filename</description>
          <long-description/>
          <tag line="362" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="362" name="return" description="resource's basename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="380" package="Smarty\TemplateResources">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="373">
          <description>Load Resource Handler</description>
          <long-description/>
          <tag line="373" name="param" description="smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="373" name="param" description="name of the resource" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="373" name="return" description="Resource Handler" type="\Smarty_Resource">
            <type by_reference="false">\Smarty_Resource</type>
          </tag>
        </docblock>
        <argument line="380">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="380">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="469" package="Smarty\TemplateResources">
        <name>parseResourceName</name>
        <full_name>parseResourceName</full_name>
        <docblock line="459">
          <description>extract resource_type and resource_name from template_resource and config_resource</description>
          <long-description/>
          <tag line="459" name="note" description="&quot;C:/foo.tpl&quot; was forced to file resource up till Smarty 3.1.3 (including)."/>
          <tag line="459" name="param" description="template_resource or config_resource to parse" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="459" name="param" description="the default resource_type defined in $smarty" type="string" variable="$default_resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="459" name="param" description="&amp;$name            the parsed resource name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="459" name="param" description="&amp;$type            the parsed resource type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="459" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="469">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="469">
          <name>$default_resource</name>
          <default/>
          <type/>
        </argument>
        <argument line="469">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="469">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="498" package="Smarty\TemplateResources">
        <name>getUniqueTemplateName</name>
        <full_name>getUniqueTemplateName</full_name>
        <docblock line="491">
          <description>modify template_resource according to resource handlers specifications</description>
          <long-description/>
          <tag line="491" name="param" description="Smarty instance" type="\Smarty_Internal_template" variable="$template">
            <type by_reference="false">\Smarty_Internal_template</type>
          </tag>
          <tag line="491" name="param" description="template_resource to extracate resource handler and name of" type="string" variable="$template_resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="491" name="return" description="unique resource name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="498">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
        <argument line="498">
          <name>$template_resource</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="521" package="Smarty\TemplateResources">
        <name>source</name>
        <full_name>source</full_name>
        <docblock line="511">
          <description>initialize Source Object for given resource</description>
          <long-description>&lt;p&gt;Either [$_template] or [$smarty, $template_resource] must be specified&lt;/p&gt;</long-description>
          <tag line="511" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="511" name="param" description="smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="511" name="param" description="resource identifier" type="string" variable="$template_resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="511" name="return" description="Source Object" type="\Smarty_Template_Source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
        </docblock>
        <argument line="521">
          <name>$_template</name>
          <default>null</default>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="521">
          <name>$smarty</name>
          <default>null</default>
          <type>\Smarty</type>
        </argument>
        <argument line="521">
          <name>$template_resource</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="565" package="Smarty\TemplateResources">
        <name>config</name>
        <full_name>config</full_name>
        <docblock line="559">
          <description>initialize Config Source Object for given resource</description>
          <long-description/>
          <tag line="559" name="param" description="config object" type="\Smarty_Internal_Config" variable="$_config">
            <type by_reference="false">\Smarty_Internal_Config</type>
          </tag>
          <tag line="559" name="return" description="Source Object" type="\Smarty_Config_Source">
            <type by_reference="false">\Smarty_Config_Source</type>
          </tag>
        </docblock>
        <argument line="565">
          <name>$_config</name>
          <default/>
          <type>\Smarty_Internal_Config</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="615" package="Smarty\TemplateResources">
      <extends/>
      <name>Smarty_Template_Source</name>
      <full_name>\Smarty_Template_Source</full_name>
      <docblock line="601">
        <description>Smarty Resource Data Object</description>
        <long-description>&lt;p&gt;Meta Data Container for Template Files&lt;/p&gt;</long-description>
        <tag line="601" name="package" description="Smarty"/>
        <tag line="601" name="subpackage" description="TemplateResources"/>
        <tag line="601" name="author" description="Rodney Rehm"/>
        <tag line="601" name="property" description="Source Timestamp" type="integer" variable="$timestamp">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="601" name="property" description="Source Existence" type="boolean" variable="$exists">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="601" name="property" description="Extended Template reference" type="boolean" variable="$template">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="601" name="property" description="Source Content" type="string" variable="$content">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="public" line="621" namespace="global" package="Default">
        <name>$compiler_class</name>
        <default>null</default>
        <docblock line="617">
          <description>Name of the Class to compile this resource's contents with</description>
          <long-description/>
          <tag line="617" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="627" namespace="global" package="Default">
        <name>$template_lexer_class</name>
        <default>null</default>
        <docblock line="623">
          <description>Name of the Class to tokenize this resource's contents with</description>
          <long-description/>
          <tag line="623" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="633" namespace="global" package="Default">
        <name>$template_parser_class</name>
        <default>null</default>
        <docblock line="629">
          <description>Name of the Class to parse this resource's contents with</description>
          <long-description/>
          <tag line="629" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="639" namespace="global" package="Default">
        <name>$uid</name>
        <default>null</default>
        <docblock line="635">
          <description>Unique Template ID</description>
          <long-description/>
          <tag line="635" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="645" namespace="global" package="Default">
        <name>$resource</name>
        <default>null</default>
        <docblock line="641">
          <description>Template Resource (Smarty_Internal_Template::$template_resource)</description>
          <long-description/>
          <tag line="641" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="651" namespace="global" package="Default">
        <name>$type</name>
        <default>null</default>
        <docblock line="647">
          <description>Resource Type</description>
          <long-description/>
          <tag line="647" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="657" namespace="global" package="Default">
        <name>$name</name>
        <default>null</default>
        <docblock line="653">
          <description>Resource Name</description>
          <long-description/>
          <tag line="653" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="663" namespace="global" package="Default">
        <name>$unique_resource</name>
        <default>null</default>
        <docblock line="659">
          <description>Unique Resource Name</description>
          <long-description/>
          <tag line="659" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="669" namespace="global" package="Default">
        <name>$filepath</name>
        <default>null</default>
        <docblock line="665">
          <description>Source Filepath</description>
          <long-description/>
          <tag line="665" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="675" namespace="global" package="Default">
        <name>$uncompiled</name>
        <default>null</default>
        <docblock line="671">
          <description>Source is bypassing compiler</description>
          <long-description/>
          <tag line="671" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="681" namespace="global" package="Default">
        <name>$recompiled</name>
        <default>null</default>
        <docblock line="677">
          <description>Source must be recompiled on every occasion</description>
          <long-description/>
          <tag line="677" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="687" namespace="global" package="Default">
        <name>$components</name>
        <default>null</default>
        <docblock line="683">
          <description>The Components an extended template is made of</description>
          <long-description/>
          <tag line="683" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="693" namespace="global" package="Default">
        <name>$handler</name>
        <default>null</default>
        <docblock line="689">
          <description>Resource Handler</description>
          <long-description/>
          <tag line="689" name="var" description="" type="\Smarty_Resource">
            <type by_reference="false">\Smarty_Resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="699" namespace="global" package="Default">
        <name>$smarty</name>
        <default>null</default>
        <docblock line="695">
          <description>Smarty instance</description>
          <long-description/>
          <tag line="695" name="var" description="" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="711" package="Smarty\TemplateResources">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="701">
          <description>create Source Object container</description>
          <long-description/>
          <tag line="701" name="param" description="Resource Handler this source object communicates with" type="\Smarty_Resource" variable="$handler">
            <type by_reference="false">\Smarty_Resource</type>
          </tag>
          <tag line="701" name="param" description="Smarty instance this source object belongs to" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="701" name="param" description="full template_resource" type="string" variable="$resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="701" name="param" description="type of resource" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="701" name="param" description="resource name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="701" name="param" description="unqiue resource name" type="string" variable="$unique_resource">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="711">
          <name>$handler</name>
          <default/>
          <type>\Smarty_Resource</type>
        </argument>
        <argument line="711">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="711">
          <name>$resource</name>
          <default/>
          <type/>
        </argument>
        <argument line="711">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="711">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="711">
          <name>$unique_resource</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="734" package="Smarty\TemplateResources">
        <name>getCompiled</name>
        <full_name>getCompiled</full_name>
        <docblock line="728">
          <description>get a Compiled Object of this source</description>
          <long-description/>
          <tag line="728" name="param" description="template objet" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="728" name="return" description="compiled object" type="\Smarty_Template_Compiled">
            <type by_reference="false">\Smarty_Template_Compiled</type>
          </tag>
        </docblock>
        <argument line="734">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="758" package="Smarty\TemplateResources">
        <name>renderUncompiled</name>
        <full_name>renderUncompiled</full_name>
        <docblock line="753">
          <description>render the uncompiled source</description>
          <long-description/>
          <tag line="753" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
        </docblock>
        <argument line="758">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="770" package="Smarty\TemplateResources">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="763">
          <description>&lt;&lt;magic&gt;&gt; Generic Setter.</description>
          <long-description/>
          <tag line="763" name="param" description="valid: timestamp, exists, content, template" type="string" variable="$property_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="763" name="param" description="new value (is not checked)" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="763" name="throws" description="if $property_name is not valid" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="770">
          <name>$property_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="770">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="794" package="Smarty\TemplateResources">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="787">
          <description>&lt;&lt;magic&gt;&gt; Generic getter.</description>
          <long-description/>
          <tag line="787" name="param" description="valid: timestamp, exists, content" type="string" variable="$property_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="787" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="787" name="throws" description="if $property_name is not valid" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="794">
          <name>$property_name</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="824" package="Smarty\TemplateResources">
      <extends/>
      <name>Smarty_Template_Compiled</name>
      <full_name>\Smarty_Template_Compiled</full_name>
      <docblock line="813">
        <description>Smarty Resource Data Object</description>
        <long-description>&lt;p&gt;Meta Data Container for Template Files&lt;/p&gt;</long-description>
        <tag line="813" name="package" description="Smarty"/>
        <tag line="813" name="subpackage" description="TemplateResources"/>
        <tag line="813" name="author" description="Rodney Rehm"/>
        <tag line="813" name="property" description="compiled content" type="string" variable="$content">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="public" line="830" namespace="global" package="Default">
        <name>$filepath</name>
        <default>null</default>
        <docblock line="826">
          <description>Compiled Filepath</description>
          <long-description/>
          <tag line="826" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="836" namespace="global" package="Default">
        <name>$timestamp</name>
        <default>null</default>
        <docblock line="832">
          <description>Compiled Timestamp</description>
          <long-description/>
          <tag line="832" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="842" namespace="global" package="Default">
        <name>$exists</name>
        <default>false</default>
        <docblock line="838">
          <description>Compiled Existence</description>
          <long-description/>
          <tag line="838" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="848" namespace="global" package="Default">
        <name>$loaded</name>
        <default>false</default>
        <docblock line="844">
          <description>Compiled Content Loaded</description>
          <long-description/>
          <tag line="844" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="854" namespace="global" package="Default">
        <name>$isCompiled</name>
        <default>false</default>
        <docblock line="850">
          <description>Template was compiled</description>
          <long-description/>
          <tag line="850" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="860" namespace="global" package="Default">
        <name>$source</name>
        <default>null</default>
        <docblock line="856">
          <description>Source Object</description>
          <long-description/>
          <tag line="856" name="var" description="" type="\Smarty_Template_Source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="868" namespace="global" package="Default">
        <name>$_properties</name>
        <default>null</default>
        <docblock line="862">
          <description>Metadata properties</description>
          <long-description>&lt;p&gt;populated by Smarty_Internal_Template::decodeProperties()&lt;/p&gt;</long-description>
          <tag line="862" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="875" package="Smarty\TemplateResources">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="870">
          <description>create Compiled Object container</description>
          <long-description/>
          <tag line="870" name="param" description="source object this compiled object belongs to" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
        </docblock>
        <argument line="875">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="453">try default_(template|config)_handler</todo>
      <todo line="501">optimize for Smarty's internal resource types</todo>
    </markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_section.php" hash="e1c2f6eaef3e70f257e3c2f4144cdefa" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Section</description>
      <long-description>&lt;p&gt;Compiles the {section} {sectionelse} {/section} tags&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Section</name>
      <full_name>\Smarty_Internal_Compile_Section</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Section Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('name', 'loop')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('name', 'loop')</default>
        <docblock line="27">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('start', 'step', 'max', 'show')</default>
        <docblock line="34">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="34" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="34" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="42">
          <description>Compiles code for the {section} tag</description>
          <long-description/>
          <tag line="42" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="42" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="146" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Sectionelse</name>
      <full_name>\Smarty_Internal_Compile_Sectionelse</full_name>
      <docblock line="140">
        <description>Smarty Internal Plugin Compile Sectionelse Class</description>
        <long-description/>
        <tag line="140" name="package" description="Smarty"/>
        <tag line="140" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="148">
          <description>Compiles code for the {sectionelse} tag</description>
          <long-description/>
          <tag line="148" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="148" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="148" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="155">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="174" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Sectionclose</name>
      <full_name>\Smarty_Internal_Compile_Sectionclose</full_name>
      <docblock line="168">
        <description>Smarty Internal Plugin Compile Sectionclose Class</description>
        <long-description/>
        <tag line="168" name="package" description="Smarty"/>
        <tag line="168" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="183" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="176">
          <description>Compiles code for the {/section} tag</description>
          <long-description/>
          <tag line="176" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="176" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="176" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="183">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_rdelim.php" hash="1aa219c137b831d707dca12981a104a3" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Rdelim</description>
      <long-description>&lt;p&gt;Compiles the {rdelim} tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Rdelim</name>
      <full_name>\Smarty_Internal_Compile_Rdelim</full_name>
      <docblock line="11">
        <description>Smarty Internal Plugin Compile Rdelim Class</description>
        <long-description/>
        <tag line="11" name="package" description="Smarty"/>
        <tag line="11" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="19">
          <description>Compiles code for the {rdelim} tag</description>
          <long-description>&lt;p&gt;This tag does output the right delimiter.&lt;/p&gt;</long-description>
          <tag line="19" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="19" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="19" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_private_modifier.php" hash="6e115aa8da3d80bc5d164f5ad3eab95a" package="Smarty\Compiler">
    <docblock line="3">
      <description>Smarty Internal Plugin Compile Modifier</description>
      <long-description>&lt;p&gt;Compiles code for modifier execution&lt;/p&gt;</long-description>
      <tag line="3" name="package" description="Smarty"/>
      <tag line="3" name="subpackage" description="Compiler"/>
      <tag line="3" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="19" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Private_Modifier</name>
      <full_name>\Smarty_Internal_Compile_Private_Modifier</full_name>
      <docblock line="13">
        <description>Smarty Internal Plugin Compile Modifier Class</description>
        <long-description/>
        <tag line="13" name="package" description="Smarty"/>
        <tag line="13" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="21">
          <description>Compiles code for modifier execution</description>
          <long-description/>
          <tag line="21" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="21" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="21" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="21" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_resource_custom.php" hash="7bb983177bb7592eaaf365008c099515" package="Smarty\TemplateResources">
    <docblock line="2">
      <description>Smarty Resource Plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="TemplateResources"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="18" package="Smarty\TemplateResources">
      <extends>\Smarty_Resource</extends>
      <name>Smarty_Resource_Custom</name>
      <full_name>\Smarty_Resource_Custom</full_name>
      <docblock line="10">
        <description>Smarty Resource Plugin</description>
        <long-description>&lt;p&gt;Wrapper Implementation for custom resource plugins&lt;/p&gt;</long-description>
        <tag line="10" name="package" description="Smarty"/>
        <tag line="10" name="subpackage" description="TemplateResources"/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="27" package="Smarty\TemplateResources">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="20">
          <description>fetch template and its modification time from data source</description>
          <long-description/>
          <tag line="20" name="param" description="template name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="param" description="&amp;$source template source" type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="param" description="&amp;$mtime  template modification timestamp (epoch)" type="integer" variable="$mtime">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="27">
          <name>$source</name>
          <default/>
          <type/>
        </argument>
        <argument line="27">
          <name>$mtime</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="38" package="Smarty\TemplateResources">
        <name>fetchTimestamp</name>
        <full_name>fetchTimestamp</full_name>
        <docblock line="29">
          <description>Fetch template's modification timestamp from data source</description>
          <long-description>&lt;p&gt;{@internal implementing this method is optional.
 Only implement it if modification times can be accessed faster than loading the complete template source.}}&lt;/p&gt;</long-description>
          <tag line="29" name="param" description="template name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="return" description="timestamp (epoch) the template was modified, or false if not found" type="integer|boolean">
            <type by_reference="false">integer</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Smarty\TemplateResources">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="43">
          <description>populate Source Object with meta data from Resource</description>
          <long-description/>
          <tag line="43" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="43" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="49">
          <name>$_template</name>
          <default>null</default>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Smarty\TemplateResources">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="66">
          <description>Load template's source into current template object</description>
          <long-description/>
          <tag line="66" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="66" name="return" description="template source" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="throws" description="if source cannot be loaded" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="89" package="Smarty\TemplateResources">
        <name>getBasename</name>
        <full_name>getBasename</full_name>
        <docblock line="83">
          <description>Determine basename for compiled filename</description>
          <long-description/>
          <tag line="83" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="83" name="return" description="resource's basename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_debug.php" hash="e2c5e2201036c07217518738d2404eb6" package="Smarty\Debug">
    <docblock line="2">
      <description>Smarty Internal Plugin Debug</description>
      <long-description>&lt;p&gt;Class to collect data for the Smarty Debugging Consol&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Debug"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Debug">
      <extends>\Smarty_Internal_Data</extends>
      <name>Smarty_Internal_Debug</name>
      <full_name>\Smarty_Internal_Debug</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Debug Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Debug"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="25" namespace="global" package="Default">
        <name>$template_data</name>
        <default>array()</default>
        <docblock line="20">
          <description>template data</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="32" namespace="global" package="Default">
        <name>$ignore_uid</name>
        <default>array()</default>
        <docblock line="27">
          <description>List of uid's which shall be ignored</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="39" package="Smarty\Debug">
        <name>ignore</name>
        <full_name>ignore</full_name>
        <docblock line="34">
          <description>Ignore template</description>
          <long-description/>
          <tag line="34" name="param" description="" type="object" variable="$template">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="53" package="Smarty\Debug">
        <name>start_compile</name>
        <full_name>start_compile</full_name>
        <docblock line="48">
          <description>Start logging of compile time</description>
          <long-description/>
          <tag line="48" name="param" description="" type="object" variable="$template">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="82" package="Smarty\Debug">
        <name>end_compile</name>
        <full_name>end_compile</full_name>
        <docblock line="77">
          <description>End logging of compile time</description>
          <long-description/>
          <tag line="77" name="param" description="" type="object" variable="$template">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="101" package="Smarty\Debug">
        <name>start_render</name>
        <full_name>start_render</full_name>
        <docblock line="96">
          <description>Start logging of render time</description>
          <long-description/>
          <tag line="96" name="param" description="" type="object" variable="$template">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="112" package="Smarty\Debug">
        <name>end_render</name>
        <full_name>end_render</full_name>
        <docblock line="107">
          <description>End logging of compile time</description>
          <long-description/>
          <tag line="107" name="param" description="" type="object" variable="$template">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="123" package="Smarty\Debug">
        <name>start_cache</name>
        <full_name>start_cache</full_name>
        <docblock line="118">
          <description>Start logging of cache time</description>
          <long-description/>
          <tag line="118" name="param" description="cached template" type="object" variable="$template">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="134" package="Smarty\Debug">
        <name>end_cache</name>
        <full_name>end_cache</full_name>
        <docblock line="129">
          <description>End logging of cache time</description>
          <long-description/>
          <tag line="129" name="param" description="cached template" type="object" variable="$template">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="145" package="Smarty\Debug">
        <name>display_debug</name>
        <full_name>display_debug</full_name>
        <docblock line="140">
          <description>Opens a window for the Smarty Debugging Consol and display the data</description>
          <long-description/>
          <tag line="140" name="param" description="object to debug" type="\Smarty_Internal_Template|\Smarty" variable="$obj">
            <type by_reference="false">\Smarty_Internal_Template</type>
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$obj</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="192" package="Smarty\Debug">
        <name>get_debug_vars</name>
        <full_name>get_debug_vars</full_name>
        <docblock line="186">
          <description>Recursively gets variables from all template/data scopes</description>
          <long-description/>
          <tag line="186" name="param" description="object to debug" type="\Smarty_Internal_Template|\Smarty_Data" variable="$obj">
            <type by_reference="false">\Smarty_Internal_Template</type>
            <type by_reference="false">\Smarty_Data</type>
          </tag>
          <tag line="186" name="return" description="" type="\StdClass">
            <type by_reference="false">\StdClass</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$obj</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="230" package="Smarty\Debug">
        <name>get_key</name>
        <full_name>get_key</full_name>
        <docblock line="224">
          <description>Return key into $template_data for template</description>
          <long-description/>
          <tag line="224" name="param" description="template object" type="object" variable="$template">
            <type by_reference="false">object</type>
          </tag>
          <tag line="224" name="return" description="key into $template_data" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="230">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_config.php" hash="67ba0e2b63fa9f26567de1c27e2996f5" package="Smarty\Config">
    <docblock line="2">
      <description>Smarty Internal Plugin Config</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Config"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <include line="234" type="Include" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="22" package="Smarty\Config">
      <extends/>
      <name>Smarty_Internal_Config</name>
      <full_name>\Smarty_Internal_Config</full_name>
      <docblock line="10">
        <description>Smarty Internal Plugin Config</description>
        <long-description>&lt;p&gt;Main class for config variables&lt;/p&gt;</long-description>
        <tag line="10" name="package" description="Smarty"/>
        <tag line="10" name="subpackage" description="Config"/>
        <tag line="10" name="property" description="" type="\Smarty_Config_Source" variable="$source">
          <type by_reference="false">\Smarty_Config_Source</type>
        </tag>
        <tag line="10" name="property" description="" type="\Smarty_Config_Compiled" variable="$compiled">
          <type by_reference="false">\Smarty_Config_Compiled</type>
        </tag>
        <tag line="10" name="ignore" description=""/>
      </docblock>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$smarty</name>
        <default>null</default>
        <docblock line="24">
          <description>Samrty instance</description>
          <long-description/>
          <tag line="24" name="var" description="object" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="35" namespace="global" package="Default">
        <name>$data</name>
        <default>null</default>
        <docblock line="30">
          <description>Object of config var storage</description>
          <long-description/>
          <tag line="30" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$config_resource</name>
        <default>null</default>
        <docblock line="36">
          <description>Config resource</description>
          <long-description/>
          <tag line="36" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="46" namespace="global" package="Default">
        <name>$compiled_config</name>
        <default>null</default>
        <docblock line="41">
          <description>Compiled config file</description>
          <long-description/>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="52" namespace="global" package="Default">
        <name>$compiled_filepath</name>
        <default>null</default>
        <docblock line="47">
          <description>filepath of compiled config file</description>
          <long-description/>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="58" namespace="global" package="Default">
        <name>$compiled_timestamp</name>
        <default>null</default>
        <docblock line="53">
          <description>Filemtime of compiled config Filemtime</description>
          <long-description/>
          <tag line="53" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="63" namespace="global" package="Default">
        <name>$mustCompile</name>
        <default>null</default>
        <docblock line="59">
          <description>flag if compiled config file is invalid and must be (re)compiled</description>
          <long-description/>
          <tag line="59" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="69" namespace="global" package="Default">
        <name>$compiler_object</name>
        <default>null</default>
        <docblock line="64">
          <description>Config file compiler object</description>
          <long-description/>
          <tag line="64" name="var" description="object" type="\Smarty_Internal_Config_File_Compiler">
            <type by_reference="false">\Smarty_Internal_Config_File_Compiler</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="Smarty\Config">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="71">
          <description>Constructor of config file object</description>
          <long-description/>
          <tag line="71" name="param" description="config file resource name" type="string" variable="$config_resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="Smarty instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="71" name="param" description="object for config vars storage" type="object" variable="$data">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$config_resource</name>
          <default/>
          <type/>
        </argument>
        <argument line="78">
          <name>$smarty</name>
          <default/>
          <type/>
        </argument>
        <argument line="78">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="Smarty\Config">
        <name>getCompiledFilepath</name>
        <full_name>getCompiledFilepath</full_name>
        <docblock line="85">
          <description>Returns the compiled  filepath</description>
          <long-description/>
          <tag line="85" name="return" description="the compiled filepath" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="Smarty\Config">
        <name>buildCompiledFilepath</name>
        <full_name>buildCompiledFilepath</full_name>
        <docblock line="97">
          <description>Get file path.</description>
          <long-description/>
          <tag line="97" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="Smarty\Config">
        <name>getCompiledTimestamp</name>
        <full_name>getCompiledTimestamp</full_name>
        <docblock line="124">
          <description>Returns the timpestamp of the compiled file</description>
          <long-description/>
          <tag line="124" name="return" description="the file timestamp" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="143" package="Smarty\Config">
        <name>mustCompile</name>
        <full_name>mustCompile</full_name>
        <docblock line="136">
          <description>Returns if the current config file must be compiled</description>
          <long-description>&lt;p&gt;It does compare the timestamps of config source and the compiled config and checks the force compile configuration&lt;/p&gt;</long-description>
          <tag line="136" name="return" description="true if the file must be compiled" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="157" package="Smarty\Config">
        <name>getCompiledConfig</name>
        <full_name>getCompiledConfig</full_name>
        <docblock line="150">
          <description>Returns the compiled config file</description>
          <long-description>&lt;p&gt;It checks if the config file must be compiled or just read the compiled version&lt;/p&gt;</long-description>
          <tag line="150" name="return" description="the compiled config file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="176" package="Smarty\Config">
        <name>compileConfigSource</name>
        <full_name>compileConfigSource</full_name>
        <docblock line="171">
          <description>Compiles the config files</description>
          <long-description/>
          <tag line="171" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="210" package="Smarty\Config">
        <name>loadConfigVars</name>
        <full_name>loadConfigVars</full_name>
        <docblock line="204">
          <description>load config variables</description>
          <long-description/>
          <tag line="204" name="param" description="array of section names, single section or null" type="mixed" variable="$sections">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="204" name="param" description="global,parent or local" type="object" variable="$scope">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="210">
          <name>$sections</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="210">
          <name>$scope</name>
          <default>'local'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="Smarty\Config">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="259">
          <description>set Smarty property in template context</description>
          <long-description/>
          <tag line="259" name="param" description="property name" type="string" variable="$property_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="259" name="param" description="value" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="259" name="throws" description="if $property_name is not valid" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$property_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="266">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="285" package="Smarty\Config">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="279">
          <description>get Smarty property in template context</description>
          <long-description/>
          <tag line="279" name="param" description="property name" type="string" variable="$property_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="279" name="throws" description="if $property_name is not valid" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$property_name</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_call.php" hash="c55090a0db63e16c4e2e582014b10a33" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Function_Call</description>
      <long-description>&lt;p&gt;Compiles the calls of user defined tags defined by {function}&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Call</name>
      <full_name>\Smarty_Internal_Compile_Call</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Function_Call Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('name')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('name')</default>
        <docblock line="27">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('_any')</default>
        <docblock line="34">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="34" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="34" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="42">
          <description>Compiles the calls of user defined tags defined by {function}</description>
          <long-description/>
          <tag line="42" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="42" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <notice line="42" code="50013">Parameter $parameter could not be found in compile()</notice>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_config_source.php" hash="20ffbb78ad3e038ddfb588e6c7e55a99" package="Smarty\TemplateResources">
    <docblock line="2">
      <description>Smarty Internal Plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="TemplateResources"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="22" package="Smarty\TemplateResources">
      <extends>\Smarty_Template_Source</extends>
      <name>Smarty_Config_Source</name>
      <full_name>\Smarty_Config_Source</full_name>
      <docblock line="9">
        <description>Smarty Resource Data Object</description>
        <long-description>&lt;p&gt;Meta Data Container for Config Files&lt;/p&gt;</long-description>
        <tag line="9" name="package" description="Smarty"/>
        <tag line="9" name="subpackage" description="TemplateResources"/>
        <tag line="9" name="author" description="Rodney Rehm"/>
        <tag line="9" name="property" description="" type="string" variable="$content">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property" description="" type="int" variable="$timestamp">
          <type by_reference="false">int</type>
        </tag>
        <tag line="9" name="property" description="" type="bool" variable="$exists">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Smarty\TemplateResources">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description>create Config Object container</description>
          <long-description/>
          <tag line="24" name="param" description="Resource Handler this source object communicates with" type="\Smarty_Resource" variable="$handler">
            <type by_reference="false">\Smarty_Resource</type>
          </tag>
          <tag line="24" name="param" description="Smarty instance this source object belongs to" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="24" name="param" description="full config_resource" type="string" variable="$resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="param" description="type of resource" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="param" description="resource name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="param" description="unqiue resource name" type="string" variable="$unique_resource">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$handler</name>
          <default/>
          <type>\Smarty_Resource</type>
        </argument>
        <argument line="34">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="34">
          <name>$resource</name>
          <default/>
          <type/>
        </argument>
        <argument line="34">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="34">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="34">
          <name>$unique_resource</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Smarty\TemplateResources">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="50">
          <description>&lt;&lt;magic&gt;&gt; Generic setter.</description>
          <long-description/>
          <tag line="50" name="param" description="valid: content, timestamp, exists" type="string" variable="$property_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="param" description="newly assigned value (not check for correct type)" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="50" name="throws" description="when the given property name is not valid" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$property_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="57">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="Smarty\TemplateResources">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="71">
          <description>&lt;&lt;magic&gt;&gt; Generic getter.</description>
          <long-description/>
          <tag line="71" name="param" description="valid: content, timestamp, exists" type="string" variable="$property_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="throws" description="when the given property name is not valid" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$property_name</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_templatebase.php" hash="31ff9e7b9e2cf39c45f0973ca3600b5d" package="Smarty\Template">
    <docblock line="2">
      <description>Smarty Internal Plugin Smarty Template  Base</description>
      <long-description>&lt;p&gt;This file contains the basic shared methodes for template handling&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Template"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <include line="160" type="Include" package="Default">
      <name/>
    </include>
    <class final="false" abstract="true" namespace="global" line="18" package="Smarty\Template">
      <extends>\Smarty_Internal_Data</extends>
      <name>Smarty_Internal_TemplateBase</name>
      <full_name>\Smarty_Internal_TemplateBase</full_name>
      <docblock line="12">
        <description>Class with shared template methodes</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Template"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Smarty\Template">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="20">
          <description>fetches a rendered Smarty template</description>
          <long-description/>
          <tag line="20" name="param" description="the resource handle of the template file or template object" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="param" description="cache id to be used with this template" type="mixed" variable="$cache_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="20" name="param" description="compile id to be used with this template" type="mixed" variable="$compile_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="20" name="param" description="next higher level of Smarty variables" type="object" variable="$parent">
            <type by_reference="false">object</type>
          </tag>
          <tag line="20" name="param" description="true: display, false: fetch" type="bool" variable="$display">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="20" name="param" description="if true parent template variables merged in to local scope" type="bool" variable="$merge_tpl_vars">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="20" name="param" description="if true do not run output filter" type="bool" variable="$no_output_filter">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="20" name="return" description="rendered template output" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$template</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="32">
          <name>$cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="32">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="32">
          <name>$parent</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="32">
          <name>$display</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="32">
          <name>$merge_tpl_vars</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="32">
          <name>$no_output_filter</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="374" package="Smarty\Template">
        <name>display</name>
        <full_name>display</full_name>
        <docblock line="366">
          <description>displays a Smarty template</description>
          <long-description/>
          <tag line="366" name="param" description="the resource handle of the template file or template object" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="366" name="param" description="cache id to be used with this template" type="mixed" variable="$cache_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="366" name="param" description="compile id to be used with this template" type="mixed" variable="$compile_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="366" name="param" description="next higher level of Smarty variables" type="object" variable="$parent">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="374">
          <name>$template</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="374">
          <name>$cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="374">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="374">
          <name>$parent</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="389" package="Smarty\Template">
        <name>isCached</name>
        <full_name>isCached</full_name>
        <docblock line="380">
          <description>test if cache is valid</description>
          <long-description/>
          <tag line="380" name="param" description="the resource handle of the template file or template object" type="string|object" variable="$template">
            <type by_reference="false">string</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="380" name="param" description="cache id to be used with this template" type="mixed" variable="$cache_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="380" name="param" description="compile id to be used with this template" type="mixed" variable="$compile_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="380" name="param" description="next higher level of Smarty variables" type="object" variable="$parent">
            <type by_reference="false">object</type>
          </tag>
          <tag line="380" name="return" description="cache status" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="389">
          <name>$template</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="389">
          <name>$cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="389">
          <name>$compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="389">
          <name>$parent</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="410" package="Smarty\Template">
        <name>createData</name>
        <full_name>createData</full_name>
        <docblock line="404">
          <description>creates a data object</description>
          <long-description/>
          <tag line="404" name="param" description="next higher level of Smarty variables" type="object" variable="$parent">
            <type by_reference="false">object</type>
          </tag>
          <tag line="404" name="returns" description="Smarty_Data data object"/>
        </docblock>
        <argument line="410">
          <name>$parent</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="426" package="Smarty\Template">
        <name>registerPlugin</name>
        <full_name>registerPlugin</full_name>
        <docblock line="415">
          <description>Registers plugin to be used in templates</description>
          <long-description/>
          <tag line="415" name="param" description="plugin type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="415" name="param" description="name of template tag" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="415" name="param" description="PHP callback to register" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="415" name="param" description="if true (default) this fuction is cachable" type="boolean" variable="$cacheable">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="415" name="param" description="caching attributes if any" type="array" variable="$cache_attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="415" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
          <tag line="415" name="throws" description="when the plugin tag is invalid" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="426">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="426">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="426">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
        <argument line="426">
          <name>$cacheable</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="426">
          <name>$cache_attr</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="446" package="Smarty\Template">
        <name>unregisterPlugin</name>
        <full_name>unregisterPlugin</full_name>
        <docblock line="439">
          <description>Unregister Plugin</description>
          <long-description/>
          <tag line="439" name="param" description="of plugin" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="439" name="param" description="name of plugin" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="439" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
        </docblock>
        <argument line="446">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="446">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="462" package="Smarty\Template">
        <name>registerResource</name>
        <full_name>registerResource</full_name>
        <docblock line="455">
          <description>Registers a resource to fetch a template</description>
          <long-description/>
          <tag line="455" name="param" description="name of resource type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="455" name="param" description="or instance of Smarty_Resource, or array of callbacks to handle resource (deprecated)" type="\Smarty_Resource|array" variable="$callback">
            <type by_reference="false">\Smarty_Resource</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="455" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
        </docblock>
        <argument line="462">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="462">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="475" package="Smarty\Template">
        <name>unregisterResource</name>
        <full_name>unregisterResource</full_name>
        <docblock line="469">
          <description>Unregisters a resource</description>
          <long-description/>
          <tag line="469" name="param" description="name of resource type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="469" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
        </docblock>
        <argument line="475">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="491" package="Smarty\Template">
        <name>registerCacheResource</name>
        <full_name>registerCacheResource</full_name>
        <docblock line="484">
          <description>Registers a cache resource to cache a template's output</description>
          <long-description/>
          <tag line="484" name="param" description="name of cache resource type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="484" name="param" description="instance of Smarty_CacheResource to handle output caching" type="\Smarty_CacheResource" variable="$callback">
            <type by_reference="false">\Smarty_CacheResource</type>
          </tag>
          <tag line="484" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
        </docblock>
        <argument line="491">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="491">
          <name>$callback</name>
          <default/>
          <type>\Smarty_CacheResource</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="504" package="Smarty\Template">
        <name>unregisterCacheResource</name>
        <full_name>unregisterCacheResource</full_name>
        <docblock line="498">
          <description>Unregisters a cache resource</description>
          <long-description/>
          <tag line="498" name="param" description="name of cache resource type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="498" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
        </docblock>
        <argument line="504">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="525" package="Smarty\Template">
        <name>registerObject</name>
        <full_name>registerObject</full_name>
        <docblock line="513">
          <description>Registers object to be used in templates</description>
          <long-description/>
          <tag line="513" name="param" description="name of template object" type="string" variable="$object">
            <type by_reference="false">string</type>
          </tag>
          <tag line="513" name="param" description="the referenced PHP object to register" type="object" variable="$object_impl">
            <type by_reference="false">object</type>
          </tag>
          <tag line="513" name="param" description="list of allowed methods (empty = all)" type="array" variable="$allowed">
            <type by_reference="false">array</type>
          </tag>
          <tag line="513" name="param" description="smarty argument format, else traditional" type="boolean" variable="$smarty_args">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="513" name="param" description="list of block-methods" type="array" variable="$block_methods">
            <type by_reference="false">array</type>
          </tag>
          <tag line="513" name="param" description="list of methods that are block format" type="array" variable="$block_functs">
            <type by_reference="false">array</type>
          </tag>
          <tag line="513" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
          <tag line="513" name="throws" description="if any of the methods in $allowed or $block_methods are invalid" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="525">
          <name>$object_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="525">
          <name>$object_impl</name>
          <default/>
          <type/>
        </argument>
        <argument line="525">
          <name>$allowed</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="525">
          <name>$smarty_args</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="525">
          <name>$block_methods</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="557" package="Smarty\Template">
        <name>getRegisteredObject</name>
        <full_name>getRegisteredObject</full_name>
        <docblock line="550">
          <description>return a reference to a registered object</description>
          <long-description/>
          <tag line="550" name="param" description="object name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="550" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="550" name="throws" description="if no such object is found" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="557">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="575" package="Smarty\Template">
        <name>unregisterObject</name>
        <full_name>unregisterObject</full_name>
        <docblock line="569">
          <description>unregister an object</description>
          <long-description/>
          <tag line="569" name="param" description="object name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="569" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
        </docblock>
        <argument line="575">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="592" package="Smarty\Template">
        <name>registerClass</name>
        <full_name>registerClass</full_name>
        <docblock line="584">
          <description>Registers static classes to be used in templates</description>
          <long-description/>
          <tag line="584" name="param" description="name of template class" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="584" name="param" description="the referenced PHP class to register" type="string" variable="$class_impl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="584" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
          <tag line="584" name="throws" description="if $class_impl does not refer to an existing class" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="592">
          <name>$class_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="592">
          <name>$class_impl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="611" package="Smarty\Template">
        <name>registerDefaultPluginHandler</name>
        <full_name>registerDefaultPluginHandler</full_name>
        <docblock line="604">
          <description>Registers a default plugin handler</description>
          <long-description/>
          <tag line="604" name="param" description="class/method name" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="604" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
          <tag line="604" name="throws" description="if $callback is not callable" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="611">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="629" package="Smarty\Template">
        <name>registerDefaultTemplateHandler</name>
        <full_name>registerDefaultTemplateHandler</full_name>
        <docblock line="622">
          <description>Registers a default template handler</description>
          <long-description/>
          <tag line="622" name="param" description="class/method name" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="622" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
          <tag line="622" name="throws" description="if $callback is not callable" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="629">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="647" package="Smarty\Template">
        <name>registerDefaultConfigHandler</name>
        <full_name>registerDefaultConfigHandler</full_name>
        <docblock line="640">
          <description>Registers a default template handler</description>
          <long-description/>
          <tag line="640" name="param" description="class/method name" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="640" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
          <tag line="640" name="throws" description="if $callback is not callable" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="647">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="665" package="Smarty\Template">
        <name>registerFilter</name>
        <full_name>registerFilter</full_name>
        <docblock line="658">
          <description>Registers a filter function</description>
          <long-description/>
          <tag line="658" name="param" description="filter type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="658" name="param" description="" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="658" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
        </docblock>
        <argument line="665">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="665">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="679" package="Smarty\Template">
        <name>unregisterFilter</name>
        <full_name>unregisterFilter</full_name>
        <docblock line="672">
          <description>Unregisters a filter function</description>
          <long-description/>
          <tag line="672" name="param" description="filter type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="672" name="param" description="" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="672" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
        </docblock>
        <argument line="679">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="679">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="695" package="Smarty\Template">
        <name>_get_filter_name</name>
        <full_name>_get_filter_name</full_name>
        <docblock line="689">
          <description>Return internal filter name</description>
          <long-description/>
          <tag line="689" name="param" description="" type="callback" variable="$function_name">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="689" name="return" description="internal filter name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="695">
          <name>$function_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="714" package="Smarty\Template">
        <name>loadFilter</name>
        <full_name>loadFilter</full_name>
        <docblock line="707">
          <description>load a filter of specified type and name</description>
          <long-description/>
          <tag line="707" name="param" description="filter type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="707" name="param" description="filter name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="707" name="throws" description="if filter could not be loaded" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="714">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="714">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="738" package="Smarty\Template">
        <name>unloadFilter</name>
        <full_name>unloadFilter</full_name>
        <docblock line="731">
          <description>unload a filter of specified type and name</description>
          <long-description/>
          <tag line="731" name="param" description="filter type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="731" name="param" description="filter name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="731" name="return" description="current Smarty_Internal_Templatebase (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Templatebase">
            <type by_reference="false">\Smarty_Internal_Templatebase</type>
          </tag>
        </docblock>
        <argument line="738">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="738">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="754" package="Smarty\Template">
        <name>replaceCamelcase</name>
        <full_name>replaceCamelcase</full_name>
        <docblock line="748">
          <description>preg_replace callback to convert camelcase getter/setter to underscore property names</description>
          <long-description/>
          <tag line="748" name="param" description="match string" type="string" variable="$match">
            <type by_reference="false">string</type>
          </tag>
          <tag line="748" name="return" description="replacemant" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="754">
          <name>$match</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="765" package="Smarty\Template">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="759">
          <description>Handle unknown class methods</description>
          <long-description/>
          <tag line="759" name="param" description="unknown method-name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="759" name="param" description="argument array" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="765">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="765">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="513" code="50014">Name of argument $object_name does not match with the DocBlock's name $object in registerObject()</error>
      <notice line="513" code="50013">Parameter $object could not be found in registerObject()</notice>
      <notice line="513" code="50013">Parameter $block_functs could not be found in registerObject()</notice>
      <error line="584" code="50014">Name of argument $class_name does not match with the DocBlock's name $class in registerClass()</error>
      <notice line="584" code="50013">Parameter $class could not be found in registerClass()</notice>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_continue.php" hash="dc93cfc28e37182d62e7a51b62d6daef" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Continue</description>
      <long-description>&lt;p&gt;Compiles the {continue} tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Continue</name>
      <full_name>\Smarty_Internal_Compile_Continue</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Continue Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('levels')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('levels')</default>
        <docblock line="27">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="35">
          <description>Compiles code for the {continue} tag</description>
          <long-description/>
          <tag line="35" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="35" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="43">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="43">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_nocache_insert.php" hash="8d831f5e80dd36dd474592c4056afec4" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Nocache Insert</description>
      <long-description>&lt;p&gt;Compiles the {insert} tag into the cache file&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends/>
      <name>Smarty_Internal_Nocache_Insert</name>
      <full_name>\Smarty_Internal_Nocache_Insert</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Insert Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="30" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="20">
          <description>Compiles code for the {insert} tag into cache file</description>
          <long-description/>
          <tag line="20" name="param" description="insert function name" type="string" variable="$_function">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="param" description="array with parameter" type="array" variable="$_attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="20" name="param" description="script name to load or 'null'" type="string" variable="$_script">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="param" description="optional variable name" type="string" variable="$_assign">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$_function</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$_attr</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$_template</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$_script</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$_assign</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compilebase.php" hash="88e396cdfc95b5d1d3cc7a63c742e11c" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin CompileBase</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="16" package="Smarty\Compiler">
      <extends/>
      <name>Smarty_Internal_CompileBase</name>
      <full_name>\Smarty_Internal_CompileBase</full_name>
      <docblock line="10">
        <description>This class does extend all internal compile plugins</description>
        <long-description/>
        <tag line="10" name="package" description="Smarty"/>
        <tag line="10" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array()</default>
        <docblock line="18">
          <description>Array of names of required attribute required by tag</description>
          <long-description/>
          <tag line="18" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array()</default>
        <docblock line="24">
          <description>Array of names of optional attribute required by tag
use array('_any') if there is no restriction of attributes names</description>
          <long-description/>
          <tag line="24" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="36" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array()</default>
        <docblock line="31">
          <description>Shorttag attribute order defined by its names</description>
          <long-description/>
          <tag line="31" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="42" namespace="global" package="Default">
        <name>$option_flags</name>
        <default>array('nocache')</default>
        <docblock line="37">
          <description>Array of names of valid option flags</description>
          <long-description/>
          <tag line="37" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Smarty\Compiler">
        <name>getAttributes</name>
        <full_name>getAttributes</full_name>
        <docblock line="44">
          <description>This function checks if the attributes passed are valid</description>
          <long-description>&lt;p&gt;The attributes passed for the tag to compile are checked against the list of required and
optional attributes. Required attributes must be present. Optional attributes are check against
the corresponding list. The keyword '_any' specifies that any attribute will be accepted
as valid&lt;/p&gt;</long-description>
          <tag line="44" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="44" name="param" description="attributes applied to the tag" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="44" name="return" description="of mapped attributes for further processing" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="56">
          <name>$attributes</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="Smarty\Compiler">
        <name>openTag</name>
        <full_name>openTag</full_name>
        <docblock line="127">
          <description>Push opening tag name on stack</description>
          <long-description>&lt;p&gt;Optionally additional data can be saved on stack&lt;/p&gt;</long-description>
          <tag line="127" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="127" name="param" description="the opening tag's name" type="string" variable="$openTag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="optional data saved" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="136">
          <name>$openTag</name>
          <default/>
          <type/>
        </argument>
        <argument line="136">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="Smarty\Compiler">
        <name>closeTag</name>
        <full_name>closeTag</full_name>
        <docblock line="141">
          <description>Pop closing tag</description>
          <long-description>&lt;p&gt;Raise an error if this stack-top doesn't match with expected opening tags&lt;/p&gt;</long-description>
          <tag line="141" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="141" name="param" description="the expected opening tag names" type="array|string" variable="$expectedTag">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="return" description="any type the opening tag's name or saved data" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="150">
          <name>$expectedTag</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_configfilelexer.php" hash="096be2512663763d5f5097f6c813c4f1" package="Smarty\Config">
    <docblock line="2">
      <description>Smarty Internal Plugin Configfilelexer</description>
      <long-description>&lt;p&gt;This is the lexer to break the config file source into tokens&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Config"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends/>
      <name>Smarty_Internal_Configfilelexer</name>
      <full_name>\Smarty_Internal_Configfilelexer</full_name>
      <docblock line="10">
        <description>Smarty Internal Plugin Configfilelexer</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="162" package="Default">
        <name>START</name>
        <full_name>START</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="274" package="Default">
        <name>VALUE</name>
        <full_name>VALUE</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="395" package="Default">
        <name>NAKED_STRING_VALUE</name>
        <full_name>NAKED_STRING_VALUE</full_name>
        <value>3</value>
      </constant>
      <constant namespace="global" line="464" package="Default">
        <name>COMMENT</name>
        <full_name>COMMENT</full_name>
        <value>4</value>
      </constant>
      <constant namespace="global" line="542" package="Default">
        <name>SECTION</name>
        <full_name>SECTION</full_name>
        <value>5</value>
      </constant>
      <constant namespace="global" line="614" package="Default">
        <name>TRIPPLE</name>
        <full_name>TRIPPLE</full_name>
        <value>6</value>
      </constant>
      <property final="false" static="false" visibility="public" line="16" namespace="global" package="Default">
        <name>$data</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$counter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$token</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$value</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$node</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$line</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="22" namespace="global" package="Default">
        <name>$state</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$yyTraceFILE</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$yyTracePrompt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$state_name</name>
        <default>array(1 =&gt; 'START', 2 =&gt; 'VALUE', 3 =&gt; 'NAKED_STRING_VALUE', 4 =&gt; 'COMMENT', 5 =&gt; 'SECTION', 6 =&gt; 'TRIPPLE')</default>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$smarty_token_names</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="55" namespace="global" package="Default">
        <name>$_yy_state</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="global" package="Default">
        <name>$_yy_stack</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="30">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$smarty</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="40" package="Default">
        <name>instance</name>
        <full_name>instance</full_name>
        <argument line="40">
          <name>$new_instance</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Default">
        <name>PrintTrace</name>
        <full_name>PrintTrace</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Default">
        <name>yylex</name>
        <full_name>yylex</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="Default">
        <name>yypushstate</name>
        <full_name>yypushstate</full_name>
        <argument line="63">
          <name>$state</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="Default">
        <name>yypopstate</name>
        <full_name>yypopstate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Default">
        <name>yybegin</name>
        <full_name>yybegin</full_name>
        <argument line="87">
          <name>$state</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="Default">
        <name>yylex1</name>
        <full_name>yylex1</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="Default">
        <name>yy_r1_1</name>
        <full_name>yy_r1_1</full_name>
        <argument line="163">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="169" package="Default">
        <name>yy_r1_2</name>
        <full_name>yy_r1_2</full_name>
        <argument line="169">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="Default">
        <name>yy_r1_3</name>
        <full_name>yy_r1_3</full_name>
        <argument line="175">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="180" package="Default">
        <name>yy_r1_4</name>
        <full_name>yy_r1_4</full_name>
        <argument line="180">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="186" package="Default">
        <name>yy_r1_5</name>
        <full_name>yy_r1_5</full_name>
        <argument line="186">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="191" package="Default">
        <name>yy_r1_6</name>
        <full_name>yy_r1_6</full_name>
        <argument line="191">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="196" package="Default">
        <name>yy_r1_7</name>
        <full_name>yy_r1_7</full_name>
        <argument line="196">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="Default">
        <name>yy_r1_8</name>
        <full_name>yy_r1_8</full_name>
        <argument line="201">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="209" package="Default">
        <name>yylex2</name>
        <full_name>yylex2</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="275" package="Default">
        <name>yy_r2_1</name>
        <full_name>yy_r2_1</full_name>
        <argument line="275">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="280" package="Default">
        <name>yy_r2_2</name>
        <full_name>yy_r2_2</full_name>
        <argument line="280">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="286" package="Default">
        <name>yy_r2_3</name>
        <full_name>yy_r2_3</full_name>
        <argument line="286">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="292" package="Default">
        <name>yy_r2_4</name>
        <full_name>yy_r2_4</full_name>
        <argument line="292">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="298" package="Default">
        <name>yy_r2_5</name>
        <full_name>yy_r2_5</full_name>
        <argument line="298">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="304" package="Default">
        <name>yy_r2_6</name>
        <full_name>yy_r2_6</full_name>
        <argument line="304">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="310" package="Default">
        <name>yy_r2_7</name>
        <full_name>yy_r2_7</full_name>
        <argument line="310">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="322" package="Default">
        <name>yy_r2_8</name>
        <full_name>yy_r2_8</full_name>
        <argument line="322">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="328" package="Default">
        <name>yy_r2_9</name>
        <full_name>yy_r2_9</full_name>
        <argument line="328">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="338" package="Default">
        <name>yylex3</name>
        <full_name>yylex3</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="396" package="Default">
        <name>yy_r3_1</name>
        <full_name>yy_r3_1</full_name>
        <argument line="396">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="405" package="Default">
        <name>yylex4</name>
        <full_name>yylex4</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="465" package="Default">
        <name>yy_r4_1</name>
        <full_name>yy_r4_1</full_name>
        <argument line="465">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="470" package="Default">
        <name>yy_r4_2</name>
        <full_name>yy_r4_2</full_name>
        <argument line="470">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="475" package="Default">
        <name>yy_r4_3</name>
        <full_name>yy_r4_3</full_name>
        <argument line="475">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="484" package="Default">
        <name>yylex5</name>
        <full_name>yylex5</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="543" package="Default">
        <name>yy_r5_1</name>
        <full_name>yy_r5_1</full_name>
        <argument line="543">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="548" package="Default">
        <name>yy_r5_2</name>
        <full_name>yy_r5_2</full_name>
        <argument line="548">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="556" package="Default">
        <name>yylex6</name>
        <full_name>yylex6</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="615" package="Default">
        <name>yy_r6_1</name>
        <full_name>yy_r6_1</full_name>
        <argument line="615">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="622" package="Default">
        <name>yy_r6_2</name>
        <full_name>yy_r6_2</full_name>
        <argument line="622">
          <name>$yy_subpatterns</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="16" code="50018">No DocBlock was found for property $data</error>
      <error line="17" code="50018">No DocBlock was found for property $counter</error>
      <error line="18" code="50018">No DocBlock was found for property $token</error>
      <error line="19" code="50018">No DocBlock was found for property $value</error>
      <error line="20" code="50018">No DocBlock was found for property $node</error>
      <error line="21" code="50018">No DocBlock was found for property $line</error>
      <error line="22" code="50018">No DocBlock was found for property $state</error>
      <error line="23" code="50018">No DocBlock was found for property $yyTraceFILE</error>
      <error line="24" code="50018">No DocBlock was found for property $yyTracePrompt</error>
      <error line="25" code="50018">No DocBlock was found for property $state_name</error>
      <error line="26" code="50018">No DocBlock was found for property $smarty_token_names</error>
      <error line="55" code="50018">No DocBlock was found for property $_yy_state</error>
      <error line="56" code="50018">No DocBlock was found for property $_yy_stack</error>
      <error line="30" code="50010">No DocBlock was found for method __construct()</error>
      <error line="40" code="50010">No DocBlock was found for method instance()</error>
      <error line="47" code="50010">No DocBlock was found for method PrintTrace()</error>
      <error line="58" code="50010">No DocBlock was found for method yylex()</error>
      <error line="63" code="50010">No DocBlock was found for method yypushstate()</error>
      <error line="75" code="50010">No DocBlock was found for method yypopstate()</error>
      <error line="87" code="50010">No DocBlock was found for method yybegin()</error>
      <error line="98" code="50010">No DocBlock was found for method yylex1()</error>
      <error line="163" code="50010">No DocBlock was found for method yy_r1_1()</error>
      <error line="169" code="50010">No DocBlock was found for method yy_r1_2()</error>
      <error line="175" code="50010">No DocBlock was found for method yy_r1_3()</error>
      <error line="180" code="50010">No DocBlock was found for method yy_r1_4()</error>
      <error line="186" code="50010">No DocBlock was found for method yy_r1_5()</error>
      <error line="191" code="50010">No DocBlock was found for method yy_r1_6()</error>
      <error line="196" code="50010">No DocBlock was found for method yy_r1_7()</error>
      <error line="201" code="50010">No DocBlock was found for method yy_r1_8()</error>
      <error line="209" code="50010">No DocBlock was found for method yylex2()</error>
      <error line="275" code="50010">No DocBlock was found for method yy_r2_1()</error>
      <error line="280" code="50010">No DocBlock was found for method yy_r2_2()</error>
      <error line="286" code="50010">No DocBlock was found for method yy_r2_3()</error>
      <error line="292" code="50010">No DocBlock was found for method yy_r2_4()</error>
      <error line="298" code="50010">No DocBlock was found for method yy_r2_5()</error>
      <error line="304" code="50010">No DocBlock was found for method yy_r2_6()</error>
      <error line="310" code="50010">No DocBlock was found for method yy_r2_7()</error>
      <error line="322" code="50010">No DocBlock was found for method yy_r2_8()</error>
      <error line="328" code="50010">No DocBlock was found for method yy_r2_9()</error>
      <error line="338" code="50010">No DocBlock was found for method yylex3()</error>
      <error line="396" code="50010">No DocBlock was found for method yy_r3_1()</error>
      <error line="405" code="50010">No DocBlock was found for method yylex4()</error>
      <error line="465" code="50010">No DocBlock was found for method yy_r4_1()</error>
      <error line="470" code="50010">No DocBlock was found for method yy_r4_2()</error>
      <error line="475" code="50010">No DocBlock was found for method yy_r4_3()</error>
      <error line="484" code="50010">No DocBlock was found for method yylex5()</error>
      <error line="543" code="50010">No DocBlock was found for method yy_r5_1()</error>
      <error line="548" code="50010">No DocBlock was found for method yy_r5_2()</error>
      <error line="556" code="50010">No DocBlock was found for method yylex6()</error>
      <error line="615" code="50010">No DocBlock was found for method yy_r6_1()</error>
      <error line="622" code="50010">No DocBlock was found for method yy_r6_2()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_resource_file.php" hash="919953d38f6c22da9cb7503eb5f966f8" package="Smarty\TemplateResources">
    <docblock line="2">
      <description>Smarty Internal Plugin Resource File</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="TemplateResources"/>
      <tag line="2" name="author" description="Uwe Tews"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="19" package="Smarty\TemplateResources">
      <extends>\Smarty_Resource</extends>
      <name>Smarty_Internal_Resource_File</name>
      <full_name>\Smarty_Internal_Resource_File</full_name>
      <docblock line="11">
        <description>Smarty Internal Plugin Resource File</description>
        <long-description>&lt;p&gt;Implements the file system as resource for Smarty templates&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="Smarty"/>
        <tag line="11" name="subpackage" description="TemplateResources"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="Smarty\TemplateResources">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="21">
          <description>populate Source Object with meta data from Resource</description>
          <long-description/>
          <tag line="21" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="21" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="27">
          <name>$_template</name>
          <default>null</default>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Smarty\TemplateResources">
        <name>populateTimestamp</name>
        <full_name>populateTimestamp</full_name>
        <docblock line="44">
          <description>populate Source Object with timestamp and exists from Resource</description>
          <long-description/>
          <tag line="44" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="62" package="Smarty\TemplateResources">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="55">
          <description>Load template's source from file into current template object</description>
          <long-description/>
          <tag line="55" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="55" name="return" description="template source" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="throws" description="if source cannot be loaded" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Smarty\TemplateResources">
        <name>getBasename</name>
        <full_name>getBasename</full_name>
        <docblock line="73">
          <description>Determine basename for compiled filename</description>
          <long-description/>
          <tag line="73" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="73" name="return" description="resource's basename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_resource_uncompiled.php" hash="9bd4a04f13cdc560cee0900c5229205f" package="Smarty\TemplateResources">
    <docblock line="2">
      <description>Smarty Resource Plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="TemplateResources"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="18" package="Smarty\TemplateResources">
      <extends>\Smarty_Resource</extends>
      <name>Smarty_Resource_Uncompiled</name>
      <full_name>\Smarty_Resource_Uncompiled</full_name>
      <docblock line="10">
        <description>Smarty Resource Plugin</description>
        <long-description>&lt;p&gt;Base implementation for resource plugins that don't use the compiler&lt;/p&gt;</long-description>
        <tag line="10" name="package" description="Smarty"/>
        <tag line="10" name="subpackage" description="TemplateResources"/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="27" package="Smarty\TemplateResources">
        <name>renderUncompiled</name>
        <full_name>renderUncompiled</full_name>
        <docblock line="20">
          <description>Render and output the template (without using the compiler)</description>
          <long-description/>
          <tag line="20" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="20" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="20" name="throws" description="on failure" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="27">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Smarty\TemplateResources">
        <name>populateCompiledFilepath</name>
        <full_name>populateCompiledFilepath</full_name>
        <docblock line="29">
          <description>populate compiled object with compiled filepath</description>
          <long-description/>
          <tag line="29" name="param" description="compiled object" type="\Smarty_Template_Compiled" variable="$compiled">
            <type by_reference="false">\Smarty_Template_Compiled</type>
          </tag>
          <tag line="29" name="param" description="template object (is ignored)" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$compiled</name>
          <default/>
          <type>\Smarty_Template_Compiled</type>
        </argument>
        <argument line="35">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_private_object_block_function.php" hash="271fb78a874dfa9e18a15ab2c0fe102b" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Object Block Function</description>
      <long-description>&lt;p&gt;Compiles code for registered objects as block function&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Private_Object_Block_Function</name>
      <full_name>\Smarty_Internal_Compile_Private_Object_Block_Function</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Object Block Function Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('_any')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="28">
          <description>Compiles code for the execution of block plugin</description>
          <long-description/>
          <tag line="28" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="28" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="name of block object" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="name of method to call" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_cacheresource_file.php" hash="c56684a2f83f8c2ca6b018bf6a8f5070" package="Smarty\Cacher">
    <docblock line="2">
      <description>Smarty Internal Plugin CacheResource File</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Cacher"/>
      <tag line="2" name="author" description="Uwe Tews"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
    </docblock>
    <include line="91" type="Include" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="19" package="Smarty\Cacher">
      <extends>\Smarty_CacheResource</extends>
      <name>Smarty_Internal_CacheResource_File</name>
      <full_name>\Smarty_Internal_CacheResource_File</full_name>
      <docblock line="11">
        <description>This class does contain all necessary methods for the HTML cache on file system</description>
        <long-description>&lt;p&gt;Implements the file system as resource for the HTML cache Version ussing nocache inserts.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="Smarty"/>
        <tag line="11" name="subpackage" description="Cacher"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Smarty\Cacher">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="21">
          <description>populate Cached Object with meta data from Resource</description>
          <long-description/>
          <tag line="21" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="21" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="21" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
        <argument line="28">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="74" package="Smarty\Cacher">
        <name>populateTimestamp</name>
        <full_name>populateTimestamp</full_name>
        <docblock line="68">
          <description>populate Cached Object with timestamp and exists from Resource</description>
          <long-description/>
          <tag line="68" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Smarty\Cacher">
        <name>process</name>
        <full_name>process</full_name>
        <docblock line="80">
          <description>Read the cached template and process its header</description>
          <long-description/>
          <tag line="80" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="80" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="80" name="return" description="true or false if the cached content does not exist" type="\booelan">
            <type by_reference="false">\booelan</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="87">
          <name>$cached</name>
          <default>null</default>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="101" package="Smarty\Cacher">
        <name>writeCachedContent</name>
        <full_name>writeCachedContent</full_name>
        <docblock line="94">
          <description>Write the rendered template output to cache</description>
          <long-description/>
          <tag line="94" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="94" name="param" description="content to cache" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="return" description="success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="101">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="Smarty\Cacher">
        <name>clearAll</name>
        <full_name>clearAll</full_name>
        <docblock line="114">
          <description>Empty cache</description>
          <long-description/>
          <tag line="114" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="114" name="param" description="expiration time (number of seconds, not timestamp)" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="114" name="return" description="number of cache files deleted" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="121">
          <name>$exp_time</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="Smarty\Cacher">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="126">
          <description>Empty cache for a specific template</description>
          <long-description/>
          <tag line="126" name="param" description="template object" type="\Smarty" variable="$_template">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="126" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="expiration time (number of seconds, not timestamp)" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="126" name="return" description="number of cache files deleted" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="136">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="136">
          <name>$cache_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="136">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="136">
          <name>$exp_time</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="242" package="Smarty\Cacher">
        <name>hasLock</name>
        <full_name>hasLock</full_name>
        <docblock line="235">
          <description>Check is cache is locked for this template</description>
          <long-description/>
          <tag line="235" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="235" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="235" name="return" description="true or false if cache is locked" type="\booelan">
            <type by_reference="false">\booelan</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="242">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="260" package="Smarty\Cacher">
        <name>acquireLock</name>
        <full_name>acquireLock</full_name>
        <docblock line="254">
          <description>Lock cache for this template</description>
          <long-description/>
          <tag line="254" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="254" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="260">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="272" package="Smarty\Cacher">
        <name>releaseLock</name>
        <full_name>releaseLock</full_name>
        <docblock line="266">
          <description>Unlock cache for this template</description>
          <long-description/>
          <tag line="266" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="266" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="272">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="114" code="50014">Name of argument $smarty does not match with the DocBlock's name $_template in clearAll()</error>
      <error line="114" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $smarty in clearAll()</error>
      <notice line="114" code="50013">Parameter $_template could not be found in clearAll()</notice>
      <error line="126" code="50014">Name of argument $smarty does not match with the DocBlock's name $_template in clear()</error>
      <notice line="126" code="50013">Parameter $_template could not be found in clear()</notice>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_template.php" hash="cbfd376a1e64b8c72dfcc36922b0b90c" package="Smarty\Template">
    <docblock line="2">
      <description>Smarty Internal Plugin Template</description>
      <long-description>&lt;p&gt;This file contains the Smarty template engine&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Template"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <include line="675" type="Include" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="22" package="Smarty\Template">
      <extends>\Smarty_Internal_TemplateBase</extends>
      <name>Smarty_Internal_Template</name>
      <full_name>\Smarty_Internal_Template</full_name>
      <docblock line="12">
        <description>Main class with template data structures and methods</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Template"/>
        <tag line="12" name="property" description="" type="\Smarty_Template_Source" variable="$source">
          <type by_reference="false">\Smarty_Template_Source</type>
        </tag>
        <tag line="12" name="property" description="" type="\Smarty_Template_Compiled" variable="$compiled">
          <type by_reference="false">\Smarty_Template_Compiled</type>
        </tag>
        <tag line="12" name="property" description="" type="\Smarty_Template_Cached" variable="$cached">
          <type by_reference="false">\Smarty_Template_Cached</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$cache_id</name>
        <default>null</default>
        <docblock line="24">
          <description>cache_id</description>
          <long-description/>
          <tag line="24" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$compile_id</name>
        <default>null</default>
        <docblock line="29">
          <description>$compile_id</description>
          <long-description/>
          <tag line="29" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="global" package="Default">
        <name>$caching</name>
        <default>null</default>
        <docblock line="34">
          <description>caching enabled</description>
          <long-description/>
          <tag line="34" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="global" package="Default">
        <name>$cache_lifetime</name>
        <default>null</default>
        <docblock line="39">
          <description>cache lifetime in seconds</description>
          <long-description/>
          <tag line="39" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="48" namespace="global" package="Default">
        <name>$template_resource</name>
        <default>null</default>
        <docblock line="44">
          <description>Template resource</description>
          <long-description/>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="53" namespace="global" package="Default">
        <name>$mustCompile</name>
        <default>null</default>
        <docblock line="49">
          <description>flag if compiled template is invalid and must be (re)compiled</description>
          <long-description/>
          <tag line="49" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="58" namespace="global" package="Default">
        <name>$has_nocache_code</name>
        <default>false</default>
        <docblock line="54">
          <description>flag if template does contain nocache code sections</description>
          <long-description/>
          <tag line="54" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="63" namespace="global" package="Default">
        <name>$properties</name>
        <default>array('file_dependency' =&gt; array(), 'nocache_hash' =&gt; '', 'function' =&gt; array())</default>
        <docblock line="59">
          <description>special compiled and cached template properties</description>
          <long-description/>
          <tag line="59" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="70" namespace="global" package="Default">
        <name>$required_plugins</name>
        <default>array('compiled' =&gt; array(), 'nocache' =&gt; array())</default>
        <docblock line="66">
          <description>required plugins</description>
          <long-description/>
          <tag line="66" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="75" namespace="global" package="Default">
        <name>$smarty</name>
        <default>null</default>
        <docblock line="71">
          <description>Global smarty instance</description>
          <long-description/>
          <tag line="71" name="var" description="" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="80" namespace="global" package="Default">
        <name>$block_data</name>
        <default>array()</default>
        <docblock line="76">
          <description>blocks for template inheritance</description>
          <long-description/>
          <tag line="76" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="85" namespace="global" package="Default">
        <name>$variable_filters</name>
        <default>array()</default>
        <docblock line="81">
          <description>variable filters</description>
          <long-description/>
          <tag line="81" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="90" namespace="global" package="Default">
        <name>$used_tags</name>
        <default>array()</default>
        <docblock line="86">
          <description>optional log of tag/attributes</description>
          <long-description/>
          <tag line="86" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="95" namespace="global" package="Default">
        <name>$allow_relative_path</name>
        <default>false</default>
        <docblock line="91">
          <description>internal flag to allow relative path in child template blocks</description>
          <long-description/>
          <tag line="91" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="100" namespace="global" package="Default">
        <name>$_capture_stack</name>
        <default>array(0 =&gt; array())</default>
        <docblock line="96">
          <description>internal capture runtime stack</description>
          <long-description/>
          <tag line="96" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="116" package="Smarty\Template">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="102">
          <description>Create template data object</description>
          <long-description>&lt;p&gt;Some of the global Smarty settings copied to template scope
It load the required template resources and cacher plugins&lt;/p&gt;</long-description>
          <tag line="102" name="param" description="template resource string" type="string" variable="$template_resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="param" description="Smarty instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="102" name="param" description="back pointer to parent object with variables or null" type="\Smarty_Internal_Template" variable="$_parent">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="102" name="param" description="cache   id or null" type="mixed" variable="$_cache_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="102" name="param" description="compile id or null" type="mixed" variable="$_compile_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="102" name="param" description="use caching?" type="bool" variable="$_caching">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="102" name="param" description="cache life-time in seconds" type="int" variable="$_cache_lifetime">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$template_resource</name>
          <default/>
          <type/>
        </argument>
        <argument line="116">
          <name>$smarty</name>
          <default/>
          <type/>
        </argument>
        <argument line="116">
          <name>$_parent</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="116">
          <name>$_cache_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="116">
          <name>$_compile_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="116">
          <name>$_caching</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="116">
          <name>$_cache_lifetime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="Smarty\Template">
        <name>mustCompile</name>
        <full_name>mustCompile</full_name>
        <docblock line="135">
          <description>Returns if the current template must be compiled by the Smarty compiler</description>
          <long-description>&lt;p&gt;It does compare the timestamps of template source and the compiled templates and checks the force compile configuration&lt;/p&gt;</long-description>
          <tag line="135" name="return" description="true if the template must be compiled" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="165" package="Smarty\Template">
        <name>compileTemplateSource</name>
        <full_name>compileTemplateSource</full_name>
        <docblock line="160">
          <description>Compiles the template</description>
          <long-description>&lt;p&gt;If the template is not evaluated the compiled template is saved on disk&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="213" package="Smarty\Template">
        <name>writeCachedContent</name>
        <full_name>writeCachedContent</full_name>
        <docblock line="208">
          <description>Writes the cached template output</description>
          <long-description/>
          <tag line="208" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="242" package="Smarty\Template">
        <name>getSubTemplate</name>
        <full_name>getSubTemplate</full_name>
        <docblock line="230">
          <description>Template code runtime function to get subtemplate content</description>
          <long-description/>
          <tag line="230" name="param" description="the resource handle of the template file" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="param" description="cache id to be used with this template" type="mixed" variable="$cache_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="230" name="param" description="compile id to be used with this template" type="mixed" variable="$compile_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="230" name="param" description="cache mode" type="integer" variable="$caching">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="230" name="param" description="life time of cache data" type="integer" variable="$cache_lifetime">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="230" name="param" description="optional  variables to assign" type="array" variable="$vars">
            <type by_reference="false">array</type>
          </tag>
          <tag line="230" name="param" description="scope in which {include} should execute" type="int" variable="$parent_scope">
            <type by_reference="false">int</type>
          </tag>
          <tag line="230" name="returns" description="string template content"/>
        </docblock>
        <argument line="242">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
        <argument line="242">
          <name>$cache_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="242">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="242">
          <name>$caching</name>
          <default/>
          <type/>
        </argument>
        <argument line="242">
          <name>$cache_lifetime</name>
          <default/>
          <type/>
        </argument>
        <argument line="242">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
        <argument line="242">
          <name>$parent_scope</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="300" package="Smarty\Template">
        <name>setupInlineSubTemplate</name>
        <full_name>setupInlineSubTemplate</full_name>
        <docblock line="287">
          <description>Template code runtime function to set up an inline subtemplate</description>
          <long-description/>
          <tag line="287" name="param" description="the resource handle of the template file" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="287" name="param" description="cache id to be used with this template" type="mixed" variable="$cache_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="287" name="param" description="compile id to be used with this template" type="mixed" variable="$compile_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="287" name="param" description="cache mode" type="integer" variable="$caching">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="287" name="param" description="life time of cache data" type="integer" variable="$cache_lifetime">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="287" name="param" description="optional  variables to assign" type="array" variable="$vars">
            <type by_reference="false">array</type>
          </tag>
          <tag line="287" name="param" description="scope in which {include} should execute" type="int" variable="$parent_scope">
            <type by_reference="false">int</type>
          </tag>
          <tag line="287" name="param" description="nocache hash code" type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="287" name="returns" description="string template content"/>
        </docblock>
        <argument line="300">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$cache_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$caching</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$cache_lifetime</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$parent_scope</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="336" package="Smarty\Template">
        <name>createTemplateCodeFrame</name>
        <full_name>createTemplateCodeFrame</full_name>
        <docblock line="329">
          <description>Create code frame for compiled and cached templates</description>
          <long-description/>
          <tag line="329" name="param" description="optional template content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="329" name="param" description="flag for cache file" type="bool" variable="$cache">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="329" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="336">
          <name>$content</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="336">
          <name>$cache</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="427" package="Smarty\Template">
        <name>decodeProperties</name>
        <full_name>decodeProperties</full_name>
        <docblock line="417">
          <description>This function is executed automatically when a compiled or cached template file is included</description>
          <long-description>&lt;ul&gt;
&lt;li&gt;Decode saved properties from compiled template and cache files&lt;/li&gt;
&lt;li&gt;Check if compiled or cache file is valid&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="417" name="param" description="special template properties" type="array" variable="$properties">
            <type by_reference="false">array</type>
          </tag>
          <tag line="417" name="param" description="flag if called from cache file" type="bool" variable="$cache">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="417" name="return" description="flag if compiled or cache file is valid" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="427">
          <name>$properties</name>
          <default/>
          <type/>
        </argument>
        <argument line="427">
          <name>$cache</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="494" package="Smarty\Template">
        <name>createLocalArrayVariable</name>
        <full_name>createLocalArrayVariable</full_name>
        <docblock line="487">
          <description>Template code runtime function to create a local Smarty variable for array assignments</description>
          <long-description/>
          <tag line="487" name="param" description="tempate variable name" type="string" variable="$tpl_var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="487" name="param" description="cache mode of variable" type="bool" variable="$nocache">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="487" name="param" description="scope of variable" type="int" variable="$scope">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="494">
          <name>$tpl_var</name>
          <default/>
          <type/>
        </argument>
        <argument line="494">
          <name>$nocache</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="494">
          <name>$scope</name>
          <default>\Smarty::SCOPE_LOCAL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="515" package="Smarty\Template">
        <name>getScope</name>
        <full_name>getScope</full_name>
        <docblock line="509">
          <description>Template code runtime function to get pointer to template variable array of requested scope</description>
          <long-description/>
          <tag line="509" name="param" description="requested variable scope" type="int" variable="$scope">
            <type by_reference="false">int</type>
          </tag>
          <tag line="509" name="return" description="array of template variables" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="515">
          <name>$scope</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="540" package="Smarty\Template">
        <name>getScopePointer</name>
        <full_name>getScopePointer</full_name>
        <docblock line="534">
          <description>Get parent or root of template parent chain</description>
          <long-description/>
          <tag line="534" name="param" description="pqrent or root scope" type="int" variable="$scope">
            <type by_reference="false">int</type>
          </tag>
          <tag line="534" name="return" description="object" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="540">
          <name>$scope</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="562" package="Smarty\Template">
        <name>_count</name>
        <full_name>_count</full_name>
        <docblock line="556">
          <description>[util function] counts an array, arrayaccess/traversable or PDOStatement object</description>
          <long-description/>
          <tag line="556" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="556" name="return" description="the count for arrays and objects that implement countable, 1 for other objects that don't, and 0 for empty elements" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="562">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="591" package="Smarty\Template">
        <name>capture_error</name>
        <full_name>capture_error</full_name>
        <docblock line="587">
          <description>runtime error not matching capture tags</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="602" package="Smarty\Template">
        <name>clearCache</name>
        <full_name>clearCache</full_name>
        <docblock line="596">
          <description>Empty cache for this template</description>
          <long-description/>
          <tag line="596" name="param" description="expiration time" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="596" name="return" description="number of cache files deleted" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="602">
          <name>$exp_time</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="615" package="Smarty\Template">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="609">
          <description>set Smarty property in template context</description>
          <long-description/>
          <tag line="609" name="param" description="property name" type="string" variable="$property_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="609" name="param" description="value" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="615">
          <name>$property_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="615">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="643" package="Smarty\Template">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="638">
          <description>get Smarty property in template context</description>
          <long-description/>
          <tag line="638" name="param" description="property name" type="string" variable="$property_name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="643">
          <name>$property_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="701" package="Smarty\Template">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="697">
          <description>Template data object destrutor</description>
          <long-description/>
        </docblock>
      </method>
    </class>
    <markers>
      <fixme line="626">routing of template -&gt; smarty attributes</fixme>
      <fixme line="687">routing of template -&gt; smarty attributes</fixme>
    </markers>
    <parse_markers>
      <error line="208" code="50015">Argument $content is missing from the Docblock of writeCachedContent()</error>
      <error line="230" code="50014">Name of argument $data does not match with the DocBlock's name $vars in getSubTemplate()</error>
      <notice line="230" code="50013">Parameter $vars could not be found in getSubTemplate()</notice>
      <error line="287" code="50014">Name of argument $data does not match with the DocBlock's name $vars in setupInlineSubTemplate()</error>
      <notice line="287" code="50013">Parameter $vars could not be found in setupInlineSubTemplate()</notice>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_private_registered_block.php" hash="1f0ce9b384770395a6044fd8e7f92e96" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Registered Block</description>
      <long-description>&lt;p&gt;Compiles code for the execution of a registered block function&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Private_Registered_Block</name>
      <full_name>\Smarty_Internal_Compile_Private_Registered_Block</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Registered Block Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('_any')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="28">
          <description>Compiles code for the execution of a block function</description>
          <long-description/>
          <tag line="28" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="28" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="param" description="name of block function" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="37">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="37">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
        <argument line="37">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_data.php" hash="6f74d4a202cc1c0a639abec188985aab" package="Smarty\Template">
    <docblock line="2">
      <description>Smarty Internal Plugin Data</description>
      <long-description>&lt;p&gt;This file contains the basic classes and methodes for template and variable creation&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Template"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Template">
      <extends/>
      <name>Smarty_Internal_Data</name>
      <full_name>\Smarty_Internal_Data</full_name>
      <docblock line="12">
        <description>Base class with template and variable methodes</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Template"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$template_class</name>
        <default>'Smarty_Internal_Template'</default>
        <docblock line="20">
          <description>name of class used for templates</description>
          <long-description/>
          <tag line="20" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$tpl_vars</name>
        <default>array()</default>
        <docblock line="26">
          <description>template variables</description>
          <long-description/>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$parent</name>
        <default>null</default>
        <docblock line="32">
          <description>parent template (if any)</description>
          <long-description/>
          <tag line="32" name="var" description="" type="\Smarty_Internal_Template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="global" package="Default">
        <name>$config_vars</name>
        <default>array()</default>
        <docblock line="38">
          <description>configuration settings</description>
          <long-description/>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="Smarty\Template">
        <name>assign</name>
        <full_name>assign</full_name>
        <docblock line="45">
          <description>assigns a Smarty variable</description>
          <long-description/>
          <tag line="45" name="param" description="the template variable name(s)" type="array|string" variable="$tpl_var">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="param" description="the value to assign" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="45" name="param" description="if true any output of this variable will be not cached" type="boolean" variable="$nocache">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="45" name="param" description="the scope the variable will have  (local,parent or root)" type="boolean" variable="$scope">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="45" name="return" description="current Smarty_Internal_Data (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Data">
            <type by_reference="false">\Smarty_Internal_Data</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$tpl_var</name>
          <default/>
          <type/>
        </argument>
        <argument line="54">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="54">
          <name>$nocache</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Smarty\Template">
        <name>assignGlobal</name>
        <full_name>assignGlobal</full_name>
        <docblock line="71">
          <description>assigns a global Smarty variable</description>
          <long-description/>
          <tag line="71" name="param" description="the global variable name" type="string" variable="$varname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="the value to assign" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="71" name="param" description="if true any output of this variable will be not cached" type="boolean" variable="$nocache">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="71" name="return" description="current Smarty_Internal_Data (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Data">
            <type by_reference="false">\Smarty_Internal_Data</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$varname</name>
          <default/>
          <type/>
        </argument>
        <argument line="79">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="79">
          <name>$nocache</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Smarty\Template">
        <name>assignByRef</name>
        <full_name>assignByRef</full_name>
        <docblock line="92">
          <description>assigns values to template variables by reference</description>
          <long-description/>
          <tag line="92" name="param" description="the template variable name" type="string" variable="$tpl_var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="param" description="&amp;$value the referenced value to assign" type="mixed" variable="$">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="92" name="param" description="if true any output of this variable will be not cached" type="boolean" variable="$nocache">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="92" name="return" description="current Smarty_Internal_Data (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Data">
            <type by_reference="false">\Smarty_Internal_Data</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$tpl_var</name>
          <default/>
          <type/>
        </argument>
        <argument line="100">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="100">
          <name>$nocache</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="Smarty\Template">
        <name>append</name>
        <full_name>append</full_name>
        <docblock line="110">
          <description>appends values to template variables</description>
          <long-description/>
          <tag line="110" name="param" description="the template variable name(s)" type="array|string" variable="$tpl_var">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="param" description="the value to append" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="110" name="param" description="flag if array elements shall be merged" type="boolean" variable="$merge">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="110" name="param" description="if true any output of this variable will be not cached" type="boolean" variable="$nocache">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="110" name="return" description="current Smarty_Internal_Data (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Data">
            <type by_reference="false">\Smarty_Internal_Data</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$tpl_var</name>
          <default/>
          <type/>
        </argument>
        <argument line="119">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="119">
          <name>$merge</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="119">
          <name>$nocache</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="179" package="Smarty\Template">
        <name>appendByRef</name>
        <full_name>appendByRef</full_name>
        <docblock line="171">
          <description>appends values to template variables by reference</description>
          <long-description/>
          <tag line="171" name="param" description="the template variable name" type="string" variable="$tpl_var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="param" description="&amp;$value  the referenced value to append" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="171" name="param" description="flag if array elements shall be merged" type="boolean" variable="$merge">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="171" name="return" description="current Smarty_Internal_Data (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Data">
            <type by_reference="false">\Smarty_Internal_Data</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$tpl_var</name>
          <default/>
          <type/>
        </argument>
        <argument line="179">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="179">
          <name>$merge</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="208" package="Smarty\Template">
        <name>getTemplateVars</name>
        <full_name>getTemplateVars</full_name>
        <docblock line="200">
          <description>Returns a single or all template variables</description>
          <long-description/>
          <tag line="200" name="param" description="variable name or null" type="string" variable="$varname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="param" description="optional pointer to data object" type="string" variable="$_ptr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="param" description="include parent templates?" type="boolean" variable="$search_parents">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="200" name="return" description="variable value or or array of variables" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$varname</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="208">
          <name>$_ptr</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="208">
          <name>$search_parents</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="252" package="Smarty\Template">
        <name>clearAssign</name>
        <full_name>clearAssign</full_name>
        <docblock line="246">
          <description>clear the given assigned template variable.</description>
          <long-description/>
          <tag line="246" name="param" description="the template variable(s) to clear" type="string|array" variable="$tpl_var">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="246" name="return" description="current Smarty_Internal_Data (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Data">
            <type by_reference="false">\Smarty_Internal_Data</type>
          </tag>
        </docblock>
        <argument line="252">
          <name>$tpl_var</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="269" package="Smarty\Template">
        <name>clearAllAssign</name>
        <full_name>clearAllAssign</full_name>
        <docblock line="265">
          <description>clear all the assigned template variables.</description>
          <long-description/>
          <tag line="265" name="return" description="current Smarty_Internal_Data (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Data">
            <type by_reference="false">\Smarty_Internal_Data</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="283" package="Smarty\Template">
        <name>configLoad</name>
        <full_name>configLoad</full_name>
        <docblock line="276">
          <description>load a config file, optionally load just selected sections</description>
          <long-description/>
          <tag line="276" name="param" description="filename" type="string" variable="$config_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="276" name="param" description="array of section names, single section or null" type="mixed" variable="$sections">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="276" name="return" description="current Smarty_Internal_Data (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Data">
            <type by_reference="false">\Smarty_Internal_Data</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$config_file</name>
          <default/>
          <type/>
        </argument>
        <argument line="283">
          <name>$sections</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="300" package="Smarty\Template">
        <name>getVariable</name>
        <full_name>getVariable</full_name>
        <docblock line="292">
          <description>gets the object of a Smarty variable</description>
          <long-description/>
          <tag line="292" name="param" description="the name of the Smarty variable" type="string" variable="$variable">
            <type by_reference="false">string</type>
          </tag>
          <tag line="292" name="param" description="optional pointer to data object" type="object" variable="$_ptr">
            <type by_reference="false">object</type>
          </tag>
          <tag line="292" name="param" description="search also in parent data" type="boolean" variable="$search_parents">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="292" name="return" description="the object of the variable" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$variable</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$_ptr</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="300">
          <name>$search_parents</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="300">
          <name>$error_enable</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="334" package="Smarty\Template">
        <name>getConfigVariable</name>
        <full_name>getConfigVariable</full_name>
        <docblock line="328">
          <description>gets  a config variable</description>
          <long-description/>
          <tag line="328" name="param" description="the name of the config variable" type="string" variable="$variable">
            <type by_reference="false">string</type>
          </tag>
          <tag line="328" name="return" description="the value of the config variable" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="334">
          <name>$variable</name>
          <default/>
          <type/>
        </argument>
        <argument line="334">
          <name>$error_enable</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="359" package="Smarty\Template">
        <name>getStreamVariable</name>
        <full_name>getStreamVariable</full_name>
        <docblock line="353">
          <description>gets  a stream variable</description>
          <long-description/>
          <tag line="353" name="param" description="the stream of the variable" type="string" variable="$variable">
            <type by_reference="false">string</type>
          </tag>
          <tag line="353" name="return" description="the value of the stream variable" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="359">
          <name>$variable</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="385" package="Smarty\Template">
        <name>getConfigVars</name>
        <full_name>getConfigVars</full_name>
        <docblock line="379">
          <description>Returns a single or all config variables</description>
          <long-description/>
          <tag line="379" name="param" description="variable name or null" type="string" variable="$varname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="379" name="return" description="variable value or or array of variables" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="385">
          <name>$varname</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="385">
          <name>$search_parents</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="417" package="Smarty\Template">
        <name>clearConfig</name>
        <full_name>clearConfig</full_name>
        <docblock line="411">
          <description>Deassigns a single or all config variables</description>
          <long-description/>
          <tag line="411" name="param" description="variable name or null" type="string" variable="$varname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="411" name="return" description="current Smarty_Internal_Data (or Smarty or Smarty_Internal_Template) instance for chaining" type="\Smarty_Internal_Data">
            <type by_reference="false">\Smarty_Internal_Data</type>
          </tag>
        </docblock>
        <argument line="417">
          <name>$varname</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="438" package="Smarty\Template">
      <extends>\Smarty_Internal_Data</extends>
      <name>Smarty_Data</name>
      <full_name>\Smarty_Data</full_name>
      <docblock line="430">
        <description>class for the Smarty data object</description>
        <long-description>&lt;p&gt;The Smarty data object will hold Smarty variables in the current scope&lt;/p&gt;</long-description>
        <tag line="430" name="package" description="Smarty"/>
        <tag line="430" name="subpackage" description="Template"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="445" namespace="global" package="Default">
        <name>$smarty</name>
        <default>null</default>
        <docblock line="440">
          <description>Smarty object</description>
          <long-description/>
          <tag line="440" name="var" description="" type="\Smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="453" package="Smarty\Template">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="447">
          <description>create Smarty data object</description>
          <long-description/>
          <tag line="447" name="param" description="parent template" type="\Smarty|array" variable="$_parent">
            <type by_reference="false">\Smarty</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="447" name="param" description="global smarty instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="453">
          <name>$_parent</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="453">
          <name>$smarty</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="479" package="Smarty\Template">
      <extends/>
      <name>Smarty_Variable</name>
      <full_name>\Smarty_Variable</full_name>
      <docblock line="471">
        <description>class for the Smarty variable object</description>
        <long-description>&lt;p&gt;This class defines the Smarty variable object&lt;/p&gt;</long-description>
        <tag line="471" name="package" description="Smarty"/>
        <tag line="471" name="subpackage" description="Template"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="486" namespace="global" package="Default">
        <name>$value</name>
        <default>null</default>
        <docblock line="481">
          <description>template variable</description>
          <long-description/>
          <tag line="481" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="492" namespace="global" package="Default">
        <name>$nocache</name>
        <default>false</default>
        <docblock line="487">
          <description>if true any output of this variable will be not cached</description>
          <long-description/>
          <tag line="487" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="498" namespace="global" package="Default">
        <name>$scope</name>
        <default>\Smarty::SCOPE_LOCAL</default>
        <docblock line="493">
          <description>the scope the variable will have  (local,parent or root)</description>
          <long-description/>
          <tag line="493" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="507" package="Smarty\Template">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="500">
          <description>create Smarty variable object</description>
          <long-description/>
          <tag line="500" name="param" description="the value to assign" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="500" name="param" description="if true any output of this variable will be not cached" type="boolean" variable="$nocache">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="500" name="param" description="the scope the variable will have  (local,parent or root)" type="int" variable="$scope">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="507">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="507">
          <name>$nocache</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="507">
          <name>$scope</name>
          <default>\Smarty::SCOPE_LOCAL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="519" package="Smarty\Template">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="514">
          <description>&lt;&lt;magic&gt;&gt; String conversion</description>
          <long-description/>
          <tag line="514" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="534" package="Smarty\Template">
      <extends/>
      <name>Undefined_Smarty_Variable</name>
      <full_name>\Undefined_Smarty_Variable</full_name>
      <docblock line="526">
        <description>class for undefined variable object</description>
        <long-description>&lt;p&gt;This class defines an object for undefined variable handling&lt;/p&gt;</long-description>
        <tag line="526" name="package" description="Smarty"/>
        <tag line="526" name="subpackage" description="Template"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="542" package="Smarty\Template">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="536">
          <description>Returns FALSE for 'nocache' and NULL otherwise.</description>
          <long-description/>
          <tag line="536" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="536" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="542">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="556" package="Smarty\Template">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="551">
          <description>Always returns an empty string.</description>
          <long-description/>
          <tag line="551" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <notice line="45" code="50013">Parameter $scope could not be found in assign()</notice>
      <error line="92" code="50014">Name of argument $value does not match with the DocBlock's name $ in assignByRef()</error>
      <notice line="92" code="50013">Parameter $ could not be found in assignByRef()</notice>
      <error line="292" code="50015">Argument $error_enable is missing from the Docblock of getVariable()</error>
      <error line="328" code="50015">Argument $error_enable is missing from the Docblock of getConfigVariable()</error>
      <error line="379" code="50015">Argument $search_parents is missing from the Docblock of getConfigVars()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_private_print_expression.php" hash="2d77d7ff5a4ca6758c0ed955ae65e0d9" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Print Expression</description>
      <long-description>&lt;p&gt;Compiles any tag which will output an expression or variable&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Private_Print_Expression</name>
      <full_name>\Smarty_Internal_Compile_Private_Print_Expression</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Print Expression Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('assign')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$option_flags</name>
        <default>array('nocache', 'nofilter')</default>
        <docblock line="27">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="35">
          <description>Compiles code for gererting output from any expression</description>
          <long-description/>
          <tag line="35" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="35" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="43">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="43">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="136" package="Smarty\Compiler">
        <name>compile_output_filter</name>
        <full_name>compile_output_filter</full_name>
        <docblock line="130">
          <description/>
          <long-description/>
          <tag line="130" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="130" name="param" description="name of variable filter" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="param" description="embedded output" type="\type" variable="$output">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="130" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="136">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="136">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="130" code="50012">No short description for method compile_output_filter()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_private_function_plugin.php" hash="71e63eda49cc793c10e86815e22f9193" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Function Plugin</description>
      <long-description>&lt;p&gt;Compiles code for the execution of function plugin&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Private_Function_Plugin</name>
      <full_name>\Smarty_Internal_Compile_Private_Function_Plugin</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Function Plugin Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array()</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('_any')</default>
        <docblock line="27">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="35">
          <description>Compiles code for the execution of function plugin</description>
          <long-description/>
          <tag line="35" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="35" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="param" description="name of function plugin" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="param" description="PHP function name" type="string" variable="$function">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_filter_handler.php" hash="9cbaa14ca680c747253f5c8c36bdf677" package="Smarty\PluginsInternal">
    <docblock line="2">
      <description>Smarty Internal Plugin Filter Handler</description>
      <long-description>&lt;p&gt;Smarty filter handler class&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="PluginsInternal"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\PluginsInternal">
      <extends/>
      <name>Smarty_Internal_Filter_Handler</name>
      <full_name>\Smarty_Internal_Filter_Handler</full_name>
      <docblock line="12">
        <description>Class for filter processing</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="PluginsInternal"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="33" package="Smarty\PluginsInternal">
        <name>runFilter</name>
        <full_name>runFilter</full_name>
        <docblock line="20">
          <description>Run filters over content</description>
          <long-description>&lt;p&gt;The filters will be lazy loaded if required
class name format: Smarty_FilterType_FilterName
plugin filename format: filtertype.filtername.php
Smarty2 filter plugins could be used&lt;/p&gt;</long-description>
          <tag line="20" name="param" description="the type of filter ('pre','post','output') which shall run" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="param" description="the content which shall be processed by the filters" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="param" description="template object" type="\Smarty_Internal_Template" variable="$template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="20" name="return" description="the filtered content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="33">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
        <argument line="33">
          <name>$template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_eval.php" hash="cd81f628a28279635fe9b3c6726920e7" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Eval</description>
      <long-description>&lt;p&gt;Compiles the {eval} tag.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Eval</name>
      <full_name>\Smarty_Internal_Compile_Eval</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Eval Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('var')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('assign')</default>
        <docblock line="27">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('var', 'assign')</default>
        <docblock line="34">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="34" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="34" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="42">
          <description>Compiles code for the {eval} tag</description>
          <long-description/>
          <tag line="42" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="42" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_cacheresource_custom.php" hash="fbd76afde57357220b3cc484ee12996e" package="Smarty\Cacher">
    <docblock line="2">
      <description>Smarty Internal Plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Cacher"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="16" package="Smarty\Cacher">
      <extends>\Smarty_CacheResource</extends>
      <name>Smarty_CacheResource_Custom</name>
      <full_name>\Smarty_CacheResource_Custom</full_name>
      <docblock line="9">
        <description>Cache Handler API</description>
        <long-description/>
        <tag line="9" name="package" description="Smarty"/>
        <tag line="9" name="subpackage" description="Cacher"/>
        <tag line="9" name="author" description="Rodney Rehm"/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="29" package="Smarty\Cacher">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="18">
          <description>fetch cached content and its modification time from data source</description>
          <long-description/>
          <tag line="18" name="param" description="unique cache content identifier" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="template name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="cached content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="cache modification timestamp (epoch)" type="integer" variable="$mtime">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="18" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$cache_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$mtime</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="43" package="Smarty\Cacher">
        <name>fetchTimestamp</name>
        <full_name>fetchTimestamp</full_name>
        <docblock line="31">
          <description>Fetch cached content's modification timestamp from data source</description>
          <long-description>&lt;p&gt;{@internal implementing this method is optional.
 Only implement it if modification times can be accessed faster than loading the complete cached content.}}&lt;/p&gt;</long-description>
          <tag line="31" name="param" description="unique cache content identifier" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="template name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="timestamp (epoch) the template was modified, or false if not found" type="integer|boolean">
            <type by_reference="false">integer</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
        <argument line="43">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="43">
          <name>$cache_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="43">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="59" package="Smarty\Cacher">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="48">
          <description>Save content to cache</description>
          <long-description/>
          <tag line="48" name="param" description="unique cache content identifier" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="template name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="seconds till expiration or null" type="integer|null" variable="$exp_time">
            <type by_reference="false">integer</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="48" name="param" description="content to cache" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$cache_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$exp_time</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="70" package="Smarty\Cacher">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="61">
          <description>Delete content from cache</description>
          <long-description/>
          <tag line="61" name="param" description="template name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="seconds till expiration time in seconds or null" type="integer|null" variable="$exp_time">
            <type by_reference="false">integer</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="61" name="return" description="number of deleted caches" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="70">
          <name>$cache_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="70">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="70">
          <name>$exp_time</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Smarty\Cacher">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="72">
          <description>populate Cached Object with meta data from Resource</description>
          <long-description/>
          <tag line="72" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="72" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="72" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
        <argument line="79">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="Smarty\Cacher">
        <name>populateTimestamp</name>
        <full_name>populateTimestamp</full_name>
        <docblock line="88">
          <description>populate Cached Object with timestamp and exists from Resource</description>
          <long-description/>
          <tag line="88" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$source">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="88" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="116" package="Smarty\Cacher">
        <name>process</name>
        <full_name>process</full_name>
        <docblock line="109">
          <description>Read the cached template and process the header</description>
          <long-description/>
          <tag line="109" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="109" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="109" name="return" description="true or false if the cached content does not exist" type="\booelan">
            <type by_reference="false">\booelan</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="116">
          <name>$cached</name>
          <default>null</default>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="Smarty\Cacher">
        <name>writeCachedContent</name>
        <full_name>writeCachedContent</full_name>
        <docblock line="143">
          <description>Write the rendered template output to cache</description>
          <long-description/>
          <tag line="143" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="143" name="param" description="content to cache" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="143" name="return" description="success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="150">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="169" package="Smarty\Cacher">
        <name>clearAll</name>
        <full_name>clearAll</full_name>
        <docblock line="162">
          <description>Empty cache</description>
          <long-description/>
          <tag line="162" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="162" name="param" description="expiration time (number of seconds, not timestamp)" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="162" name="return" description="number of cache files deleted" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="169">
          <name>$exp_time</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="186" package="Smarty\Cacher">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="176">
          <description>Empty cache for a specific template</description>
          <long-description/>
          <tag line="176" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="176" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="176" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="176" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="176" name="param" description="expiration time (number of seconds, not timestamp)" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="176" name="return" description="number of cache files deleted" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="186">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="186">
          <name>$cache_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="186">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="186">
          <name>$exp_time</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="200" package="Smarty\Cacher">
        <name>hasLock</name>
        <full_name>hasLock</full_name>
        <docblock line="193">
          <description>Check is cache is locked for this template</description>
          <long-description/>
          <tag line="193" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="193" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="193" name="return" description="true or false if cache is locked" type="\booelan">
            <type by_reference="false">\booelan</type>
          </tag>
        </docblock>
        <argument line="200">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="200">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="Smarty\Cacher">
        <name>acquireLock</name>
        <full_name>acquireLock</full_name>
        <docblock line="213">
          <description>Lock cache for this template</description>
          <long-description/>
          <tag line="213" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="213" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="219">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="234" package="Smarty\Cacher">
        <name>releaseLock</name>
        <full_name>releaseLock</full_name>
        <docblock line="228">
          <description>Unlock cache for this template</description>
          <long-description/>
          <tag line="228" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="228" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="234">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="88" code="50014">Name of argument $cached does not match with the DocBlock's name $source in populateTimestamp()</error>
      <notice line="88" code="50013">Parameter $source could not be found in populateTimestamp()</notice>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_include_php.php" hash="0bf5c9121e2d6c71889cd5aadabbc4fb" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Include PHP</description>
      <long-description>&lt;p&gt;Compiles the {include_php} tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Include_Php</name>
      <full_name>\Smarty_Internal_Compile_Include_Php</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Insert Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('file')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('file')</default>
        <docblock line="27">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('once', 'assign')</default>
        <docblock line="34">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="34" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="34" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="42">
          <description>Compiles code for the {include_php} tag</description>
          <long-description/>
          <tag line="42" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="42" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_function.php" hash="1da45d1c0355df0e23fe2ea7fd6074f8" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Function</description>
      <long-description>&lt;p&gt;Compiles the {function} {/function} tags&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Function</name>
      <full_name>\Smarty_Internal_Compile_Function</full_name>
      <docblock line="12">
        <description>Smarty Internal Plugin Compile Function Class</description>
        <long-description/>
        <tag line="12" name="package" description="Smarty"/>
        <tag line="12" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('name')</default>
        <docblock line="20">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="20" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('name')</default>
        <docblock line="27">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('_any')</default>
        <docblock line="34">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="34" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="34" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="42">
          <description>Compiles code for the {function} tag</description>
          <long-description/>
          <tag line="42" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="42" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="return" description="true" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="100" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Functionclose</name>
      <full_name>\Smarty_Internal_Compile_Functionclose</full_name>
      <docblock line="94">
        <description>Smarty Internal Plugin Compile Functionclose Class</description>
        <long-description/>
        <tag line="94" name="package" description="Smarty"/>
        <tag line="94" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="102">
          <description>Compiles code for the {/function} tag</description>
          <long-description/>
          <tag line="102" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="102" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="102" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="102" name="return" description="true" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="110">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="110">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_resource_registered.php" hash="2f0f5455c08cf4b08bb4ebc5e52c494b" package="Smarty\TemplateResources">
    <docblock line="2">
      <description>Smarty Internal Plugin Resource Registered</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="TemplateResources"/>
      <tag line="2" name="author" description="Uwe Tews"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="20" package="Smarty\TemplateResources">
      <extends>\Smarty_Resource</extends>
      <name>Smarty_Internal_Resource_Registered</name>
      <full_name>\Smarty_Internal_Resource_Registered</full_name>
      <docblock line="11">
        <description>Smarty Internal Plugin Resource Registered</description>
        <long-description>&lt;p&gt;Implements the registered resource for Smarty template&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="Smarty"/>
        <tag line="11" name="subpackage" description="TemplateResources"/>
        <tag line="11" name="deprecated" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Smarty\TemplateResources">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="22">
          <description>populate Source Object with meta data from Resource</description>
          <long-description/>
          <tag line="22" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="22" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="22" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="29">
          <name>$_template</name>
          <default>null</default>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Smarty\TemplateResources">
        <name>populateTimestamp</name>
        <full_name>populateTimestamp</full_name>
        <docblock line="39">
          <description>populate Source Object with timestamp and exists from Resource</description>
          <long-description/>
          <tag line="39" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="39" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Smarty\TemplateResources">
        <name>getTemplateTimestamp</name>
        <full_name>getTemplateTimestamp</full_name>
        <docblock line="51">
          <description>Get timestamp (epoch) the template source was modified</description>
          <long-description/>
          <tag line="51" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="51" name="return" description="timestamp (epoch) the template was modified, false if resources has no timestamp" type="integer|boolean">
            <type by_reference="false">integer</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Smarty\TemplateResources">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="66">
          <description>Load template's source by invoking the registered callback into current template object</description>
          <long-description/>
          <tag line="66" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="66" name="return" description="template source" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="throws" description="if source cannot be loaded" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="90" package="Smarty\TemplateResources">
        <name>getBasename</name>
        <full_name>getBasename</full_name>
        <docblock line="84">
          <description>Determine basename for compiled filename</description>
          <long-description/>
          <tag line="84" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="84" name="return" description="resource's basename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_break.php" hash="d96a5c99724e27d1eea75ed67c24a09f" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Break</description>
      <long-description>&lt;p&gt;Compiles the {break} tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Break</name>
      <full_name>\Smarty_Internal_Compile_Break</full_name>
      <docblock line="11">
        <description>Smarty Internal Plugin Compile Break Class</description>
        <long-description/>
        <tag line="11" name="package" description="Smarty"/>
        <tag line="11" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('levels')</default>
        <docblock line="19">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="19" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="19" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('levels')</default>
        <docblock line="26">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="26" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="34">
          <description>Compiles code for the {break} tag</description>
          <long-description/>
          <tag line="34" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="34" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="34" name="param" description="array with compilation parameter" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="34" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="42">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="42">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_cacheresource.php" hash="10a9c9132fdf8523df8c44d49685a824" package="Smarty\Cacher">
    <docblock line="2">
      <description>Smarty Internal Plugin</description>
      <long-description/>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Cacher"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="16" package="Smarty\Cacher">
      <extends/>
      <name>Smarty_CacheResource</name>
      <full_name>\Smarty_CacheResource</full_name>
      <docblock line="9">
        <description>Cache Handler API</description>
        <long-description/>
        <tag line="9" name="package" description="Smarty"/>
        <tag line="9" name="subpackage" description="Cacher"/>
        <tag line="9" name="author" description="Rodney Rehm"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="22" namespace="global" package="Default">
        <name>$resources</name>
        <default>array()</default>
        <docblock line="18">
          <description>cache for Smarty_CacheResource instances</description>
          <long-description/>
          <tag line="18" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="28" namespace="global" package="Default">
        <name>$sysplugins</name>
        <default>array('file' =&gt; true)</default>
        <docblock line="24">
          <description>resource types provided by the core</description>
          <long-description/>
          <tag line="24" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="39" package="Smarty\Cacher">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="32">
          <description>populate Cached Object with meta data from Resource</description>
          <long-description/>
          <tag line="32" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="32" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="32" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
        <argument line="39">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="47" package="Smarty\Cacher">
        <name>populateTimestamp</name>
        <full_name>populateTimestamp</full_name>
        <docblock line="41">
          <description>populate Cached Object with timestamp and exists from Resource</description>
          <long-description/>
          <tag line="41" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$source">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="41" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="56" package="Smarty\Cacher">
        <name>process</name>
        <full_name>process</full_name>
        <docblock line="49">
          <description>Read the cached template and process header</description>
          <long-description/>
          <tag line="49" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="49" name="param" description="cached object" type="\Smarty_Template_Cached" variable="$cached">
            <type by_reference="false">\Smarty_Template_Cached</type>
          </tag>
          <tag line="49" name="return" description="true or false if the cached content does not exist" type="\booelan">
            <type by_reference="false">\booelan</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="56">
          <name>$cached</name>
          <default>null</default>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="65" package="Smarty\Cacher">
        <name>writeCachedContent</name>
        <full_name>writeCachedContent</full_name>
        <docblock line="58">
          <description>Write the rendered template output to cache</description>
          <long-description/>
          <tag line="58" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="58" name="param" description="content to cache" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="return" description="success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="65">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Smarty\Cacher">
        <name>getCachedContent</name>
        <full_name>getCachedContent</full_name>
        <docblock line="67">
          <description>Return cached content</description>
          <long-description/>
          <tag line="67" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="67" name="param" description="content of cache" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="92" package="Smarty\Cacher">
        <name>clearAll</name>
        <full_name>clearAll</full_name>
        <docblock line="85">
          <description>Empty cache</description>
          <long-description/>
          <tag line="85" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="85" name="param" description="expiration time (number of seconds, not timestamp)" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="85" name="return" description="number of cache files deleted" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="92">
          <name>$exp_time</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="104" package="Smarty\Cacher">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="94">
          <description>Empty cache for a specific template</description>
          <long-description/>
          <tag line="94" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="94" name="param" description="template name" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="cache id" type="string" variable="$cache_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="compile id" type="string" variable="$compile_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="expiration time (number of seconds, not timestamp)" type="integer" variable="$exp_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="94" name="return" description="number of cache files deleted" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="104">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="104">
          <name>$cache_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="104">
          <name>$compile_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="104">
          <name>$exp_time</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="Smarty\Cacher">
        <name>locked</name>
        <full_name>locked</full_name>
        <argument line="106">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="106">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Smarty\Cacher">
        <name>hasLock</name>
        <full_name>hasLock</full_name>
        <argument line="123">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="123">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="Smarty\Cacher">
        <name>acquireLock</name>
        <full_name>acquireLock</full_name>
        <argument line="129">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="129">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="135" package="Smarty\Cacher">
        <name>releaseLock</name>
        <full_name>releaseLock</full_name>
        <argument line="135">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="135">
          <name>$cached</name>
          <default/>
          <type>\Smarty_Template_Cached</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="148" package="Smarty\Cacher">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="141">
          <description>Load Cache Resource Handler</description>
          <long-description/>
          <tag line="141" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="141" name="param" description="name of the cache resource" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="return" description="Cache Resource Handler" type="\Smarty_CacheResource">
            <type by_reference="false">\Smarty_CacheResource</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="148">
          <name>$type</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="191" package="Smarty\Cacher">
        <name>invalidLoadedCache</name>
        <full_name>invalidLoadedCache</full_name>
        <docblock line="186">
          <description>Invalid Loaded Cache Files</description>
          <long-description/>
          <tag line="186" name="param" description="Smarty object" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="211" package="Smarty\TemplateResources">
      <extends/>
      <name>Smarty_Template_Cached</name>
      <full_name>\Smarty_Template_Cached</full_name>
      <docblock line="202">
        <description>Smarty Resource Data Object</description>
        <long-description>&lt;p&gt;Cache Data Container for Template Files&lt;/p&gt;</long-description>
        <tag line="202" name="package" description="Smarty"/>
        <tag line="202" name="subpackage" description="TemplateResources"/>
        <tag line="202" name="author" description="Rodney Rehm"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="217" namespace="global" package="Default">
        <name>$filepath</name>
        <default>false</default>
        <docblock line="213">
          <description>Source Filepath</description>
          <long-description/>
          <tag line="213" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="223" namespace="global" package="Default">
        <name>$content</name>
        <default>null</default>
        <docblock line="219">
          <description>Source Content</description>
          <long-description/>
          <tag line="219" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="229" namespace="global" package="Default">
        <name>$timestamp</name>
        <default>false</default>
        <docblock line="225">
          <description>Source Timestamp</description>
          <long-description/>
          <tag line="225" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="235" namespace="global" package="Default">
        <name>$exists</name>
        <default>false</default>
        <docblock line="231">
          <description>Source Existence</description>
          <long-description/>
          <tag line="231" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="241" namespace="global" package="Default">
        <name>$valid</name>
        <default>false</default>
        <docblock line="237">
          <description>Cache Is Valid</description>
          <long-description/>
          <tag line="237" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="247" namespace="global" package="Default">
        <name>$processed</name>
        <default>false</default>
        <docblock line="243">
          <description>Cache was processed</description>
          <long-description/>
          <tag line="243" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="253" namespace="global" package="Default">
        <name>$handler</name>
        <default>null</default>
        <docblock line="249">
          <description>CacheResource Handler</description>
          <long-description/>
          <tag line="249" name="var" description="" type="\Smarty_CacheResource">
            <type by_reference="false">\Smarty_CacheResource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="259" namespace="global" package="Default">
        <name>$compile_id</name>
        <default>null</default>
        <docblock line="255">
          <description>Template Compile Id (Smarty_Internal_Template::$compile_id)</description>
          <long-description/>
          <tag line="255" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="265" namespace="global" package="Default">
        <name>$cache_id</name>
        <default>null</default>
        <docblock line="261">
          <description>Template Cache Id (Smarty_Internal_Template::$cache_id)</description>
          <long-description/>
          <tag line="261" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="271" namespace="global" package="Default">
        <name>$lock_id</name>
        <default>null</default>
        <docblock line="267">
          <description>Id for cache locking</description>
          <long-description/>
          <tag line="267" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="277" namespace="global" package="Default">
        <name>$is_locked</name>
        <default>false</default>
        <docblock line="273">
          <description>flag that cache is locked by this instance</description>
          <long-description/>
          <tag line="273" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="283" namespace="global" package="Default">
        <name>$source</name>
        <default>null</default>
        <docblock line="279">
          <description>Source Object</description>
          <long-description/>
          <tag line="279" name="var" description="" type="\Smarty_Template_Source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="290" package="Smarty\TemplateResources">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="285">
          <description>create Cached Object container</description>
          <long-description/>
          <tag line="285" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="371" package="Smarty\TemplateResources">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="364">
          <description>Write this cache object to handler</description>
          <long-description/>
          <tag line="364" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="364" name="param" description="content to cache" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="364" name="return" description="success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="371">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
        <argument line="371">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="41" code="50014">Name of argument $cached does not match with the DocBlock's name $source in populateTimestamp()</error>
      <notice line="41" code="50013">Parameter $source could not be found in populateTimestamp()</notice>
      <notice line="67" code="50013">Parameter $content could not be found in getCachedContent()</notice>
      <error line="106" code="50010">No DocBlock was found for method locked()</error>
      <error line="123" code="50010">No DocBlock was found for method hasLock()</error>
      <error line="129" code="50010">No DocBlock was found for method acquireLock()</error>
      <error line="135" code="50010">No DocBlock was found for method releaseLock()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_debug.php" hash="2b115c637d42543c4e810e41d5453dba" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Compile Debug</description>
      <long-description>&lt;p&gt;Compiles the {debug} tag.
It opens a window the the Smarty Debugging Console.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="19" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Debug</name>
      <full_name>\Smarty_Internal_Compile_Debug</full_name>
      <docblock line="13">
        <description>Smarty Internal Plugin Compile Debug Class</description>
        <long-description/>
        <tag line="13" name="package" description="Smarty"/>
        <tag line="13" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="21">
          <description>Compiles code for the {debug} tag</description>
          <long-description/>
          <tag line="21" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="21" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="21" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_extends.php" hash="adc61e09dfee6c51142a08b8cc589a3d" package="Smarty\Compiler">
    <docblock line="3">
      <description>Smarty Internal Plugin Compile extend</description>
      <long-description>&lt;p&gt;Compiles the {extends} tag&lt;/p&gt;</long-description>
      <tag line="3" name="package" description="Smarty"/>
      <tag line="3" name="subpackage" description="Compiler"/>
      <tag line="3" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="19" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Extends</name>
      <full_name>\Smarty_Internal_Compile_Extends</full_name>
      <docblock line="13">
        <description>Smarty Internal Plugin Compile extend Class</description>
        <long-description/>
        <tag line="13" name="package" description="Smarty"/>
        <tag line="13" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('file')</default>
        <docblock line="21">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="21" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="21" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="34" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('file')</default>
        <docblock line="28">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="28" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="36">
          <description>Compiles code for the {extends} tag</description>
          <long-description/>
          <tag line="36" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="36" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="43">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_smartytemplatecompiler.php" hash="4b9f19dcbe540d1b6cb2ef2880a3d8a0" package="Smarty\Compiler">
    <docblock line="2">
      <description>Smarty Internal Plugin Smarty Template Compiler Base</description>
      <long-description>&lt;p&gt;This file contains the basic classes and methodes for compiling Smarty templates with lexer/parser&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="Compiler"/>
      <tag line="2" name="author" description="Uwe Tews"/>
    </docblock>
    <include line="15" type="Include" package="Default">
      <name>smarty_internal_parsetree.php</name>
      <docblock line="12">
        <description/>
        <long-description/>
        <tag line="12" name="ignore" description=""/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="global" line="23" package="Smarty\Compiler">
      <extends>\Smarty_Internal_TemplateCompilerBase</extends>
      <name>Smarty_Internal_SmartyTemplateCompiler</name>
      <full_name>\Smarty_Internal_SmartyTemplateCompiler</full_name>
      <docblock line="17">
        <description>Class SmartyTemplateCompiler</description>
        <long-description/>
        <tag line="17" name="package" description="Smarty"/>
        <tag line="17" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$lexer_class</name>
        <default/>
        <docblock line="25">
          <description>Lexer class name</description>
          <long-description/>
          <tag line="25" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$parser_class</name>
        <default/>
        <docblock line="32">
          <description>Parser class name</description>
          <long-description/>
          <tag line="32" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="44" namespace="global" package="Default">
        <name>$lex</name>
        <default/>
        <docblock line="39">
          <description>Lexer object</description>
          <long-description/>
          <tag line="39" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="51" namespace="global" package="Default">
        <name>$parser</name>
        <default/>
        <docblock line="46">
          <description>Parser object</description>
          <long-description/>
          <tag line="46" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="58" namespace="global" package="Default">
        <name>$smarty</name>
        <default/>
        <docblock line="53">
          <description>Smarty object</description>
          <long-description/>
          <tag line="53" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="65" namespace="global" package="Default">
        <name>$local_var</name>
        <default>array()</default>
        <docblock line="60">
          <description>array of vars which can be compiled in local scope</description>
          <long-description/>
          <tag line="60" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="74" package="Smarty\Compiler">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="67">
          <description>Initialize compiler</description>
          <long-description/>
          <tag line="67" name="param" description="class name" type="string" variable="$lexer_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="param" description="class name" type="string" variable="$parser_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="param" description="global instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$lexer_class</name>
          <default/>
          <type/>
        </argument>
        <argument line="74">
          <name>$parser_class</name>
          <default/>
          <type/>
        </argument>
        <argument line="74">
          <name>$smarty</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="89" package="Smarty\Compiler">
        <name>doCompile</name>
        <full_name>doCompile</full_name>
        <docblock line="83">
          <description>Methode to compile a Smarty template</description>
          <long-description/>
          <tag line="83" name="param" description="template source" type="mixed" variable="$_content">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="83" name="return" description="true if compiling succeeded, false if it failed" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$_content</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_resource_stream.php" hash="645c52f989d182559113e3565cdb685e" package="Smarty\TemplateResources">
    <docblock line="2">
      <description>Smarty Internal Plugin Resource Stream</description>
      <long-description>&lt;p&gt;Implements the streams as resource for Smarty template&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Smarty"/>
      <tag line="2" name="subpackage" description="TemplateResources"/>
      <tag line="2" name="author" description="Uwe Tews"/>
      <tag line="2" name="author" description="Rodney Rehm"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="22" package="Smarty\TemplateResources">
      <extends>\Smarty_Resource_Recompiled</extends>
      <name>Smarty_Internal_Resource_Stream</name>
      <full_name>\Smarty_Internal_Resource_Stream</full_name>
      <docblock line="13">
        <description>Smarty Internal Plugin Resource Stream</description>
        <long-description>&lt;p&gt;Implements the streams as resource for Smarty template&lt;/p&gt;</long-description>
        <tag line="13" name="link" description="http://php.net/streams" link="http://php.net/streams"/>
        <tag line="13" name="package" description="Smarty"/>
        <tag line="13" name="subpackage" description="TemplateResources"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Smarty\TemplateResources">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="24">
          <description>populate Source Object with meta data from Resource</description>
          <long-description/>
          <tag line="24" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="24" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="24" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="31">
          <name>$_template</name>
          <default>null</default>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="Smarty\TemplateResources">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="44">
          <description>Load template's source from stream into current template object</description>
          <long-description/>
          <tag line="44" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="44" name="return" description="template source" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="throws" description="if source cannot be loaded" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="76" package="Smarty\TemplateResources">
        <name>buildUniqueResourceName</name>
        <full_name>buildUniqueResourceName</full_name>
        <docblock line="68">
          <description>modify resource_name according to resource handlers specifications</description>
          <long-description/>
          <tag line="68" name="param" description="Smarty instance" type="\Smarty" variable="$smarty">
            <type by_reference="false">\Smarty</type>
          </tag>
          <tag line="68" name="param" description="resource_name to make unique" type="string" variable="$resource_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="flag for config resource" type="boolean" variable="$is_config">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="68" name="return" description="unique resource name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$smarty</name>
          <default/>
          <type>\Smarty</type>
        </argument>
        <argument line="76">
          <name>$resource_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="76">
          <name>$is_config</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_compile_block.php" hash="0cdeaf1e8c035295c60b1229b19ac3d7" package="Smarty\Compiler">
    <docblock line="3">
      <description>Smarty Internal Plugin Compile Block</description>
      <long-description>&lt;p&gt;Compiles the {block}{/block} tags&lt;/p&gt;</long-description>
      <tag line="3" name="package" description="Smarty"/>
      <tag line="3" name="subpackage" description="Compiler"/>
      <tag line="3" name="author" description="Uwe Tews"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="19" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Block</name>
      <full_name>\Smarty_Internal_Compile_Block</full_name>
      <docblock line="13">
        <description>Smarty Internal Plugin Compile Block Class</description>
        <long-description/>
        <tag line="13" name="package" description="Smarty"/>
        <tag line="13" name="subpackage" description="Compiler"/>
      </docblock>
      <constant namespace="global" line="22" package="Smarty\Compiler">
        <name>parent</name>
        <full_name>parent</full_name>
        <value>'____SMARTY_BLOCK_PARENT____'</value>
      </constant>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('name')</default>
        <docblock line="23">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="23" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$shorttag_order</name>
        <default>array('name')</default>
        <docblock line="31">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="31" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="31" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$option_flags</name>
        <default>array('hide', 'append', 'prepend', 'nocache')</default>
        <docblock line="39">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="39" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="53" namespace="global" package="Default">
        <name>$optional_attributes</name>
        <default>array('internal_file', 'internal_uid', 'internal_line')</default>
        <docblock line="47">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="47" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="47" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="59" namespace="global" package="Default">
        <name>$nested_block_names</name>
        <default>array()</default>
        <docblock line="54">
          <description>nested child block names</description>
          <long-description/>
          <tag line="54" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="66" namespace="global" package="Default">
        <name>$block_data</name>
        <default>array()</default>
        <docblock line="61">
          <description>child block source buffer</description>
          <long-description/>
          <tag line="61" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="68">
          <description>Compiles code for the {block} tag</description>
          <long-description/>
          <tag line="68" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="68" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="68" name="return" description="true" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="75">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="125" package="Smarty\Compiler">
        <name>compileChildBlock</name>
        <full_name>compileChildBlock</full_name>
        <docblock line="118">
          <description>Compile saved child block source</description>
          <long-description/>
          <tag line="118" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="118" name="param" description="optional name of child block" type="string" variable="$_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="return" description="compiled code of child block" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="125">
          <name>$_name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="213" package="Smarty\Compiler">
        <name>compileParentBlock</name>
        <full_name>compileParentBlock</full_name>
        <docblock line="206">
          <description>Compile $smarty.block.parent</description>
          <long-description/>
          <tag line="206" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="206" name="param" description="optional name of child block" type="string" variable="$_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="206" name="return" description="compiled code of schild block" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="213">
          <name>$_name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="243" package="Smarty\Compiler">
        <name>blockSource</name>
        <full_name>blockSource</full_name>
        <docblock line="237">
          <description>Process block source</description>
          <long-description/>
          <tag line="237" name="param" description="source text" type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="237" name="return" description="" type="\''">
            <type by_reference="false">\''</type>
          </tag>
        </docblock>
        <argument line="243">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
        <argument line="243">
          <name>$source</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="257" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Blockclose</name>
      <full_name>\Smarty_Internal_Compile_Blockclose</full_name>
      <docblock line="251">
        <description>Smarty Internal Plugin Compile BlockClose Class</description>
        <long-description/>
        <tag line="251" name="package" description="Smarty"/>
        <tag line="251" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="259">
          <description>Compiles code for the {/block} tag</description>
          <long-description/>
          <tag line="259" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="259" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="259" name="return" description="compiled code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="266">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="355" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Private_Child_Block</name>
      <full_name>\Smarty_Internal_Compile_Private_Child_Block</full_name>
      <docblock line="349">
        <description>Smarty Internal Plugin Compile Child Block Class</description>
        <long-description/>
        <tag line="349" name="package" description="Smarty"/>
        <tag line="349" name="subpackage" description="Compiler"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="364" namespace="global" package="Default">
        <name>$required_attributes</name>
        <default>array('name', 'file', 'uid', 'line')</default>
        <docblock line="358">
          <description>Attribute definition: Overwrites base class.</description>
          <long-description/>
          <tag line="358" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="358" name="see" description="\Smarty_Internal_CompileBase" refers="\Smarty_Internal_CompileBase"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="374" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="367">
          <description>Compiles code for the {private_child_block} tag</description>
          <long-description/>
          <tag line="367" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="367" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="367" name="return" description="true" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="374">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="374">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="403" package="Smarty\Compiler">
      <extends>\Smarty_Internal_CompileBase</extends>
      <name>Smarty_Internal_Compile_Private_Child_Blockclose</name>
      <full_name>\Smarty_Internal_Compile_Private_Child_Blockclose</full_name>
      <docblock line="397">
        <description>Smarty Internal Plugin Compile Child Block Close Class</description>
        <long-description/>
        <tag line="397" name="package" description="Smarty"/>
        <tag line="397" name="subpackage" description="Compiler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="414" package="Smarty\Compiler">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="407">
          <description>Compiles code for the {/private_child_block} tag</description>
          <long-description/>
          <tag line="407" name="param" description="array with attributes from parser" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="407" name="param" description="compiler object" type="object" variable="$compiler">
            <type by_reference="false">object</type>
          </tag>
          <tag line="407" name="return" description="true" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="414">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="414">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="237" code="50014">Name of argument $compiler does not match with the DocBlock's name $source in blockSource()</error>
      <error line="237" code="50015">Argument $source is missing from the Docblock of blockSource()</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_resource_php.php" hash="bc92fe4b2034d3600e494c2794aa905b" package="Default">
    <include line="110" type="Include" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="13" package="Smarty\TemplateResources">
      <extends>\Smarty_Resource_Uncompiled</extends>
      <name>Smarty_Internal_Resource_PHP</name>
      <full_name>\Smarty_Internal_Resource_PHP</full_name>
      <docblock line="3">
        <description>Smarty Internal Plugin Resource PHP</description>
        <long-description>&lt;p&gt;Implements the file system as resource for PHP templates&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="Smarty"/>
        <tag line="3" name="subpackage" description="TemplateResources"/>
        <tag line="3" name="author" description="Uwe Tews"/>
        <tag line="3" name="author" description="Rodney Rehm"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$short_open_tag</name>
        <default/>
        <docblock line="15">
          <description>container for short_open_tag directive's value before executing PHP templates</description>
          <long-description/>
          <tag line="15" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Smarty\TemplateResources">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Create a new PHP Resource</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Smarty\TemplateResources">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="30">
          <description>populate Source Object with meta data from Resource</description>
          <long-description/>
          <tag line="30" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="30" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="30" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="37">
          <name>$_template</name>
          <default>null</default>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="Smarty\TemplateResources">
        <name>populateTimestamp</name>
        <full_name>populateTimestamp</full_name>
        <docblock line="54">
          <description>populate Source Object with timestamp and exists from Resource</description>
          <long-description/>
          <tag line="54" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="54" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Smarty\TemplateResources">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="66">
          <description>Load template's source from file into current template object</description>
          <long-description/>
          <tag line="66" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="66" name="return" description="template source" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="throws" description="if source cannot be loaded" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="Smarty\TemplateResources">
        <name>renderUncompiled</name>
        <full_name>renderUncompiled</full_name>
        <docblock line="81">
          <description>Render and output the template (without using the compiler)</description>
          <long-description/>
          <tag line="81" name="param" description="source object" type="\Smarty_Template_Source" variable="$source">
            <type by_reference="false">\Smarty_Template_Source</type>
          </tag>
          <tag line="81" name="param" description="template object" type="\Smarty_Internal_Template" variable="$_template">
            <type by_reference="false">\Smarty_Internal_Template</type>
          </tag>
          <tag line="81" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="81" name="throws" description="if template cannot be loaded or allow_php_templates is disabled" type="\SmartyException">
            <type by_reference="false">\SmartyException</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$source</name>
          <default/>
          <type>\Smarty_Template_Source</type>
        </argument>
        <argument line="89">
          <name>$_template</name>
          <default/>
          <type>\Smarty_Internal_Template</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libs/Smarty/sysplugins/smarty_internal_resource_php.php</error>
    </parse_markers>
  </file>
  <file path="libs/Smarty/sysplugins/smarty_internal_configfileparser.php" hash="7ce4d1faf7f613afa1ed6d53aae8f299" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="Smarty\Compiler">
      <extends/>
      <implements>\ArrayAccess</implements>
      <name>TPC_yyToken</name>
      <full_name>\TPC_yyToken</full_name>
      <docblock line="2">
        <description>Smarty Internal Plugin Configfileparser</description>
        <long-description>&lt;p&gt;This is the config file parser.
It is generated from the internal.configfileparser.y file&lt;/p&gt;</long-description>
        <tag line="2" name="package" description="Smarty"/>
        <tag line="2" name="subpackage" description="Compiler"/>
        <tag line="2" name="author" description="Uwe Tews"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$string</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="public" line="15" namespace="global" package="Default">
        <name>$metadata</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Smarty\Compiler">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="17">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
        <argument line="17">
          <name>$m</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Smarty\Compiler">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Smarty\Compiler">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <argument line="37">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Smarty\Compiler">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <argument line="42">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Smarty\Compiler">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <argument line="47">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
        <argument line="47">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Smarty\Compiler">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <argument line="71">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="77" package="Default">
      <extends/>
      <name>TPC_yyStackEntry</name>
      <full_name>\TPC_yyStackEntry</full_name>
      <property final="false" static="false" visibility="public" line="79" namespace="global" package="Default">
        <name>$stateno</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="80" namespace="global" package="Default">
        <name>$major</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="82" namespace="global" package="Default">
        <name>$minor</name>
        <default/>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="88" package="Default">
      <extends/>
      <name>Smarty_Internal_Configfileparser</name>
      <full_name>\Smarty_Internal_Configfileparser</full_name>
      <constant namespace="global" line="183" package="Default">
        <name>TPC_OPENB</name>
        <full_name>TPC_OPENB</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="184" package="Default">
        <name>TPC_SECTION</name>
        <full_name>TPC_SECTION</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="185" package="Default">
        <name>TPC_CLOSEB</name>
        <full_name>TPC_CLOSEB</full_name>
        <value>3</value>
      </constant>
      <constant namespace="global" line="186" package="Default">
        <name>TPC_DOT</name>
        <full_name>TPC_DOT</full_name>
        <value>4</value>
      </constant>
      <constant namespace="global" line="187" package="Default">
        <name>TPC_ID</name>
        <full_name>TPC_ID</full_name>
        <value>5</value>
      </constant>
      <constant namespace="global" line="188" package="Default">
        <name>TPC_EQUAL</name>
        <full_name>TPC_EQUAL</full_name>
        <value>6</value>
      </constant>
      <constant namespace="global" line="189" package="Default">
        <name>TPC_FLOAT</name>
        <full_name>TPC_FLOAT</full_name>
        <value>7</value>
      </constant>
      <constant namespace="global" line="190" package="Default">
        <name>TPC_INT</name>
        <full_name>TPC_INT</full_name>
        <value>8</value>
      </constant>
      <constant namespace="global" line="191" package="Default">
        <name>TPC_BOOL</name>
        <full_name>TPC_BOOL</full_name>
        <value>9</value>
      </constant>
      <constant namespace="global" line="192" package="Default">
        <name>TPC_SINGLE_QUOTED_STRING</name>
        <full_name>TPC_SINGLE_QUOTED_STRING</full_name>
        <value>10</value>
      </constant>
      <constant namespace="global" line="193" package="Default">
        <name>TPC_DOUBLE_QUOTED_STRING</name>
        <full_name>TPC_DOUBLE_QUOTED_STRING</full_name>
        <value>11</value>
      </constant>
      <constant namespace="global" line="194" package="Default">
        <name>TPC_TRIPPLE_QUOTES</name>
        <full_name>TPC_TRIPPLE_QUOTES</full_name>
        <value>12</value>
      </constant>
      <constant namespace="global" line="195" package="Default">
        <name>TPC_TRIPPLE_TEXT</name>
        <full_name>TPC_TRIPPLE_TEXT</full_name>
        <value>13</value>
      </constant>
      <constant namespace="global" line="196" package="Default">
        <name>TPC_TRIPPLE_QUOTES_END</name>
        <full_name>TPC_TRIPPLE_QUOTES_END</full_name>
        <value>14</value>
      </constant>
      <constant namespace="global" line="197" package="Default">
        <name>TPC_NAKED_STRING</name>
        <full_name>TPC_NAKED_STRING</full_name>
        <value>15</value>
      </constant>
      <constant namespace="global" line="198" package="Default">
        <name>TPC_OTHER</name>
        <full_name>TPC_OTHER</full_name>
        <value>16</value>
      </constant>
      <constant namespace="global" line="199" package="Default">
        <name>TPC_NEWLINE</name>
        <full_name>TPC_NEWLINE</full_name>
        <value>17</value>
      </constant>
      <constant namespace="global" line="200" package="Default">
        <name>TPC_COMMENTSTART</name>
        <full_name>TPC_COMMENTSTART</full_name>
        <value>18</value>
      </constant>
      <constant namespace="global" line="201" package="Default">
        <name>YY_NO_ACTION</name>
        <full_name>YY_NO_ACTION</full_name>
        <value>60</value>
      </constant>
      <constant namespace="global" line="202" package="Default">
        <name>YY_ACCEPT_ACTION</name>
        <full_name>YY_ACCEPT_ACTION</full_name>
        <value>59</value>
      </constant>
      <constant namespace="global" line="203" package="Default">
        <name>YY_ERROR_ACTION</name>
        <full_name>YY_ERROR_ACTION</full_name>
        <value>58</value>
      </constant>
      <constant namespace="global" line="205" package="Default">
        <name>YY_SZ_ACTTAB</name>
        <full_name>YY_SZ_ACTTAB</full_name>
        <value>38</value>
      </constant>
      <constant namespace="global" line="218" package="Default">
        <name>YY_SHIFT_USE_DFLT</name>
        <full_name>YY_SHIFT_USE_DFLT</full_name>
        <value>-8</value>
      </constant>
      <constant namespace="global" line="219" package="Default">
        <name>YY_SHIFT_MAX</name>
        <full_name>YY_SHIFT_MAX</full_name>
        <value>19</value>
      </constant>
      <constant namespace="global" line="224" package="Default">
        <name>YY_REDUCE_USE_DFLT</name>
        <full_name>YY_REDUCE_USE_DFLT</full_name>
        <value>-21</value>
      </constant>
      <constant namespace="global" line="225" package="Default">
        <name>YY_REDUCE_MAX</name>
        <full_name>YY_REDUCE_MAX</full_name>
        <value>10</value>
      </constant>
      <constant namespace="global" line="274" package="Default">
        <name>YYNOCODE</name>
        <full_name>YYNOCODE</full_name>
        <value>29</value>
      </constant>
      <constant namespace="global" line="275" package="Default">
        <name>YYSTACKDEPTH</name>
        <full_name>YYSTACKDEPTH</full_name>
        <value>100</value>
      </constant>
      <constant namespace="global" line="276" package="Default">
        <name>YYNSTATE</name>
        <full_name>YYNSTATE</full_name>
        <value>36</value>
      </constant>
      <constant namespace="global" line="277" package="Default">
        <name>YYNRULE</name>
        <full_name>YYNRULE</full_name>
        <value>22</value>
      </constant>
      <constant namespace="global" line="278" package="Default">
        <name>YYERRORSYMBOL</name>
        <full_name>YYERRORSYMBOL</full_name>
        <value>19</value>
      </constant>
      <constant namespace="global" line="279" package="Default">
        <name>YYERRSYMDT</name>
        <full_name>YYERRSYMDT</full_name>
        <value>'yy0'</value>
      </constant>
      <constant namespace="global" line="280" package="Default">
        <name>YYFALLBACK</name>
        <full_name>YYFALLBACK</full_name>
        <value>0</value>
      </constant>
      <property final="false" static="false" visibility="public" line="93" namespace="global" package="Default">
        <name>$successful</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="public" line="94" namespace="global" package="Default">
        <name>$retvalue</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="private" line="95" namespace="global" package="Default">
        <name>$lex</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="96" namespace="global" package="Default">
        <name>$internalError</name>
        <default>false</default>
      </property>
      <property final="false" static="true" visibility="private" line="122" namespace="global" package="Default">
        <name>$escapes_single</name>
        <default>array('\\' =&gt; '\\', '\'' =&gt; '\'')</default>
      </property>
      <property final="false" static="true" visibility="public" line="206" namespace="global" package="Default">
        <name>$yy_action</name>
        <default>array(29, 30, 34, 33, 24, 13, 19, 25, 35, 21, 59, 8, 3, 1, 20, 12, 14, 31, 20, 12, 15, 17, 23, 18, 27, 26, 4, 5, 6, 32, 2, 11, 28, 22, 16, 9, 7, 10)</default>
      </property>
      <property final="false" static="true" visibility="public" line="212" namespace="global" package="Default">
        <name>$yy_lookahead</name>
        <default>array(7, 8, 9, 10, 11, 12, 5, 27, 15, 16, 20, 21, 23, 23, 17, 18, 13, 14, 17, 18, 15, 2, 17, 4, 25, 26, 6, 3, 3, 14, 23, 1, 24, 17, 2, 25, 22, 25)</default>
      </property>
      <property final="false" static="true" visibility="public" line="220" namespace="global" package="Default">
        <name>$yy_shift_ofst</name>
        <default>array(-8, 1, 1, 1, -7, -3, -3, 30, -8, -8, -8, 19, 5, 3, 15, 16, 24, 25, 32, 20)</default>
      </property>
      <property final="false" static="true" visibility="public" line="226" namespace="global" package="Default">
        <name>$yy_reduce_ofst</name>
        <default>array(-10, -1, -1, -1, -20, 10, 12, 8, 14, 7, -11)</default>
      </property>
      <property final="false" static="true" visibility="public" line="230" namespace="global" package="Default">
        <name>$yyExpectedTokens</name>
        <default>array(array(), array(5, 17, 18), array(5, 17, 18), array(5, 17, 18), array(7, 8, 9, 10, 11, 12, 15, 16), array(17, 18), array(17, 18), array(1), array(), array(), array(), array(2, 4), array(15, 17), array(13, 14), array(14), array(17), array(3), array(3), array(2), array(6), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array())</default>
      </property>
      <property final="false" static="true" visibility="public" line="268" namespace="global" package="Default">
        <name>$yy_default</name>
        <default>array(44, 37, 41, 40, 58, 58, 58, 36, 39, 44, 44, 58, 58, 58, 58, 58, 58, 58, 58, 58, 55, 54, 57, 56, 50, 45, 43, 42, 38, 46, 47, 52, 51, 49, 48, 53)</default>
      </property>
      <property final="false" static="true" visibility="public" line="281" namespace="global" package="Default">
        <name>$yyFallback</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="300" namespace="global" package="Default">
        <name>$yyTraceFILE</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="301" namespace="global" package="Default">
        <name>$yyTracePrompt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="302" namespace="global" package="Default">
        <name>$yyidx</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="303" namespace="global" package="Default">
        <name>$yyerrcnt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="304" namespace="global" package="Default">
        <name>$yystack</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="306" namespace="global" package="Default">
        <name>$yyTokenName</name>
        <default>array('$', 'OPENB', 'SECTION', 'CLOSEB', 'DOT', 'ID', 'EQUAL', 'FLOAT', 'INT', 'BOOL', 'SINGLE_QUOTED_STRING', 'DOUBLE_QUOTED_STRING', 'TRIPPLE_QUOTES', 'TRIPPLE_TEXT', 'TRIPPLE_QUOTES_END', 'NAKED_STRING', 'OTHER', 'NEWLINE', 'COMMENTSTART', 'error', 'start', 'global_vars', 'sections', 'var_list', 'section', 'newline', 'var', 'value')</default>
      </property>
      <property final="false" static="true" visibility="public" line="316" namespace="global" package="Default">
        <name>$yyRuleName</name>
        <default>array("start ::= global_vars sections", "global_vars ::= var_list", "sections ::= sections section", "sections ::=", "section ::= OPENB SECTION CLOSEB newline var_list", "section ::= OPENB DOT SECTION CLOSEB newline var_list", "var_list ::= var_list newline", "var_list ::= var_list var", "var_list ::=", "var ::= ID EQUAL value", "value ::= FLOAT", "value ::= INT", "value ::= BOOL", "value ::= SINGLE_QUOTED_STRING", "value ::= DOUBLE_QUOTED_STRING", "value ::= TRIPPLE_QUOTES TRIPPLE_TEXT TRIPPLE_QUOTES_END", "value ::= TRIPPLE_QUOTES TRIPPLE_QUOTES_END", "value ::= NAKED_STRING", "value ::= OTHER", "newline ::= NEWLINE", "newline ::= COMMENTSTART NEWLINE", "newline ::= COMMENTSTART NAKED_STRING NEWLINE")</default>
      </property>
      <property final="false" static="true" visibility="public" line="626" namespace="global" package="Default">
        <name>$yyRuleInfo</name>
        <default>array(array('lhs' =&gt; 20, 'rhs' =&gt; 2), array('lhs' =&gt; 21, 'rhs' =&gt; 1), array('lhs' =&gt; 22, 'rhs' =&gt; 2), array('lhs' =&gt; 22, 'rhs' =&gt; 0), array('lhs' =&gt; 24, 'rhs' =&gt; 5), array('lhs' =&gt; 24, 'rhs' =&gt; 6), array('lhs' =&gt; 23, 'rhs' =&gt; 2), array('lhs' =&gt; 23, 'rhs' =&gt; 2), array('lhs' =&gt; 23, 'rhs' =&gt; 0), array('lhs' =&gt; 26, 'rhs' =&gt; 3), array('lhs' =&gt; 27, 'rhs' =&gt; 1), array('lhs' =&gt; 27, 'rhs' =&gt; 1), array('lhs' =&gt; 27, 'rhs' =&gt; 1), array('lhs' =&gt; 27, 'rhs' =&gt; 1), array('lhs' =&gt; 27, 'rhs' =&gt; 1), array('lhs' =&gt; 27, 'rhs' =&gt; 3), array('lhs' =&gt; 27, 'rhs' =&gt; 2), array('lhs' =&gt; 27, 'rhs' =&gt; 1), array('lhs' =&gt; 27, 'rhs' =&gt; 1), array('lhs' =&gt; 25, 'rhs' =&gt; 1), array('lhs' =&gt; 25, 'rhs' =&gt; 2), array('lhs' =&gt; 25, 'rhs' =&gt; 3))</default>
      </property>
      <property final="false" static="true" visibility="public" line="651" namespace="global" package="Default">
        <name>$yyReduceMap</name>
        <default>array(0 =&gt; 0, 2 =&gt; 0, 3 =&gt; 0, 19 =&gt; 0, 20 =&gt; 0, 21 =&gt; 0, 1 =&gt; 1, 4 =&gt; 4, 5 =&gt; 5, 6 =&gt; 6, 7 =&gt; 7, 8 =&gt; 8, 9 =&gt; 9, 10 =&gt; 10, 11 =&gt; 11, 12 =&gt; 12, 13 =&gt; 13, 14 =&gt; 14, 15 =&gt; 15, 16 =&gt; 16, 17 =&gt; 17, 18 =&gt; 17)</default>
      </property>
      <property final="false" static="false" visibility="private" line="760" namespace="global" package="Default">
        <name>$_retvalue</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="98">
          <name>$lex</name>
          <default/>
          <type/>
        </argument>
        <argument line="98">
          <name>$compiler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="105" package="Default">
        <name>instance</name>
        <full_name>instance</full_name>
        <argument line="105">
          <name>$new_instance</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="113" package="Default">
        <name>parse_bool</name>
        <full_name>parse_bool</full_name>
        <argument line="113">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="124" package="Default">
        <name>parse_single_quoted_string</name>
        <full_name>parse_single_quoted_string</full_name>
        <argument line="124">
          <name>$qstr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="143" package="Default">
        <name>parse_double_quoted_string</name>
        <full_name>parse_double_quoted_string</full_name>
        <argument line="143">
          <name>$qstr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="148" package="Default">
        <name>parse_tripple_double_quoted_string</name>
        <full_name>parse_tripple_double_quoted_string</full_name>
        <argument line="148">
          <name>$qstr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="152" package="Default">
        <name>set_var</name>
        <full_name>set_var</full_name>
        <argument line="152">
          <name>$var</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="152">
          <name>$target_array</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="164" package="Default">
        <name>add_global_vars</name>
        <full_name>add_global_vars</full_name>
        <argument line="164">
          <name>$vars</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="173" package="Default">
        <name>add_section_vars</name>
        <full_name>add_section_vars</full_name>
        <argument line="173">
          <name>$section_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="173">
          <name>$vars</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="283" package="Default">
        <name>Trace</name>
        <full_name>Trace</full_name>
        <argument line="283">
          <name>$TraceFILE</name>
          <default/>
          <type/>
        </argument>
        <argument line="283">
          <name>$zTracePrompt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="294" package="Default">
        <name>PrintTrace</name>
        <full_name>PrintTrace</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="341" package="Default">
        <name>tokenName</name>
        <full_name>tokenName</full_name>
        <argument line="341">
          <name>$tokenType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="353" package="Default">
        <name>yy_destructor</name>
        <full_name>yy_destructor</full_name>
        <argument line="353">
          <name>$yymajor</name>
          <default/>
          <type/>
        </argument>
        <argument line="353">
          <name>$yypminor</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="360" package="Default">
        <name>yy_pop_parser_stack</name>
        <full_name>yy_pop_parser_stack</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="378" package="Default">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="388" package="Default">
        <name>yy_get_expected_tokens</name>
        <full_name>yy_get_expected_tokens</full_name>
        <argument line="388">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="458" package="Default">
        <name>yy_is_expected_token</name>
        <full_name>yy_is_expected_token</full_name>
        <argument line="458">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="531" package="Default">
        <name>yy_find_shift_action</name>
        <full_name>yy_find_shift_action</full_name>
        <argument line="531">
          <name>$iLookAhead</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="567" package="Default">
        <name>yy_find_reduce_action</name>
        <full_name>yy_find_reduce_action</full_name>
        <argument line="567">
          <name>$stateno</name>
          <default/>
          <type/>
        </argument>
        <argument line="567">
          <name>$iLookAhead</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="590" package="Default">
        <name>yy_shift</name>
        <full_name>yy_shift</full_name>
        <argument line="590">
          <name>$yyNewState</name>
          <default/>
          <type/>
        </argument>
        <argument line="590">
          <name>$yyMajor</name>
          <default/>
          <type/>
        </argument>
        <argument line="590">
          <name>$yypMinor</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="676" package="Default">
        <name>yy_r0</name>
        <full_name>yy_r0</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="681" package="Default">
        <name>yy_r1</name>
        <full_name>yy_r1</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="686" package="Default">
        <name>yy_r4</name>
        <full_name>yy_r4</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="692" package="Default">
        <name>yy_r5</name>
        <full_name>yy_r5</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="700" package="Default">
        <name>yy_r6</name>
        <full_name>yy_r6</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="705" package="Default">
        <name>yy_r7</name>
        <full_name>yy_r7</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="710" package="Default">
        <name>yy_r8</name>
        <full_name>yy_r8</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="715" package="Default">
        <name>yy_r9</name>
        <full_name>yy_r9</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="720" package="Default">
        <name>yy_r10</name>
        <full_name>yy_r10</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="725" package="Default">
        <name>yy_r11</name>
        <full_name>yy_r11</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="730" package="Default">
        <name>yy_r12</name>
        <full_name>yy_r12</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="735" package="Default">
        <name>yy_r13</name>
        <full_name>yy_r13</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="740" package="Default">
        <name>yy_r14</name>
        <full_name>yy_r14</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="745" package="Default">
        <name>yy_r15</name>
        <full_name>yy_r15</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="750" package="Default">
        <name>yy_r16</name>
        <full_name>yy_r16</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="755" package="Default">
        <name>yy_r17</name>
        <full_name>yy_r17</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="762" package="Default">
        <name>yy_reduce</name>
        <full_name>yy_reduce</full_name>
        <argument line="762">
          <name>$yyruleno</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="803" package="Default">
        <name>yy_parse_failed</name>
        <full_name>yy_parse_failed</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="812" package="Default">
        <name>yy_syntax_error</name>
        <full_name>yy_syntax_error</full_name>
        <argument line="812">
          <name>$yymajor</name>
          <default/>
          <type/>
        </argument>
        <argument line="812">
          <name>$TOKEN</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="822" package="Default">
        <name>yy_accept</name>
        <full_name>yy_accept</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="838" package="Default">
        <name>doParse</name>
        <full_name>doParse</full_name>
        <argument line="838">
          <name>$yymajor</name>
          <default/>
          <type/>
        </argument>
        <argument line="838">
          <name>$yytokenvalue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libs/Smarty/sysplugins/smarty_internal_configfileparser.php</error>
      <error line="14" code="50018">No DocBlock was found for property $string</error>
      <error line="15" code="50018">No DocBlock was found for property $metadata</error>
      <error line="17" code="50010">No DocBlock was found for method __construct()</error>
      <error line="32" code="50010">No DocBlock was found for method __toString()</error>
      <error line="37" code="50010">No DocBlock was found for method offsetExists()</error>
      <error line="42" code="50010">No DocBlock was found for method offsetGet()</error>
      <error line="47" code="50010">No DocBlock was found for method offsetSet()</error>
      <error line="71" code="50010">No DocBlock was found for method offsetUnset()</error>
      <error line="77" code="50000">No DocBlock was found for \TPC_yyStackEntry</error>
      <error line="79" code="50018">No DocBlock was found for property $stateno</error>
      <error line="80" code="50018">No DocBlock was found for property $major</error>
      <error line="82" code="50018">No DocBlock was found for property $minor</error>
      <error line="88" code="50000">No DocBlock was found for \Smarty_Internal_Configfileparser</error>
      <error line="93" code="50018">No DocBlock was found for property $successful</error>
      <error line="94" code="50018">No DocBlock was found for property $retvalue</error>
      <error line="95" code="50018">No DocBlock was found for property $lex</error>
      <error line="96" code="50018">No DocBlock was found for property $internalError</error>
      <error line="122" code="50018">No DocBlock was found for property $escapes_single</error>
      <error line="206" code="50018">No DocBlock was found for property $yy_action</error>
      <error line="212" code="50018">No DocBlock was found for property $yy_lookahead</error>
      <error line="220" code="50018">No DocBlock was found for property $yy_shift_ofst</error>
      <error line="226" code="50018">No DocBlock was found for property $yy_reduce_ofst</error>
      <error line="230" code="50018">No DocBlock was found for property $yyExpectedTokens</error>
      <error line="268" code="50018">No DocBlock was found for property $yy_default</error>
      <error line="281" code="50018">No DocBlock was found for property $yyFallback</error>
      <error line="300" code="50018">No DocBlock was found for property $yyTraceFILE</error>
      <error line="301" code="50018">No DocBlock was found for property $yyTracePrompt</error>
      <error line="302" code="50018">No DocBlock was found for property $yyidx</error>
      <error line="303" code="50018">No DocBlock was found for property $yyerrcnt</error>
      <error line="304" code="50018">No DocBlock was found for property $yystack</error>
      <error line="306" code="50018">No DocBlock was found for property $yyTokenName</error>
      <error line="316" code="50018">No DocBlock was found for property $yyRuleName</error>
      <error line="626" code="50018">No DocBlock was found for property $yyRuleInfo</error>
      <error line="651" code="50018">No DocBlock was found for property $yyReduceMap</error>
      <error line="760" code="50018">No DocBlock was found for property $_retvalue</error>
      <error line="98" code="50010">No DocBlock was found for method __construct()</error>
      <error line="105" code="50010">No DocBlock was found for method instance()</error>
      <error line="113" code="50010">No DocBlock was found for method parse_bool()</error>
      <error line="124" code="50010">No DocBlock was found for method parse_single_quoted_string()</error>
      <error line="143" code="50010">No DocBlock was found for method parse_double_quoted_string()</error>
      <error line="148" code="50010">No DocBlock was found for method parse_tripple_double_quoted_string()</error>
      <error line="152" code="50010">No DocBlock was found for method set_var()</error>
      <error line="164" code="50010">No DocBlock was found for method add_global_vars()</error>
      <error line="173" code="50010">No DocBlock was found for method add_section_vars()</error>
      <error line="283" code="50010">No DocBlock was found for method Trace()</error>
      <error line="294" code="50010">No DocBlock was found for method PrintTrace()</error>
      <error line="341" code="50010">No DocBlock was found for method tokenName()</error>
      <error line="353" code="50010">No DocBlock was found for method yy_destructor()</error>
      <error line="360" code="50010">No DocBlock was found for method yy_pop_parser_stack()</error>
      <error line="378" code="50010">No DocBlock was found for method __destruct()</error>
      <error line="388" code="50010">No DocBlock was found for method yy_get_expected_tokens()</error>
      <error line="458" code="50010">No DocBlock was found for method yy_is_expected_token()</error>
      <error line="531" code="50010">No DocBlock was found for method yy_find_shift_action()</error>
      <error line="567" code="50010">No DocBlock was found for method yy_find_reduce_action()</error>
      <error line="590" code="50010">No DocBlock was found for method yy_shift()</error>
      <error line="676" code="50010">No DocBlock was found for method yy_r0()</error>
      <error line="681" code="50010">No DocBlock was found for method yy_r1()</error>
      <error line="686" code="50010">No DocBlock was found for method yy_r4()</error>
      <error line="692" code="50010">No DocBlock was found for method yy_r5()</error>
      <error line="700" code="50010">No DocBlock was found for method yy_r6()</error>
      <error line="705" code="50010">No DocBlock was found for method yy_r7()</error>
      <error line="710" code="50010">No DocBlock was found for method yy_r8()</error>
      <error line="715" code="50010">No DocBlock was found for method yy_r9()</error>
      <error line="720" code="50010">No DocBlock was found for method yy_r10()</error>
      <error line="725" code="50010">No DocBlock was found for method yy_r11()</error>
      <error line="730" code="50010">No DocBlock was found for method yy_r12()</error>
      <error line="735" code="50010">No DocBlock was found for method yy_r13()</error>
      <error line="740" code="50010">No DocBlock was found for method yy_r14()</error>
      <error line="745" code="50010">No DocBlock was found for method yy_r15()</error>
      <error line="750" code="50010">No DocBlock was found for method yy_r16()</error>
      <error line="755" code="50010">No DocBlock was found for method yy_r17()</error>
      <error line="762" code="50010">No DocBlock was found for method yy_reduce()</error>
      <error line="803" code="50010">No DocBlock was found for method yy_parse_failed()</error>
      <error line="812" code="50010">No DocBlock was found for method yy_syntax_error()</error>
      <error line="822" code="50010">No DocBlock was found for method yy_accept()</error>
      <error line="838" code="50010">No DocBlock was found for method doParse()</error>
    </parse_markers>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-cz.php" hash="71c023a8809c0f1ba3fefdf4d668555a" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Czech Version</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-es.php" hash="0956885284e7613746d666113597df8a" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Spanish version
Versi√≥n en espa√±ol</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-ru.php" hash="49da2c5df221242755779ff80c981071" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Russian Version by Alexey Chumakov &lt;alex@chumakov.ru&gt;</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-fi.php" hash="21d1ac6f97d96c26d7d6f88e770ea5ac" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Finnish Version
By Jyry Kuukanen</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-br.php" hash="d390c7b25d04190f8b7709ef2aa54ef0" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Portuguese Version
By Paulo Henrique Garcia - paulo@controllerweb.com.br</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-it.php" hash="f251d634399411681949577656574816" package="PHPMailer">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Italian version</description>
      <long-description/>
      <tag line="2" name="package" description="PHPMailer"/>
      <tag line="2" name="author" description="Ilias Bartolini &lt;brain79@inwind.it&gt;"/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-no.php" hash="3b56e1f9b030556b124618aa629d4227" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Norwegian Version</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-et.php" hash="429383bce464355af568b81125633a50" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Estonian Version
By Indrek P√§ri
Revised By Elan Ruusam√§e &lt;glen@delfi.ee&gt;</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-se.php" hash="ed7e65d7344610c6a36d181ef324c202" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Swedish Version
Author: Johan Linn√©r &lt;johan@linner.biz&gt;</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-tr.php" hash="e3d867b594589b3216c587d3d5f451e9" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Turkish version
T√ºrk√ße Versiyonu
√ùZYAZILIM - El√ßin √ñzel - Can Y√Ωlmaz - Mehmet Benlio√∞lu</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-nl.php" hash="323275ece7d81c51ed507cc94f1a5c83" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to class.phpmailer.php for definitive list.</description>
      <long-description>&lt;p&gt;Dutch Version by Tuxion &lt;a href="&amp;#x6d;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#116;&amp;#x6f;&amp;#x3a;&amp;#116;&amp;#x65;&amp;#x61;&amp;#109;&amp;#x40;&amp;#x74;&amp;#117;&amp;#x78;&amp;#x69;&amp;#111;&amp;#x6e;&amp;#46;&amp;#110;&amp;#x6c;"&gt;&amp;#116;&amp;#x65;&amp;#x61;&amp;#109;&amp;#x40;&amp;#x74;&amp;#117;&amp;#x78;&amp;#x69;&amp;#111;&amp;#x6e;&amp;#46;&amp;#110;&amp;#x6c;&lt;/a&gt;&lt;/p&gt;</long-description>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-fo.php" hash="0ab51968d697234ba194ebef31ce337d" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Faroese Version [language of the Faroe Islands, a Danish dominion]
This file created: 11-06-2004
Supplied by D√°vur S√∏rensen [www.profo-webdesign.dk]</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-hu.php" hash="bada8e6c642d978a902b7edd02fec498" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Hungarian Version</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-ch.php" hash="74ed44e5ddf877714f2e867d7da8479f" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Chinese Version
By LiuXin: www.80x86.cn/blog/</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-fr.php" hash="c3d801642fa6e224c5c2d09d77a1f86a" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
French Version</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-zh_cn.php" hash="71bafcfecea1b4bddc026aba6b2f1ed3" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Simplified Chinese Version</description>
      <long-description/>
      <tag line="2" name="author" description="liqwei &lt;liqwei@liqwei.com&gt;"/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-sk.php" hash="be81f5438b7d4da182681aee71c43ddc" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Slovak Version
Author: Michal Tinka &lt;michaltinka@gmail.com&gt;</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-zh.php" hash="d9815fad208242698f890a66580274d0" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Traditional Chinese Version</description>
      <long-description/>
      <tag line="2" name="author" description="liqwei &lt;liqwei@liqwei.com&gt;"/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-ja.php" hash="bd446cd8c7233858699851f148862c18" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Japanese Version
By Mitsuhiro Yoshida - http://mitstek.com/</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-dk.php" hash="505998d19195db7efaf6974cbff80322" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Danish Version
Author: Mikael Stokkebro &lt;info@stokkebro.dk&gt;</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-ro.php" hash="4c65e97e181656243f46ea132c146361" package="PHPMailer">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Romanian Version</description>
      <long-description/>
      <tag line="2" name="package" description="PHPMailer"/>
      <tag line="2" name="author" description="Catalin Constantin &lt;catalin@dazoot.ro&gt;"/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-de.php" hash="f0e61a9476e49ff68f3ceb17d6808eb5" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
German Version</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-pl.php" hash="26c269656289b88232105b4b9ca8e1e3" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Polish Version</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-ca.php" hash="9304e45deef43759d72ce328b763d99c" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Catalan Version
By Ivan: web AT microstudi DOT com</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/language/phpmailer.lang-ar.php" hash="1e3f523d708487256ce8daef3725c0d2" package="Default">
    <docblock line="2">
      <description>PHPMailer language file: refer to English translation for definitive list
Arabic Version, UTF-8
by : bahjat al mostafa &lt;bahjat983@hotmail.com&gt;</description>
      <long-description/>
    </docblock>
  </file>
  <file path="libs/phpmailer/class.pop3.php" hash="eb605e83af9ece1ddb96aa1b4cd59a7f" package="PHPMailer">
    <docblock line="25">
      <description>PHPMailer - PHP POP Before SMTP Authentication Class
NOTE: Designed for use with PHP version 5 and up</description>
      <long-description/>
      <tag line="25" name="package" description="PHPMailer"/>
      <tag line="25" name="author" description="Andy Prevost"/>
      <tag line="25" name="author" description="Marcus Bointon"/>
      <tag line="25" name="author" description="Jim Jagielski"/>
      <tag line="25" name="copyright" description="2010 - 2012 Jim Jagielski"/>
      <tag line="25" name="copyright" description="2004 - 2009 Andy Prevost"/>
      <tag line="25" name="license" description="http://www.gnu.org/copyleft/lesser.html Distributed under the Lesser General Public License (LGPL)"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="59" package="PHPMailer">
      <extends/>
      <name>POP3</name>
      <full_name>\POP3</full_name>
      <docblock line="37">
        <description>PHP POP-Before-SMTP Authentication Class</description>
        <long-description>&lt;p&gt;Version 5.2.2&lt;/p&gt;</long-description>
        <tag line="37" name="license" description=": LGPL, see PHPMailer License&#10;Specifically for PHPMailer to allow POP before SMTP authentication.&#10;Does not yet work with APOP - if you have an APOP account, contact Jim Jagielski&#10;and we can test changes to this script.&#10;This class is based on the structure of the SMTP class originally authored by Chris Ryan&#10;This class is rfc 1939 compliant and implements all the commands&#10;required for POP3 connection, authentication and disconnection."/>
        <tag line="37" name="package" description="PHPMailer"/>
        <tag line="37" name="author" description="Richard Davey (orig) &lt;rich@corephp.co.uk&gt;"/>
        <tag line="37" name="author" description="Andy Prevost"/>
        <tag line="37" name="author" description="Jim Jagielski"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="64" namespace="global" package="Default">
        <name>$POP3_PORT</name>
        <default>110</default>
        <docblock line="60">
          <description>Default POP3 port</description>
          <long-description/>
          <tag line="60" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="70" namespace="global" package="Default">
        <name>$POP3_TIMEOUT</name>
        <default>30</default>
        <docblock line="66">
          <description>Default Timeout</description>
          <long-description/>
          <tag line="66" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="76" namespace="global" package="Default">
        <name>$CRLF</name>
        <default>"\r\n"</default>
        <docblock line="72">
          <description>POP3 Carriage Return + Line Feed</description>
          <long-description/>
          <tag line="72" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="82" namespace="global" package="Default">
        <name>$do_debug</name>
        <default>2</default>
        <docblock line="78">
          <description>Displaying Debug warnings? (0 = now, 1+ = yes)</description>
          <long-description/>
          <tag line="78" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="88" namespace="global" package="Default">
        <name>$host</name>
        <default/>
        <docblock line="84">
          <description>POP3 Mail Server</description>
          <long-description/>
          <tag line="84" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="94" namespace="global" package="Default">
        <name>$port</name>
        <default/>
        <docblock line="90">
          <description>POP3 Port</description>
          <long-description/>
          <tag line="90" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="100" namespace="global" package="Default">
        <name>$tval</name>
        <default/>
        <docblock line="96">
          <description>POP3 Timeout Value</description>
          <long-description/>
          <tag line="96" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="106" namespace="global" package="Default">
        <name>$username</name>
        <default/>
        <docblock line="102">
          <description>POP3 Username</description>
          <long-description/>
          <tag line="102" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="112" namespace="global" package="Default">
        <name>$password</name>
        <default/>
        <docblock line="108">
          <description>POP3 Password</description>
          <long-description/>
          <tag line="108" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="118" namespace="global" package="Default">
        <name>$Version</name>
        <default>'5.2.2'</default>
        <docblock line="114">
          <description>Sets the POP3 PHPMailer Version number</description>
          <long-description/>
          <tag line="114" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="127" namespace="global" package="Default">
        <name>$pop_conn</name>
        <default/>
        <docblock line="124">
          <description/>
          <long-description/>
          <tag line="124" name="var" description="Resource handle for the POP connection socket" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="131" namespace="global" package="Default">
        <name>$connected</name>
        <default/>
        <docblock line="128">
          <description/>
          <long-description/>
          <tag line="128" name="var" description="Are we connected?" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="135" namespace="global" package="Default">
        <name>$error</name>
        <default/>
        <docblock line="132">
          <description/>
          <long-description/>
          <tag line="132" name="var" description="Error container" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="PHPMailer">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="137">
          <description>Constructor, sets the initial values</description>
          <long-description/>
          <tag line="137" name="access" description="public"/>
          <tag line="137" name="return" description="" type="\POP3">
            <type by_reference="false">\POP3</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="PHPMailer">
        <name>Authorise</name>
        <full_name>Authorise</full_name>
        <docblock line="148">
          <description>Combination of public events - connect, login, disconnect</description>
          <long-description/>
          <tag line="148" name="access" description="public"/>
          <tag line="148" name="param" description="" type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="148" name="param" description="" type="bool|int" variable="$port">
            <type by_reference="false">bool</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="148" name="param" description="" type="bool|int" variable="$tval">
            <type by_reference="false">bool</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="148" name="param" description="" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="148" name="param" description="" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="148" name="param" description="" type="int" variable="$debug_level">
            <type by_reference="false">int</type>
          </tag>
          <tag line="148" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$host</name>
          <default/>
          <type/>
        </argument>
        <argument line="159">
          <name>$port</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="159">
          <name>$tval</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="159">
          <name>$username</name>
          <default/>
          <type/>
        </argument>
        <argument line="159">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="159">
          <name>$debug_level</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="211" package="PHPMailer">
        <name>Connect</name>
        <full_name>Connect</full_name>
        <docblock line="203">
          <description>Connect to the POP3 server</description>
          <long-description/>
          <tag line="203" name="access" description="public"/>
          <tag line="203" name="param" description="" type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="203" name="param" description="" type="bool|int" variable="$port">
            <type by_reference="false">bool</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="203" name="param" description="" type="integer" variable="$tval">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="203" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$host</name>
          <default/>
          <type/>
        </argument>
        <argument line="211">
          <name>$port</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="211">
          <name>$tval</name>
          <default>30</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="286" package="PHPMailer">
        <name>Login</name>
        <full_name>Login</full_name>
        <docblock line="279">
          <description>Login to the POP3 server (does not support APOP yet)</description>
          <long-description/>
          <tag line="279" name="access" description="public"/>
          <tag line="279" name="param" description="" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="279" name="param" description="" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="279" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="286">
          <name>$username</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="286">
          <name>$password</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="326" package="PHPMailer">
        <name>Disconnect</name>
        <full_name>Disconnect</full_name>
        <docblock line="322">
          <description>Disconnect from the POP3 server</description>
          <long-description/>
          <tag line="322" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="343" package="PHPMailer">
        <name>getResponse</name>
        <full_name>getResponse</full_name>
        <docblock line="336">
          <description>Get the socket response back.</description>
          <long-description>&lt;p&gt;$size is the maximum number of bytes to retrieve&lt;/p&gt;</long-description>
          <tag line="336" name="access" description="private"/>
          <tag line="336" name="param" description="" type="integer" variable="$size">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="336" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="343">
          <name>$size</name>
          <default>128</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="355" package="PHPMailer">
        <name>sendString</name>
        <full_name>sendString</full_name>
        <docblock line="349">
          <description>Send a string down the open socket connection to the POP3 server</description>
          <long-description/>
          <tag line="349" name="access" description="private"/>
          <tag line="349" name="param" description="" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="349" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="355">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="367" package="PHPMailer">
        <name>checkResponse</name>
        <full_name>checkResponse</full_name>
        <docblock line="361">
          <description>Checks the POP3 server response for +OK or -ERR</description>
          <long-description/>
          <tag line="361" name="access" description="private"/>
          <tag line="361" name="param" description="" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="361" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="367">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="390" package="PHPMailer">
        <name>displayErrors</name>
        <full_name>displayErrors</full_name>
        <docblock line="386">
          <description>If debug is enabled, display the error message array</description>
          <long-description/>
          <tag line="386" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="408" package="PHPMailer">
        <name>catchWarning</name>
        <full_name>catchWarning</full_name>
        <docblock line="400">
          <description>Takes over from PHP for the socket warning handler</description>
          <long-description/>
          <tag line="400" name="access" description="private"/>
          <tag line="400" name="param" description="" type="integer" variable="$errno">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="400" name="param" description="" type="string" variable="$errstr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="400" name="param" description="" type="string" variable="$errfile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="400" name="param" description="" type="integer" variable="$errline">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="408">
          <name>$errno</name>
          <default/>
          <type/>
        </argument>
        <argument line="408">
          <name>$errstr</name>
          <default/>
          <type/>
        </argument>
        <argument line="408">
          <name>$errfile</name>
          <default/>
          <type/>
        </argument>
        <argument line="408">
          <name>$errline</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="libs/phpmailer/class.phpmailer.php" hash="e16a4465ebf7447240b482682968cf59" package="PHPMailer">
    <docblock line="25">
      <description>PHPMailer - PHP email creation and transport class
NOTE: Requires PHP version 5 or later</description>
      <long-description/>
      <tag line="25" name="package" description="PHPMailer"/>
      <tag line="25" name="author" description="Andy Prevost"/>
      <tag line="25" name="author" description="Marcus Bointon"/>
      <tag line="25" name="author" description="Jim Jagielski"/>
      <tag line="25" name="copyright" description="2010 - 2012 Jim Jagielski"/>
      <tag line="25" name="copyright" description="2004 - 2009 Andy Prevost"/>
      <tag line="25" name="license" description="http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License"/>
    </docblock>
    <include line="960" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="1142" type="Include" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="43" package="PHPMailer">
      <extends/>
      <name>PHPMailer</name>
      <full_name>\PHPMailer</full_name>
      <docblock line="39">
        <description>PHP email creation and transport class</description>
        <long-description/>
        <tag line="39" name="package" description="PHPMailer"/>
      </docblock>
      <constant namespace="global" line="490" package="PHPMailer">
        <name>STOP_MESSAGE</name>
        <full_name>STOP_MESSAGE</full_name>
        <value>0</value>
      </constant>
      <constant namespace="global" line="491" package="PHPMailer">
        <name>STOP_CONTINUE</name>
        <full_name>STOP_CONTINUE</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="492" package="PHPMailer">
        <name>STOP_CRITICAL</name>
        <full_name>STOP_CRITICAL</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="493" package="PHPMailer">
        <name>CRLF</name>
        <full_name>CRLF</full_name>
        <value>"\r\n"</value>
      </constant>
      <property final="false" static="false" visibility="public" line="53" namespace="global" package="Default">
        <name>$Priority</name>
        <default>3</default>
        <docblock line="49">
          <description>Email priority (1 = High, 3 = Normal, 5 = low).</description>
          <long-description/>
          <tag line="49" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="59" namespace="global" package="Default">
        <name>$CharSet</name>
        <default>'iso-8859-1'</default>
        <docblock line="55">
          <description>Sets the CharSet of the message.</description>
          <long-description/>
          <tag line="55" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="65" namespace="global" package="Default">
        <name>$ContentType</name>
        <default>'text/plain'</default>
        <docblock line="61">
          <description>Sets the Content-type of the message.</description>
          <long-description/>
          <tag line="61" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="72" namespace="global" package="Default">
        <name>$Encoding</name>
        <default>'8bit'</default>
        <docblock line="67">
          <description>Sets the Encoding of the message.</description>
          <long-description>&lt;p&gt;Options for this are
 "8bit", "7bit", "binary", "base64", and "quoted-printable".&lt;/p&gt;</long-description>
          <tag line="67" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="78" namespace="global" package="Default">
        <name>$ErrorInfo</name>
        <default>''</default>
        <docblock line="74">
          <description>Holds the most recent mailer error message.</description>
          <long-description/>
          <tag line="74" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="84" namespace="global" package="Default">
        <name>$From</name>
        <default>'root@localhost'</default>
        <docblock line="80">
          <description>Sets the From email address for the message.</description>
          <long-description/>
          <tag line="80" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="90" namespace="global" package="Default">
        <name>$FromName</name>
        <default>'Root User'</default>
        <docblock line="86">
          <description>Sets the From name of the message.</description>
          <long-description/>
          <tag line="86" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="97" namespace="global" package="Default">
        <name>$Sender</name>
        <default>''</default>
        <docblock line="92">
          <description>Sets the Sender email (Return-Path) of the message.</description>
          <long-description>&lt;p&gt;If not empty,
will be sent via -f to sendmail or as 'MAIL FROM' in smtp mode.&lt;/p&gt;</long-description>
          <tag line="92" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="104" namespace="global" package="Default">
        <name>$ReturnPath</name>
        <default>''</default>
        <docblock line="99">
          <description>Sets the Return-Path of the message.</description>
          <long-description>&lt;p&gt;If empty, it will
be set to either From or Sender.&lt;/p&gt;</long-description>
          <tag line="99" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="110" namespace="global" package="Default">
        <name>$Subject</name>
        <default>''</default>
        <docblock line="106">
          <description>Sets the Subject of the message.</description>
          <long-description/>
          <tag line="106" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="117" namespace="global" package="Default">
        <name>$Body</name>
        <default>''</default>
        <docblock line="112">
          <description>Sets the Body of the message.</description>
          <long-description>&lt;p&gt;This can be either an HTML or text body.
If HTML then run IsHTML(true).&lt;/p&gt;</long-description>
          <tag line="112" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="126" namespace="global" package="Default">
        <name>$AltBody</name>
        <default>''</default>
        <docblock line="119">
          <description>Sets the text-only body of the message.</description>
          <long-description>&lt;p&gt;This automatically sets the
email to multipart/alternative.  This body can be read by mail
clients that do not have HTML email capability such as mutt. Clients
that can read HTML will view the normal Body.&lt;/p&gt;</long-description>
          <tag line="119" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="133" namespace="global" package="Default">
        <name>$MIMEBody</name>
        <default>''</default>
        <docblock line="128">
          <description>Stores the complete compiled MIME message body.</description>
          <long-description/>
          <tag line="128" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="140" namespace="global" package="Default">
        <name>$MIMEHeader</name>
        <default>''</default>
        <docblock line="135">
          <description>Stores the complete compiled MIME message headers.</description>
          <long-description/>
          <tag line="135" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="147" namespace="global" package="Default">
        <name>$mailHeader</name>
        <default>''</default>
        <docblock line="142">
          <description>Stores the extra header list which CreateHeader() doesn't fold in</description>
          <long-description/>
          <tag line="142" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="154" namespace="global" package="Default">
        <name>$WordWrap</name>
        <default>0</default>
        <docblock line="149">
          <description>Sets word wrapping on the body of the message to a given number of
characters.</description>
          <long-description/>
          <tag line="149" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="160" namespace="global" package="Default">
        <name>$Mailer</name>
        <default>'mail'</default>
        <docblock line="156">
          <description>Method to send mail: ("mail", "sendmail", or "smtp").</description>
          <long-description/>
          <tag line="156" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="166" namespace="global" package="Default">
        <name>$Sendmail</name>
        <default>'/usr/sbin/sendmail'</default>
        <docblock line="162">
          <description>Sets the path of the sendmail program.</description>
          <long-description/>
          <tag line="162" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="173" namespace="global" package="Default">
        <name>$UseSendmailOptions</name>
        <default>true</default>
        <docblock line="168">
          <description>Determine if mail() uses a fully sendmail compatible MTA that
supports sendmail's "-oi -f" options</description>
          <long-description/>
          <tag line="168" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="180" namespace="global" package="Default">
        <name>$PluginDir</name>
        <default>''</default>
        <docblock line="175">
          <description>Path to PHPMailer plugins.</description>
          <long-description>&lt;p&gt;Useful if the SMTP class
is in a different directory than the PHP include path.&lt;/p&gt;</long-description>
          <tag line="175" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="186" namespace="global" package="Default">
        <name>$ConfirmReadingTo</name>
        <default>''</default>
        <docblock line="182">
          <description>Sets the email address that a reading confirmation will be sent.</description>
          <long-description/>
          <tag line="182" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="194" namespace="global" package="Default">
        <name>$Hostname</name>
        <default>''</default>
        <docblock line="188">
          <description>Sets the hostname to use in Message-Id and Received headers
and as default HELO string.</description>
          <long-description>&lt;p&gt;If empty, the value returned
by SERVER_NAME is used or 'localhost.localdomain'.&lt;/p&gt;</long-description>
          <tag line="188" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="201" namespace="global" package="Default">
        <name>$MessageID</name>
        <default>''</default>
        <docblock line="196">
          <description>Sets the message ID to be used in the Message-Id header.</description>
          <long-description>&lt;p&gt;If empty, a unique id will be generated.&lt;/p&gt;</long-description>
          <tag line="196" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="208" namespace="global" package="Default">
        <name>$MessageDate</name>
        <default>''</default>
        <docblock line="203">
          <description>Sets the message Date to be used in the Date header.</description>
          <long-description>&lt;p&gt;If empty, the current date will be added.&lt;/p&gt;</long-description>
          <tag line="203" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="224" namespace="global" package="Default">
        <name>$Host</name>
        <default>'localhost'</default>
        <docblock line="214">
          <description>Sets the SMTP hosts.</description>
          <long-description>&lt;p&gt;All hosts must be separated by a
semicolon.  You can also specify a different port
for each host by using this format: [hostname:port]
(e.g. "smtp1.example.com:25;smtp2.example.com").
Hosts will be tried in order.&lt;/p&gt;</long-description>
          <tag line="214" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="230" namespace="global" package="Default">
        <name>$Port</name>
        <default>25</default>
        <docblock line="226">
          <description>Sets the default SMTP server port.</description>
          <long-description/>
          <tag line="226" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="236" namespace="global" package="Default">
        <name>$Helo</name>
        <default>''</default>
        <docblock line="232">
          <description>Sets the SMTP HELO of the message (Default is $Hostname).</description>
          <long-description/>
          <tag line="232" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="242" namespace="global" package="Default">
        <name>$SMTPSecure</name>
        <default>''</default>
        <docblock line="238">
          <description>Sets connection prefix.</description>
          <long-description>&lt;p&gt;Options are "", "ssl" or "tls"&lt;/p&gt;</long-description>
          <tag line="238" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="248" namespace="global" package="Default">
        <name>$SMTPAuth</name>
        <default>false</default>
        <docblock line="244">
          <description>Sets SMTP authentication.</description>
          <long-description>&lt;p&gt;Utilizes the Username and Password variables.&lt;/p&gt;</long-description>
          <tag line="244" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="254" namespace="global" package="Default">
        <name>$Username</name>
        <default>''</default>
        <docblock line="250">
          <description>Sets SMTP username.</description>
          <long-description/>
          <tag line="250" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="260" namespace="global" package="Default">
        <name>$Password</name>
        <default>''</default>
        <docblock line="256">
          <description>Sets SMTP password.</description>
          <long-description/>
          <tag line="256" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="266" namespace="global" package="Default">
        <name>$AuthType</name>
        <default>''</default>
        <docblock line="262">
          <description>Sets SMTP auth type.</description>
          <long-description>&lt;p&gt;Options are LOGIN | PLAIN | NTLM  (default LOGIN)&lt;/p&gt;</long-description>
          <tag line="262" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="272" namespace="global" package="Default">
        <name>$Realm</name>
        <default>''</default>
        <docblock line="268">
          <description>Sets SMTP realm.</description>
          <long-description>&lt;p&gt;@var string&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="278" namespace="global" package="Default">
        <name>$Workstation</name>
        <default>''</default>
        <docblock line="274">
          <description>Sets SMTP workstation.</description>
          <long-description>&lt;p&gt;@var string&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="285" namespace="global" package="Default">
        <name>$Timeout</name>
        <default>10</default>
        <docblock line="280">
          <description>Sets the SMTP server timeout in seconds.</description>
          <long-description>&lt;p&gt;This function will not work with the win32 version.&lt;/p&gt;</long-description>
          <tag line="280" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="291" namespace="global" package="Default">
        <name>$SMTPDebug</name>
        <default>false</default>
        <docblock line="287">
          <description>Sets SMTP class debugging on or off.</description>
          <long-description/>
          <tag line="287" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="298" namespace="global" package="Default">
        <name>$Debugoutput</name>
        <default>"echo"</default>
        <docblock line="293">
          <description>Sets the function/method to use for debugging output.</description>
          <long-description>&lt;p&gt;Right now we only honor "echo" or "error_log"&lt;/p&gt;</long-description>
          <tag line="293" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="306" namespace="global" package="Default">
        <name>$SMTPKeepAlive</name>
        <default>false</default>
        <docblock line="300">
          <description>Prevents the SMTP connection from being closed after each mail
sending.</description>
          <long-description>&lt;p&gt;If this is set to true then to close the connection
requires an explicit call to SmtpClose().&lt;/p&gt;</long-description>
          <tag line="300" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="313" namespace="global" package="Default">
        <name>$SingleTo</name>
        <default>false</default>
        <docblock line="308">
          <description>Provides the ability to have the TO field process individual
emails, instead of sending to entire TO addresses</description>
          <long-description/>
          <tag line="308" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="319" namespace="global" package="Default">
        <name>$SingleToArray</name>
        <default>array()</default>
        <docblock line="315">
          <description>If SingleTo is true, this provides the array to hold the email addresses</description>
          <long-description/>
          <tag line="315" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="327" namespace="global" package="Default">
        <name>$LE</name>
        <default>"\n"</default>
        <docblock line="321">
          <description>Provides the ability to change the generic line ending
NOTE: The default remains '\n'.</description>
          <long-description>&lt;p&gt;We force CRLF where we KNOW
       it must be used via self::CRLF&lt;/p&gt;</long-description>
          <tag line="321" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="336" namespace="global" package="Default">
        <name>$DKIM_selector</name>
        <default>''</default>
        <docblock line="329">
          <description>Used with DKIM Signing
required parameter if DKIM is enabled</description>
          <long-description>&lt;p&gt;domain selector example domainkey&lt;/p&gt;</long-description>
          <tag line="329" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="343" namespace="global" package="Default">
        <name>$DKIM_identity</name>
        <default>''</default>
        <docblock line="338">
          <description>Used with DKIM Signing
required if DKIM is enabled, in format of email address 'you@yourdomain.com' typically used as the source of the email</description>
          <long-description/>
          <tag line="338" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="350" namespace="global" package="Default">
        <name>$DKIM_passphrase</name>
        <default>''</default>
        <docblock line="345">
          <description>Used with DKIM Signing
optional parameter if your private key requires a passphras</description>
          <long-description/>
          <tag line="345" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="357" namespace="global" package="Default">
        <name>$DKIM_domain</name>
        <default>''</default>
        <docblock line="352">
          <description>Used with DKIM Singing
required if DKIM is enabled, in format of email address 'domain.com'</description>
          <long-description/>
          <tag line="352" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="364" namespace="global" package="Default">
        <name>$DKIM_private</name>
        <default>''</default>
        <docblock line="359">
          <description>Used with DKIM Signing
required if DKIM is enabled, path to private key file</description>
          <long-description/>
          <tag line="359" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="387" namespace="global" package="Default">
        <name>$action_function</name>
        <default>''</default>
        <docblock line="366">
          <description>Callback Action function name.</description>
          <long-description>&lt;p&gt;The function that handles the result of the send email action.
It is called out by Send() for each email sent.&lt;/p&gt;

&lt;p&gt;Value can be:
- 'function_name' for function names
- 'Class::Method' for static method calls
- array($object, 'Method') for calling methods on $object
See http://php.net/is_callable manual page for more details.&lt;/p&gt;

&lt;p&gt;Parameters:
  bool    $result        result of the send action
  string  $to            email address of the recipient
  string  $cc            cc email addresses
  string  $bcc           bcc email addresses
  string  $subject       the subject
  string  $body          the email body
  string  $from          email address of sender&lt;/p&gt;</long-description>
          <tag line="366" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="393" namespace="global" package="Default">
        <name>$Version</name>
        <default>'5.2.2'</default>
        <docblock line="389">
          <description>Sets the PHPMailer Version number</description>
          <long-description/>
          <tag line="389" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="399" namespace="global" package="Default">
        <name>$XMailer</name>
        <default>''</default>
        <docblock line="395">
          <description>What to use in the X-Mailer header</description>
          <long-description/>
          <tag line="395" name="var" description="NULL for default, whitespace for None, or actual string to use" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="409" namespace="global" package="Default">
        <name>$smtp</name>
        <default>null</default>
        <docblock line="405">
          <description/>
          <long-description/>
          <tag line="405" name="var" description="An instance of the SMTP sender class" type="\SMTP">
            <type by_reference="false">\SMTP</type>
          </tag>
          <tag line="405" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="414" namespace="global" package="Default">
        <name>$to</name>
        <default>array()</default>
        <docblock line="410">
          <description/>
          <long-description/>
          <tag line="410" name="var" description="An array of 'to' addresses" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="410" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="419" namespace="global" package="Default">
        <name>$cc</name>
        <default>array()</default>
        <docblock line="415">
          <description/>
          <long-description/>
          <tag line="415" name="var" description="An array of 'cc' addresses" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="415" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="424" namespace="global" package="Default">
        <name>$bcc</name>
        <default>array()</default>
        <docblock line="420">
          <description/>
          <long-description/>
          <tag line="420" name="var" description="An array of 'bcc' addresses" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="420" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="429" namespace="global" package="Default">
        <name>$ReplyTo</name>
        <default>array()</default>
        <docblock line="425">
          <description/>
          <long-description/>
          <tag line="425" name="var" description="An array of reply-to name and address" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="425" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="434" namespace="global" package="Default">
        <name>$all_recipients</name>
        <default>array()</default>
        <docblock line="430">
          <description/>
          <long-description/>
          <tag line="430" name="var" description="An array of all kinds of addresses: to, cc, bcc, replyto" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="430" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="439" namespace="global" package="Default">
        <name>$attachment</name>
        <default>array()</default>
        <docblock line="435">
          <description/>
          <long-description/>
          <tag line="435" name="var" description="An array of attachments" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="435" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="444" namespace="global" package="Default">
        <name>$CustomHeader</name>
        <default>array()</default>
        <docblock line="440">
          <description/>
          <long-description/>
          <tag line="440" name="var" description="An array of custom headers" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="440" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="449" namespace="global" package="Default">
        <name>$message_type</name>
        <default>''</default>
        <docblock line="445">
          <description/>
          <long-description/>
          <tag line="445" name="var" description="The message's MIME type" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="445" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="454" namespace="global" package="Default">
        <name>$boundary</name>
        <default>array()</default>
        <docblock line="450">
          <description/>
          <long-description/>
          <tag line="450" name="var" description="An array of MIME boundary strings" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="450" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="459" namespace="global" package="Default">
        <name>$language</name>
        <default>array()</default>
        <docblock line="455">
          <description/>
          <long-description/>
          <tag line="455" name="var" description="An array of available languages" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="455" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="464" namespace="global" package="Default">
        <name>$error_count</name>
        <default>0</default>
        <docblock line="460">
          <description/>
          <long-description/>
          <tag line="460" name="var" description="The number of errors encountered" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="460" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="469" namespace="global" package="Default">
        <name>$sign_cert_file</name>
        <default>''</default>
        <docblock line="465">
          <description/>
          <long-description/>
          <tag line="465" name="var" description="The filename of a DKIM certificate file" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="465" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="474" namespace="global" package="Default">
        <name>$sign_key_file</name>
        <default>''</default>
        <docblock line="470">
          <description/>
          <long-description/>
          <tag line="470" name="var" description="The filename of a DKIM key file" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="470" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="479" namespace="global" package="Default">
        <name>$sign_key_pass</name>
        <default>''</default>
        <docblock line="475">
          <description/>
          <long-description/>
          <tag line="475" name="var" description="The password of a DKIM key" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="475" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="484" namespace="global" package="Default">
        <name>$exceptions</name>
        <default>false</default>
        <docblock line="480">
          <description/>
          <long-description/>
          <tag line="480" name="var" description="Whether to throw exceptions for errors" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="480" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="512" package="PHPMailer">
        <name>mail_passthru</name>
        <full_name>mail_passthru</full_name>
        <docblock line="499">
          <description>Calls actual mail() function, but in a safe_mode aware fashion
Also, unless sendmail_path points to sendmail (or something that
claims to be sendmail), don't pass params (not a perfect fix,
but it will do)</description>
          <long-description/>
          <tag line="499" name="param" description="To" type="string" variable="$to">
            <type by_reference="false">string</type>
          </tag>
          <tag line="499" name="param" description="Subject" type="string" variable="$subject">
            <type by_reference="false">string</type>
          </tag>
          <tag line="499" name="param" description="Message Body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="499" name="param" description="Additional Header(s)" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="499" name="param" description="Params" type="string" variable="$params">
            <type by_reference="false">string</type>
          </tag>
          <tag line="499" name="access" description="private"/>
          <tag line="499" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="512">
          <name>$to</name>
          <default/>
          <type/>
        </argument>
        <argument line="512">
          <name>$subject</name>
          <default/>
          <type/>
        </argument>
        <argument line="512">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
        <argument line="512">
          <name>$header</name>
          <default/>
          <type/>
        </argument>
        <argument line="512">
          <name>$params</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="525" package="PHPMailer">
        <name>edebug</name>
        <full_name>edebug</full_name>
        <docblock line="521">
          <description>Outputs debugging info via user-defined method</description>
          <long-description/>
          <tag line="521" name="param" description="" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="525">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="537" package="PHPMailer">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="533">
          <description>Constructor</description>
          <long-description/>
          <tag line="533" name="param" description="Should we throw external exceptions?" type="boolean" variable="$exceptions">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="537">
          <name>$exceptions</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="546" package="PHPMailer">
        <name>IsHTML</name>
        <full_name>IsHTML</full_name>
        <docblock line="541">
          <description>Sets message type to HTML.</description>
          <long-description/>
          <tag line="541" name="param" description="" type="bool" variable="$ishtml">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="541" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="546">
          <name>$ishtml</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="559" package="PHPMailer">
        <name>IsSMTP</name>
        <full_name>IsSMTP</full_name>
        <docblock line="554">
          <description>Sets Mailer to send message using SMTP.</description>
          <long-description/>
          <tag line="554" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="554" name="deprecated" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="568" package="PHPMailer">
        <name>IsMail</name>
        <full_name>IsMail</full_name>
        <docblock line="563">
          <description>Sets Mailer to send message using PHP mail() function.</description>
          <long-description/>
          <tag line="563" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="563" name="deprecated" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="577" package="PHPMailer">
        <name>IsSendmail</name>
        <full_name>IsSendmail</full_name>
        <docblock line="572">
          <description>Sets Mailer to send message using the $Sendmail program.</description>
          <long-description/>
          <tag line="572" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="572" name="deprecated" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="589" package="PHPMailer">
        <name>IsQmail</name>
        <full_name>IsQmail</full_name>
        <docblock line="584">
          <description>Sets Mailer to send message using the qmail MTA.</description>
          <long-description/>
          <tag line="584" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="584" name="deprecated" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="606" package="PHPMailer">
        <name>AddAddress</name>
        <full_name>AddAddress</full_name>
        <docblock line="600">
          <description>Adds a "To" address.</description>
          <long-description/>
          <tag line="600" name="param" description="" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="600" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="600" name="return" description="true on success, false if address already used" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="606">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="606">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="617" package="PHPMailer">
        <name>AddCC</name>
        <full_name>AddCC</full_name>
        <docblock line="610">
          <description>Adds a "Cc" address.</description>
          <long-description>&lt;p&gt;Note: this function works with the SMTP mailer on win32, not with the "mail" mailer.&lt;/p&gt;</long-description>
          <tag line="610" name="param" description="" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="610" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="610" name="return" description="true on success, false if address already used" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="617">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="617">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="628" package="PHPMailer">
        <name>AddBCC</name>
        <full_name>AddBCC</full_name>
        <docblock line="621">
          <description>Adds a "Bcc" address.</description>
          <long-description>&lt;p&gt;Note: this function works with the SMTP mailer on win32, not with the "mail" mailer.&lt;/p&gt;</long-description>
          <tag line="621" name="param" description="" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="621" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="621" name="return" description="true on success, false if address already used" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="628">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="628">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="638" package="PHPMailer">
        <name>AddReplyTo</name>
        <full_name>AddReplyTo</full_name>
        <docblock line="632">
          <description>Adds a "Reply-to" address.</description>
          <long-description/>
          <tag line="632" name="param" description="" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="632" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="632" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="638">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="638">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="652" package="PHPMailer">
        <name>AddAnAddress</name>
        <full_name>AddAnAddress</full_name>
        <docblock line="642">
          <description>Adds an address to one of the recipient arrays
Addresses that have been added already return false, but do not throw exceptions</description>
          <long-description/>
          <tag line="642" name="param" description="One of 'to', 'cc', 'bcc', 'ReplyTo'" type="string" variable="$kind">
            <type by_reference="false">string</type>
          </tag>
          <tag line="642" name="param" description="The email address to send to" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="642" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="642" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="642" name="return" description="true on success, false if address already used or invalid in some way" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="642" name="access" description="protected"/>
        </docblock>
        <argument line="652">
          <name>$kind</name>
          <default/>
          <type/>
        </argument>
        <argument line="652">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="652">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="698" package="PHPMailer">
        <name>SetFrom</name>
        <full_name>SetFrom</full_name>
        <docblock line="690">
          <description>Set the From and FromName properties</description>
          <long-description/>
          <tag line="690" name="param" description="" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="690" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="690" name="param" description="Also set Reply-To and Sender" type="int" variable="$auto">
            <type by_reference="false">int</type>
          </tag>
          <tag line="690" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="690" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="698">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="698">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="698">
          <name>$auto</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="737" package="PHPMailer">
        <name>ValidateAddress</name>
        <full_name>ValidateAddress</full_name>
        <docblock line="724">
          <description>Check that a string looks roughly like an email address should
Static so it can be used without instantiation, public so people can overload
Conforms to RFC5322: Uses *correct* regex on which FILTER_VALIDATE_EMAIL is
based; So why not use FILTER_VALIDATE_EMAIL? Because it was broken to
not allow a@b type valid addresses :(</description>
          <long-description/>
          <tag line="724" name="link" description="http://squiloople.com/2009/12/20/email-address-validation/" link="http://squiloople.com/2009/12/20/email-address-validation/"/>
          <tag line="724" name="copyright" description="regex Copyright Michael Rushton 2009-10 | http://squiloople.com/ | Feel free to use and redistribute this code. But please keep this copyright notice."/>
          <tag line="724" name="param" description="The email address to check" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="724" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="724" name="static" description=""/>
          <tag line="724" name="access" description="public"/>
        </docblock>
        <argument line="737">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="752" package="PHPMailer">
        <name>Send</name>
        <full_name>Send</full_name>
        <docblock line="745">
          <description>Creates message and assigns Mailer.</description>
          <long-description>&lt;p&gt;If the message is
not sent successfully then it returns false.  Use the ErrorInfo
variable to view description of the error.&lt;/p&gt;</long-description>
          <tag line="745" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="745" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="771" package="PHPMailer">
        <name>PreSend</name>
        <full_name>PreSend</full_name>
        <docblock line="766">
          <description>Prep mail by constructing all message entities</description>
          <long-description/>
          <tag line="766" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="766" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="830" package="PHPMailer">
        <name>PostSend</name>
        <full_name>PostSend</full_name>
        <docblock line="824">
          <description>Actual Email transport function
Send the email via the selected mechanism</description>
          <long-description/>
          <tag line="824" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="824" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="863" package="PHPMailer">
        <name>SendmailSend</name>
        <full_name>SendmailSend</full_name>
        <docblock line="855">
          <description>Sends mail using the $Sendmail program.</description>
          <long-description/>
          <tag line="855" name="param" description="The message headers" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="855" name="param" description="The message body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="855" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="855" name="access" description="protected"/>
          <tag line="855" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="863">
          <name>$header</name>
          <default/>
          <type/>
        </argument>
        <argument line="863">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="910" package="PHPMailer">
        <name>MailSend</name>
        <full_name>MailSend</full_name>
        <docblock line="902">
          <description>Sends mail using the PHP mail() function.</description>
          <long-description/>
          <tag line="902" name="param" description="The message headers" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="902" name="param" description="The message body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="902" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="902" name="access" description="protected"/>
          <tag line="902" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="910">
          <name>$header</name>
          <default/>
          <type/>
        </argument>
        <argument line="910">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="959" package="PHPMailer">
        <name>SmtpSend</name>
        <full_name>SmtpSend</full_name>
        <docblock line="949">
          <description>Sends mail via SMTP using PhpSMTP
Returns false if there is a bad MAIL FROM, RCPT, or DATA input.</description>
          <long-description/>
          <tag line="949" name="param" description="The message headers" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="949" name="param" description="The message body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="949" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="949" name="uses" description="\SMTP" refers="\SMTP"/>
          <tag line="949" name="access" description="protected"/>
          <tag line="949" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="959">
          <name>$header</name>
          <default/>
          <type/>
        </argument>
        <argument line="959">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1034" package="PHPMailer">
        <name>SmtpConnect</name>
        <full_name>SmtpConnect</full_name>
        <docblock line="1026">
          <description>Initiates a connection to an SMTP server.</description>
          <long-description>&lt;p&gt;Returns false if the operation failed.&lt;/p&gt;</long-description>
          <tag line="1026" name="uses" description="\SMTP" refers="\SMTP"/>
          <tag line="1026" name="access" description="public"/>
          <tag line="1026" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="1026" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1100" package="PHPMailer">
        <name>SmtpClose</name>
        <full_name>SmtpClose</full_name>
        <docblock line="1096">
          <description>Closes the active SMTP session if one exists.</description>
          <long-description/>
          <tag line="1096" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1117" package="PHPMailer">
        <name>SetLanguage</name>
        <full_name>SetLanguage</full_name>
        <docblock line="1109">
          <description>Sets the language for all class error messages.</description>
          <long-description>&lt;p&gt;Returns false if it cannot load the language file.  The default language is English.&lt;/p&gt;</long-description>
          <tag line="1109" name="param" description="ISO 639-1 2-character language code (e.g. Portuguese: &quot;br&quot;)" type="string" variable="$langcode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1109" name="param" description="Path to the language file directory" type="string" variable="$lang_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1109" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1109" name="access" description="public"/>
        </docblock>
        <argument line="1117">
          <name>$langcode</name>
          <default>'en'</default>
          <type/>
        </argument>
        <argument line="1117">
          <name>$lang_path</name>
          <default>'language/'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1152" package="PHPMailer">
        <name>GetTranslations</name>
        <full_name>GetTranslations</full_name>
        <docblock line="1148">
          <description>Return the current array of language strings</description>
          <long-description/>
          <tag line="1148" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1167" package="PHPMailer">
        <name>AddrAppend</name>
        <full_name>AddrAppend</full_name>
        <docblock line="1160">
          <description>Creates recipient headers.</description>
          <long-description/>
          <tag line="1160" name="access" description="public"/>
          <tag line="1160" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1160" name="param" description="" type="array" variable="$addr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1160" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1167">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1167">
          <name>$addr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1185" package="PHPMailer">
        <name>AddrFormat</name>
        <full_name>AddrFormat</full_name>
        <docblock line="1179">
          <description>Formats an address correctly.</description>
          <long-description/>
          <tag line="1179" name="access" description="public"/>
          <tag line="1179" name="param" description="" type="string" variable="$addr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1179" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1185">
          <name>$addr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1203" package="PHPMailer">
        <name>WrapText</name>
        <full_name>WrapText</full_name>
        <docblock line="1193">
          <description>Wraps message for use with mailers that do not
automatically perform wrapping and for quoted-printable.</description>
          <long-description>&lt;p&gt;Original written by philippe.&lt;/p&gt;</long-description>
          <tag line="1193" name="param" description="The message to wrap" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1193" name="param" description="The line length to wrap to" type="integer" variable="$length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1193" name="param" description="Whether to run in Quoted-Printable mode" type="boolean" variable="$qp_mode">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1193" name="access" description="public"/>
          <tag line="1193" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1203">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="1203">
          <name>$length</name>
          <default/>
          <type/>
        </argument>
        <argument line="1203">
          <name>$qp_mode</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1287" package="PHPMailer">
        <name>UTF8CharBoundary</name>
        <full_name>UTF8CharBoundary</full_name>
        <docblock line="1278">
          <description>Finds last character boundary prior to maxLength in a utf-8
quoted (printable) encoded string.</description>
          <long-description>&lt;p&gt;Original written by Colin Brown.&lt;/p&gt;</long-description>
          <tag line="1278" name="access" description="public"/>
          <tag line="1278" name="param" description="utf-8 QP text" type="string" variable="$encodedText">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1278" name="param" description="find last character boundary prior to this length" type="int" variable="$maxLength">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1278" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="1287">
          <name>$encodedText</name>
          <default/>
          <type/>
        </argument>
        <argument line="1287">
          <name>$maxLength</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1325" package="PHPMailer">
        <name>SetWordWrap</name>
        <full_name>SetWordWrap</full_name>
        <docblock line="1320">
          <description>Set the body wrapping.</description>
          <long-description/>
          <tag line="1320" name="access" description="public"/>
          <tag line="1320" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1348" package="PHPMailer">
        <name>CreateHeader</name>
        <full_name>CreateHeader</full_name>
        <docblock line="1343">
          <description>Assembles message header.</description>
          <long-description/>
          <tag line="1343" name="access" description="public"/>
          <tag line="1343" name="return" description="The assembled header" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1446" package="PHPMailer">
        <name>GetMailMIME</name>
        <full_name>GetMailMIME</full_name>
        <docblock line="1441">
          <description>Returns the message MIME.</description>
          <long-description/>
          <tag line="1441" name="access" description="public"/>
          <tag line="1441" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1484" package="PHPMailer">
        <name>GetSentMIMEMessage</name>
        <full_name>GetSentMIMEMessage</full_name>
        <docblock line="1479">
          <description>Returns the MIME message (headers and body).</description>
          <long-description>&lt;p&gt;Only really valid post PreSend().&lt;/p&gt;</long-description>
          <tag line="1479" name="access" description="public"/>
          <tag line="1479" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1495" package="PHPMailer">
        <name>CreateBody</name>
        <full_name>CreateBody</full_name>
        <docblock line="1489">
          <description>Assembles the message body.</description>
          <long-description>&lt;p&gt;Returns an empty string on failure.&lt;/p&gt;</long-description>
          <tag line="1489" name="access" description="public"/>
          <tag line="1489" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="1489" name="return" description="The assembled message body" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1631" package="PHPMailer">
        <name>GetBoundary</name>
        <full_name>GetBoundary</full_name>
        <docblock line="1622">
          <description>Returns the start of a message boundary.</description>
          <long-description/>
          <tag line="1622" name="access" description="protected"/>
          <tag line="1622" name="param" description="" type="string" variable="$boundary">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1622" name="param" description="" type="string" variable="$charSet">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1622" name="param" description="" type="string" variable="$contentType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1622" name="param" description="" type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1622" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1631">
          <name>$boundary</name>
          <default/>
          <type/>
        </argument>
        <argument line="1631">
          <name>$charSet</name>
          <default/>
          <type/>
        </argument>
        <argument line="1631">
          <name>$contentType</name>
          <default/>
          <type/>
        </argument>
        <argument line="1631">
          <name>$encoding</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1657" package="PHPMailer">
        <name>EndBoundary</name>
        <full_name>EndBoundary</full_name>
        <docblock line="1651">
          <description>Returns the end of a message boundary.</description>
          <long-description/>
          <tag line="1651" name="access" description="protected"/>
          <tag line="1651" name="param" description="" type="string" variable="$boundary">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1651" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1657">
          <name>$boundary</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1666" package="PHPMailer">
        <name>SetMessageType</name>
        <full_name>SetMessageType</full_name>
        <docblock line="1661">
          <description>Sets the message type.</description>
          <long-description/>
          <tag line="1661" name="access" description="protected"/>
          <tag line="1661" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1682" package="PHPMailer">
        <name>HeaderLine</name>
        <full_name>HeaderLine</full_name>
        <docblock line="1675">
          <description>Returns a formatted header line.</description>
          <long-description/>
          <tag line="1675" name="access" description="public"/>
          <tag line="1675" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1675" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1675" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1682">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="1682">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1692" package="PHPMailer">
        <name>TextLine</name>
        <full_name>TextLine</full_name>
        <docblock line="1686">
          <description>Returns a formatted mail line.</description>
          <long-description/>
          <tag line="1686" name="access" description="public"/>
          <tag line="1686" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1686" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1692">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1711" package="PHPMailer">
        <name>AddAttachment</name>
        <full_name>AddAttachment</full_name>
        <docblock line="1700">
          <description>Adds an attachment from a path on the filesystem.</description>
          <long-description>&lt;p&gt;Returns false if the file could not be found
or accessed.&lt;/p&gt;</long-description>
          <tag line="1700" name="param" description="Path to the attachment." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1700" name="param" description="Overrides the attachment name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1700" name="param" description="File encoding (see $Encoding)." type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1700" name="param" description="File extension (MIME) type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1700" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="1700" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1711">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="1711">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="1711">
          <name>$encoding</name>
          <default>'base64'</default>
          <type/>
        </argument>
        <argument line="1711">
          <name>$type</name>
          <default>'application/octet-stream'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1751" package="PHPMailer">
        <name>GetAttachments</name>
        <full_name>GetAttachments</full_name>
        <docblock line="1747">
          <description>Return the current array of attachments</description>
          <long-description/>
          <tag line="1747" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1763" package="PHPMailer">
        <name>AttachAll</name>
        <full_name>AttachAll</full_name>
        <docblock line="1755">
          <description>Attaches all fs, string, and binary attachments to the message.</description>
          <long-description>&lt;p&gt;Returns an empty string on failure.&lt;/p&gt;</long-description>
          <tag line="1755" name="access" description="protected"/>
          <tag line="1755" name="param" description="" type="string" variable="$disposition_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1755" name="param" description="" type="string" variable="$boundary">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1755" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1763">
          <name>$disposition_type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1763">
          <name>$boundary</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1837" package="PHPMailer">
        <name>EncodeFile</name>
        <full_name>EncodeFile</full_name>
        <docblock line="1827">
          <description>Encodes attachment in requested format.</description>
          <long-description>&lt;p&gt;Returns an empty string on failure.&lt;/p&gt;</long-description>
          <tag line="1827" name="param" description="The full path to the file" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1827" name="param" description="The encoding to use; one of 'base64', '7bit', '8bit', 'binary', 'quoted-printable'" type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1827" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="1827" name="see" description="\EncodeFile()" refers="\EncodeFile()"/>
          <tag line="1827" name="access" description="protected"/>
          <tag line="1827" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1837">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="1837">
          <name>$encoding</name>
          <default>'base64'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1879" package="PHPMailer">
        <name>EncodeString</name>
        <full_name>EncodeString</full_name>
        <docblock line="1871">
          <description>Encodes string to requested format.</description>
          <long-description>&lt;p&gt;Returns an empty string on failure.&lt;/p&gt;</long-description>
          <tag line="1871" name="param" description="The text to encode" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1871" name="param" description="The encoding to use; one of 'base64', '7bit', '8bit', 'binary', 'quoted-printable'" type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1871" name="access" description="public"/>
          <tag line="1871" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1879">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
        <argument line="1879">
          <name>$encoding</name>
          <default>'base64'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1912" package="PHPMailer">
        <name>EncodeHeader</name>
        <full_name>EncodeHeader</full_name>
        <docblock line="1905">
          <description>Encode a header string to best (shortest) of Q, B, quoted or none.</description>
          <long-description/>
          <tag line="1905" name="access" description="public"/>
          <tag line="1905" name="param" description="" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1905" name="param" description="" type="string" variable="$position">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1905" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1912">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
        <argument line="1912">
          <name>$position</name>
          <default>'text'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1973" package="PHPMailer">
        <name>HasMultiBytes</name>
        <full_name>HasMultiBytes</full_name>
        <docblock line="1967">
          <description>Checks if a string contains multibyte characters.</description>
          <long-description/>
          <tag line="1967" name="access" description="public"/>
          <tag line="1967" name="param" description="multi-byte text to wrap encode" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1967" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1973">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1990" package="PHPMailer">
        <name>Base64EncodeWrapMB</name>
        <full_name>Base64EncodeWrapMB</full_name>
        <docblock line="1981">
          <description>Correctly encodes and wraps long multibyte strings for mail headers
without breaking lines within a character.</description>
          <long-description>&lt;p&gt;Adapted from a function by paravoid at http://uk.php.net/manual/en/function.mb-encode-mimeheader.php&lt;/p&gt;</long-description>
          <tag line="1981" name="access" description="public"/>
          <tag line="1981" name="param" description="multi-byte text to wrap encode" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1981" name="param" description="string to use as linefeed/end-of-line" type="string" variable="$lf">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1981" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1990">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
        <argument line="1990">
          <name>$lf</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2035" package="PHPMailer">
        <name>EncodeQPphp</name>
        <full_name>EncodeQPphp</full_name>
        <docblock line="2025">
          <description>Encode string to quoted-printable.</description>
          <long-description>&lt;p&gt;Only uses standard PHP, slow, but will always work&lt;/p&gt;</long-description>
          <tag line="2025" name="access" description="public"/>
          <tag line="2025" name="param" description="" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2025" name="param" description="Number of chars allowed on a line before wrapping" type="integer" variable="$line_max">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="2025" name="param" description="" type="bool" variable="$space_conv">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="2025" name="internal" description="param string $string the text to encode"/>
          <tag line="2025" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2035">
          <name>$input</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="2035">
          <name>$line_max</name>
          <default>76</default>
          <type/>
        </argument>
        <argument line="2035">
          <name>$space_conv</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2088" package="PHPMailer">
        <name>EncodeQP</name>
        <full_name>EncodeQP</full_name>
        <docblock line="2076">
          <description>Encode string to RFC2045 (6.7) quoted-printable format
Uses a PHP5 stream filter to do the encoding about 64x faster than the old version
Also results in same content as you started with after decoding</description>
          <long-description/>
          <tag line="2076" name="see" description="\EncodeQPphp()" refers="\EncodeQPphp()"/>
          <tag line="2076" name="access" description="public"/>
          <tag line="2076" name="param" description="the text to encode" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2076" name="param" description="Number of chars allowed on a line before wrapping" type="integer" variable="$line_max">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="2076" name="param" description="Dummy param for compatibility with existing EncodeQP function" type="boolean" variable="$space_conv">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2076" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2076" name="author" description="Marcus Bointon"/>
        </docblock>
        <argument line="2088">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
        <argument line="2088">
          <name>$line_max</name>
          <default>76</default>
          <type/>
        </argument>
        <argument line="2088">
          <name>$space_conv</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2117" package="PHPMailer">
        <name>EncodeQ</name>
        <full_name>EncodeQ</full_name>
        <docblock line="2109">
          <description>Encode string to q encoding.</description>
          <long-description/>
          <tag line="2109" name="link" description="http://tools.ietf.org/html/rfc2047" link="http://tools.ietf.org/html/rfc2047"/>
          <tag line="2109" name="param" description="the text to encode" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2109" name="param" description="Where the text is going to be used, see the RFC for what that means" type="string" variable="$position">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2109" name="access" description="public"/>
          <tag line="2109" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2117">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
        <argument line="2117">
          <name>$position</name>
          <default>'text'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2160" package="PHPMailer">
        <name>AddStringAttachment</name>
        <full_name>AddStringAttachment</full_name>
        <docblock line="2150">
          <description>Adds a string or binary attachment (non-filesystem) to the list.</description>
          <long-description>&lt;p&gt;This method can be used to attach ascii or binary data,
such as a BLOB record from a database.&lt;/p&gt;</long-description>
          <tag line="2150" name="param" description="String attachment data." type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2150" name="param" description="Name of the attachment." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2150" name="param" description="File encoding (see $Encoding)." type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2150" name="param" description="File extension (MIME) type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2150" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2160">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
        <argument line="2160">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="2160">
          <name>$encoding</name>
          <default>'base64'</default>
          <type/>
        </argument>
        <argument line="2160">
          <name>$type</name>
          <default>'application/octet-stream'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2187" package="PHPMailer">
        <name>AddEmbeddedImage</name>
        <full_name>AddEmbeddedImage</full_name>
        <docblock line="2174">
          <description>Adds an embedded attachment.</description>
          <long-description>&lt;p&gt;This can include images, sounds, and
just about any other document.  Make sure to set the $type to an
image type.  For JPEG images use "image/jpeg" and for GIF images
use "image/gif".&lt;/p&gt;</long-description>
          <tag line="2174" name="param" description="Path to the attachment." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2174" name="param" description="Content ID of the attachment.  Use this to identify&#10;       the Id for accessing the image in an HTML form." type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2174" name="param" description="Overrides the attachment name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2174" name="param" description="File encoding (see $Encoding)." type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2174" name="param" description="File extension (MIME) type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2174" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="2187">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="2187">
          <name>$cid</name>
          <default/>
          <type/>
        </argument>
        <argument line="2187">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="2187">
          <name>$encoding</name>
          <default>'base64'</default>
          <type/>
        </argument>
        <argument line="2187">
          <name>$type</name>
          <default>'application/octet-stream'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2227" package="PHPMailer">
        <name>AddStringEmbeddedImage</name>
        <full_name>AddStringEmbeddedImage</full_name>
        <docblock line="2214">
          <description>Adds an embedded stringified attachment.</description>
          <long-description>&lt;p&gt;This can include images, sounds, and
just about any other document.  Make sure to set the $type to an
image type.  For JPEG images use "image/jpeg" and for GIF images
use "image/gif".&lt;/p&gt;</long-description>
          <tag line="2214" name="param" description="The attachment." type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2214" name="param" description="Content ID of the attachment.  Use this to identify&#10;       the Id for accessing the image in an HTML form." type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2214" name="param" description="Overrides the attachment name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2214" name="param" description="File encoding (see $Encoding)." type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2214" name="param" description="File extension (MIME) type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2214" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="2227">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
        <argument line="2227">
          <name>$cid</name>
          <default/>
          <type/>
        </argument>
        <argument line="2227">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="2227">
          <name>$encoding</name>
          <default>'base64'</default>
          <type/>
        </argument>
        <argument line="2227">
          <name>$type</name>
          <default>'application/octet-stream'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2246" package="PHPMailer">
        <name>InlineImageExists</name>
        <full_name>InlineImageExists</full_name>
        <docblock line="2241">
          <description>Returns true if an inline attachment is present.</description>
          <long-description/>
          <tag line="2241" name="access" description="public"/>
          <tag line="2241" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2259" package="PHPMailer">
        <name>AttachmentExists</name>
        <full_name>AttachmentExists</full_name>
        <docblock line="2255">
          <description>Returns true if an attachment (non-inline) is present.</description>
          <long-description/>
          <tag line="2255" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2272" package="PHPMailer">
        <name>AlternativeExists</name>
        <full_name>AlternativeExists</full_name>
        <docblock line="2268">
          <description>Does this message have an alternative body set?</description>
          <long-description/>
          <tag line="2268" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2284" package="PHPMailer">
        <name>ClearAddresses</name>
        <full_name>ClearAddresses</full_name>
        <docblock line="2280">
          <description>Clears all recipients assigned in the TO array.</description>
          <long-description>&lt;p&gt;Returns void.&lt;/p&gt;</long-description>
          <tag line="2280" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2295" package="PHPMailer">
        <name>ClearCCs</name>
        <full_name>ClearCCs</full_name>
        <docblock line="2291">
          <description>Clears all recipients assigned in the CC array.</description>
          <long-description>&lt;p&gt;Returns void.&lt;/p&gt;</long-description>
          <tag line="2291" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2306" package="PHPMailer">
        <name>ClearBCCs</name>
        <full_name>ClearBCCs</full_name>
        <docblock line="2302">
          <description>Clears all recipients assigned in the BCC array.</description>
          <long-description>&lt;p&gt;Returns void.&lt;/p&gt;</long-description>
          <tag line="2302" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2317" package="PHPMailer">
        <name>ClearReplyTos</name>
        <full_name>ClearReplyTos</full_name>
        <docblock line="2313">
          <description>Clears all recipients assigned in the ReplyTo array.</description>
          <long-description>&lt;p&gt;Returns void.&lt;/p&gt;</long-description>
          <tag line="2313" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2326" package="PHPMailer">
        <name>ClearAllRecipients</name>
        <full_name>ClearAllRecipients</full_name>
        <docblock line="2321">
          <description>Clears all recipients assigned in the TO, CC and BCC
array.</description>
          <long-description>&lt;p&gt;Returns void.&lt;/p&gt;</long-description>
          <tag line="2321" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2338" package="PHPMailer">
        <name>ClearAttachments</name>
        <full_name>ClearAttachments</full_name>
        <docblock line="2333">
          <description>Clears all previously set filesystem, string, and binary
attachments.</description>
          <long-description>&lt;p&gt;Returns void.&lt;/p&gt;</long-description>
          <tag line="2333" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2346" package="PHPMailer">
        <name>ClearCustomHeaders</name>
        <full_name>ClearCustomHeaders</full_name>
        <docblock line="2342">
          <description>Clears all custom headers.</description>
          <long-description>&lt;p&gt;Returns void.&lt;/p&gt;</long-description>
          <tag line="2342" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2360" package="PHPMailer">
        <name>SetError</name>
        <full_name>SetError</full_name>
        <docblock line="2354">
          <description>Adds the error message to the error container.</description>
          <long-description/>
          <tag line="2354" name="access" description="protected"/>
          <tag line="2354" name="param" description="" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2354" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2360">
          <name>$msg</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="2377" package="PHPMailer">
        <name>RFCDate</name>
        <full_name>RFCDate</full_name>
        <docblock line="2371">
          <description>Returns the proper RFC 822 formatted date.</description>
          <long-description/>
          <tag line="2371" name="access" description="public"/>
          <tag line="2371" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2371" name="static" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2392" package="PHPMailer">
        <name>ServerHostname</name>
        <full_name>ServerHostname</full_name>
        <docblock line="2387">
          <description>Returns the server hostname or 'localhost.localdomain' if unknown.</description>
          <long-description/>
          <tag line="2387" name="access" description="protected"/>
          <tag line="2387" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2410" package="PHPMailer">
        <name>Lang</name>
        <full_name>Lang</full_name>
        <docblock line="2404">
          <description>Returns a message in the appropriate language.</description>
          <long-description/>
          <tag line="2404" name="access" description="protected"/>
          <tag line="2404" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2404" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2410">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2427" package="PHPMailer">
        <name>IsError</name>
        <full_name>IsError</full_name>
        <docblock line="2422">
          <description>Returns true if an error occurred.</description>
          <long-description/>
          <tag line="2422" name="access" description="public"/>
          <tag line="2422" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2437" package="PHPMailer">
        <name>FixEOL</name>
        <full_name>FixEOL</full_name>
        <docblock line="2431">
          <description>Changes every end of line from CRLF, CR or LF to $this-&gt;LE.</description>
          <long-description/>
          <tag line="2431" name="access" description="public"/>
          <tag line="2431" name="param" description="String to FixEOL" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2431" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2437">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2455" package="PHPMailer">
        <name>AddCustomHeader</name>
        <full_name>AddCustomHeader</full_name>
        <docblock line="2447">
          <description>Adds a custom header.</description>
          <long-description>&lt;p&gt;$name value can be overloaded to contain
both header name and value (name:value)&lt;/p&gt;</long-description>
          <tag line="2447" name="access" description="public"/>
          <tag line="2447" name="param" description="custom header name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2447" name="param" description="header value" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2447" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2455">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="2455">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2471" package="PHPMailer">
        <name>MsgHTML</name>
        <full_name>MsgHTML</full_name>
        <docblock line="2464">
          <description>Evaluates the message and returns modifications for inline images and backgrounds</description>
          <long-description/>
          <tag line="2464" name="access" description="public"/>
          <tag line="2464" name="param" description="Text to be HTML modified" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2464" name="param" description="baseline directory for path" type="string" variable="$basedir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2464" name="return" description="$message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2471">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="2471">
          <name>$basedir</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="2514" package="PHPMailer">
        <name>_mime_types</name>
        <full_name>_mime_types</full_name>
        <docblock line="2507">
          <description>Gets the MIME type of the embedded or inline image</description>
          <long-description/>
          <tag line="2507" name="param" description="File extension" type="string" variable="$ext">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2507" name="access" description="public"/>
          <tag line="2507" name="return" description="MIME type of ext" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2507" name="static" description=""/>
        </docblock>
        <argument line="2514">
          <name>$ext</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2620" package="PHPMailer">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="2606">
          <description>Set (or reset) Class Objects (variables)</description>
          <long-description>&lt;p&gt;Usage Example:
$page-&gt;set('X-Priority', '3');&lt;/p&gt;</long-description>
          <tag line="2606" name="access" description="public"/>
          <tag line="2606" name="param" description="Parameter Name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2606" name="param" description="Parameter Value&#10;NOTE: will not work with arrays, there are no arrays to set/reset" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2606" name="throws" description="" type="\phpmailerException">
            <type by_reference="false">\phpmailerException</type>
          </tag>
          <tag line="2606" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="2606" name="todo" description="Should this not be using __set() magic function?"/>
        </docblock>
        <argument line="2620">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="2620">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2642" package="PHPMailer">
        <name>SecureHeader</name>
        <full_name>SecureHeader</full_name>
        <docblock line="2636">
          <description>Strips newlines to prevent header injection.</description>
          <long-description/>
          <tag line="2636" name="access" description="public"/>
          <tag line="2636" name="param" description="String" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2636" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2642">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2654" package="PHPMailer">
        <name>Sign</name>
        <full_name>Sign</full_name>
        <docblock line="2646">
          <description>Set the private key file and password to sign the message.</description>
          <long-description/>
          <tag line="2646" name="access" description="public"/>
          <tag line="2646" name="param" description="" type="\" variable="$cert_filename"/>
          <tag line="2646" name="param" description="Parameter File Name" type="string" variable="$key_filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2646" name="param" description="Password for private key" type="string" variable="$key_pass">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2654">
          <name>$cert_filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="2654">
          <name>$key_filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="2654">
          <name>$key_pass</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2667" package="PHPMailer">
        <name>DKIM_QP</name>
        <full_name>DKIM_QP</full_name>
        <docblock line="2660">
          <description>Set the private key file and password to sign the message.</description>
          <long-description/>
          <tag line="2660" name="access" description="public"/>
          <tag line="2660" name="param" description="" type="string" variable="$txt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2660" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2667">
          <name>$txt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2687" package="PHPMailer">
        <name>DKIM_Sign</name>
        <full_name>DKIM_Sign</full_name>
        <docblock line="2680">
          <description>Generate DKIM signature</description>
          <long-description/>
          <tag line="2680" name="access" description="public"/>
          <tag line="2680" name="param" description="Header" type="string" variable="$s">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2680" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2687">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2707" package="PHPMailer">
        <name>DKIM_HeaderC</name>
        <full_name>DKIM_HeaderC</full_name>
        <docblock line="2700">
          <description>Generate DKIM Canonicalization Header</description>
          <long-description/>
          <tag line="2700" name="access" description="public"/>
          <tag line="2700" name="param" description="Header" type="string" variable="$s">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2700" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2707">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2727" package="PHPMailer">
        <name>DKIM_BodyC</name>
        <full_name>DKIM_BodyC</full_name>
        <docblock line="2720">
          <description>Generate DKIM Canonicalization Body</description>
          <long-description/>
          <tag line="2720" name="access" description="public"/>
          <tag line="2720" name="param" description="Message Body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2720" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2727">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2748" package="PHPMailer">
        <name>DKIM_Add</name>
        <full_name>DKIM_Add</full_name>
        <docblock line="2739">
          <description>Create the DKIM header, body, as new header</description>
          <long-description/>
          <tag line="2739" name="access" description="public"/>
          <tag line="2739" name="param" description="Header lines" type="string" variable="$headers_line">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2739" name="param" description="Subject" type="string" variable="$subject">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2739" name="param" description="Body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2739" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2748">
          <name>$headers_line</name>
          <default/>
          <type/>
        </argument>
        <argument line="2748">
          <name>$subject</name>
          <default/>
          <type/>
        </argument>
        <argument line="2748">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2795" package="PHPMailer">
        <name>doCallback</name>
        <full_name>doCallback</full_name>
        <docblock line="2785">
          <description>Perform callback</description>
          <long-description/>
          <tag line="2785" name="param" description="" type="boolean" variable="$isSent">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2785" name="param" description="" type="string" variable="$to">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2785" name="param" description="" type="string" variable="$cc">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2785" name="param" description="" type="string" variable="$bcc">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2785" name="param" description="" type="string" variable="$subject">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2785" name="param" description="" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2785" name="param" description="" type="string" variable="$from">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2795">
          <name>$isSent</name>
          <default/>
          <type/>
        </argument>
        <argument line="2795">
          <name>$to</name>
          <default/>
          <type/>
        </argument>
        <argument line="2795">
          <name>$cc</name>
          <default/>
          <type/>
        </argument>
        <argument line="2795">
          <name>$bcc</name>
          <default/>
          <type/>
        </argument>
        <argument line="2795">
          <name>$subject</name>
          <default/>
          <type/>
        </argument>
        <argument line="2795">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
        <argument line="2795">
          <name>$from</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2807" package="PHPMailer">
      <extends>\Exception</extends>
      <name>phpmailerException</name>
      <full_name>\phpmailerException</full_name>
      <docblock line="2803">
        <description>Exception handler for PHPMailer</description>
        <long-description/>
        <tag line="2803" name="package" description="PHPMailer"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2812" package="PHPMailer">
        <name>errorMessage</name>
        <full_name>errorMessage</full_name>
        <docblock line="2808">
          <description>Prettify error message output</description>
          <long-description/>
          <tag line="2808" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="1600">check this worked</todo>
    </markers>
  </file>
  <file path="libs/phpmailer/extras/ntlm_sasl_client.php" hash="362d79dfcbd380c9595c94011310049e" package="Default">
    <constant namespace="global" line="14" package="Default">
      <name>SASL_NTLM_STATE_START</name>
      <full_name>\SASL_NTLM_STATE_START</full_name>
      <value>0</value>
    </constant>
    <constant namespace="global" line="15" package="Default">
      <name>SASL_NTLM_STATE_IDENTIFY_DOMAIN</name>
      <full_name>\SASL_NTLM_STATE_IDENTIFY_DOMAIN</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="16" package="Default">
      <name>SASL_NTLM_STATE_RESPOND_CHALLENGE</name>
      <full_name>\SASL_NTLM_STATE_RESPOND_CHALLENGE</full_name>
      <value>2</value>
    </constant>
    <constant namespace="global" line="17" package="Default">
      <name>SASL_NTLM_STATE_DONE</name>
      <full_name>\SASL_NTLM_STATE_DONE</full_name>
      <value>3</value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="19" package="Default">
      <extends/>
      <name>ntlm_sasl_client_class</name>
      <full_name>\ntlm_sasl_client_class</full_name>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$credentials</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$state</name>
        <default>SASL_NTLM_STATE_START</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>Initialize</name>
        <full_name>Initialize</full_name>
        <argument line="24">
          <name>$client</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Default">
        <name>ASCIIToUnicode</name>
        <full_name>ASCIIToUnicode</full_name>
        <argument line="39">
          <name>$ascii</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Default">
        <name>TypeMsg1</name>
        <full_name>TypeMsg1</full_name>
        <argument line="46">
          <name>$domain</name>
          <default/>
          <type/>
        </argument>
        <argument line="46">
          <name>$workstation</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Default">
        <name>NTLMResponse</name>
        <full_name>NTLMResponse</full_name>
        <argument line="67">
          <name>$challenge</name>
          <default/>
          <type/>
        </argument>
        <argument line="67">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="Default">
        <name>TypeMsg3</name>
        <full_name>TypeMsg3</full_name>
        <argument line="90">
          <name>$ntlm_response</name>
          <default/>
          <type/>
        </argument>
        <argument line="90">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="90">
          <name>$domain</name>
          <default/>
          <type/>
        </argument>
        <argument line="90">
          <name>$workstation</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="Default">
        <name>Start</name>
        <full_name>Start</full_name>
        <argument line="140">
          <name>$client</name>
          <default/>
          <type/>
        </argument>
        <argument line="140">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="140">
          <name>$interactions</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="Default">
        <name>Step</name>
        <full_name>Step</full_name>
        <argument line="161">
          <name>$client</name>
          <default/>
          <type/>
        </argument>
        <argument line="161">
          <name>$response</name>
          <default/>
          <type/>
        </argument>
        <argument line="161">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="161">
          <name>$interactions</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libs/phpmailer/extras/ntlm_sasl_client.php</error>
      <error line="19" code="50000">No DocBlock was found for \ntlm_sasl_client_class</error>
      <error line="21" code="50018">No DocBlock was found for property $credentials</error>
      <error line="22" code="50018">No DocBlock was found for property $state</error>
      <error line="24" code="50010">No DocBlock was found for method Initialize()</error>
      <error line="39" code="50010">No DocBlock was found for method ASCIIToUnicode()</error>
      <error line="46" code="50010">No DocBlock was found for method TypeMsg1()</error>
      <error line="67" code="50010">No DocBlock was found for method NTLMResponse()</error>
      <error line="90" code="50010">No DocBlock was found for method TypeMsg3()</error>
      <error line="140" code="50010">No DocBlock was found for method Start()</error>
      <error line="161" code="50010">No DocBlock was found for method Step()</error>
    </parse_markers>
  </file>
  <file path="libs/phpmailer/extras/htmlfilter.php" hash="a49d2b974950ce916b99e2b2ac56a8ed" package="PHPMailer\htmlfilter">
    <docblock line="2">
      <description>htmlfilter.inc
---------------
This set of functions allows you to filter html in order to remove
any malicious tags from it.</description>
      <long-description>&lt;p&gt;Useful in cases when you need to filter
user input for any cross-site-scripting attempts.&lt;/p&gt;

&lt;p&gt;Copyright (C) 2002-2004 by Duke University&lt;/p&gt;

&lt;p&gt;This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.&lt;/p&gt;

&lt;p&gt;This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU
Lesser General Public License for more details.&lt;/p&gt;

&lt;p&gt;You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301  USA&lt;/p&gt;</long-description>
      <tag line="2" name="Author" description="Konstantin Riabitsev &lt;icon@linux.duke.edu&gt;"/>
      <tag line="2" name="Version" description=".1 ($Date: 2011-07-04 14:02:23 -0400 (Mon, 04 Jul 2011) $" plugin="doctrine" link="http://www.doctrine-project.org/docs/orm/2.1/en/reference/annotations-reference.html#annref-version" content="1.1 ($Date: 2011-07-04 14:02:23 -0400 (Mon, 04 Jul 2011) $)">
        <argument field-name="">1.1 ($Date: 2011-07-04 14:02:23 -0400 (Mon</argument>
        <argument field-name="">04 Jul 2011) $)</argument>
      </tag>
      <tag line="2" name="package" description="PHPMailer_htmlfilter"/>
    </docblock>
    <function namespace="global" line="46" package="PHPMailer\htmlfilter">
      <name>tln_tagprint</name>
      <full_name>\tln_tagprint</full_name>
      <docblock line="36">
        <description>This function returns the final tag out of the tag name, an array
of attributes, and the type of the tag.</description>
        <long-description>&lt;p&gt;This function is called by
tln_sanitize internally.&lt;/p&gt;</long-description>
        <tag line="36" name="param" description="the name of the tag." type="\global\" variable="$tagname"/>
        <tag line="36" name="param" description="the array of attributes and their values" type="\global\" variable="$attary"/>
        <tag line="36" name="param" description="The type of the tag (see in comments)." type="\global\" variable="$tagtype"/>
        <tag line="36" name="return" description="string with the final tag representation." type="\a">
          <type by_reference="false">\a</type>
        </tag>
      </docblock>
      <argument line="46">
        <name>$tagname</name>
        <default></default>
        <type/>
      </argument>
      <argument line="46">
        <name>$attary</name>
        <default></default>
        <type/>
      </argument>
      <argument line="46">
        <name>$tagtype</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="74" package="PHPMailer\htmlfilter">
      <name>tln_casenormalize</name>
      <full_name>\tln_casenormalize</full_name>
      <docblock line="67">
        <description>A small helper function to use with array_walk.</description>
        <long-description>&lt;p&gt;Modifies a by-ref
value and makes it lowercase.&lt;/p&gt;</long-description>
        <tag line="67" name="param" description="a value passed by-ref." type="\global\" variable="$val"/>
        <tag line="67" name="return" description="since it modifies a by-ref value." type="void">
          <type by_reference="false">void</type>
        </tag>
      </docblock>
      <argument line="74">
        <name>$val</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="88" package="PHPMailer\htmlfilter">
      <name>tln_skipspace</name>
      <full_name>\tln_skipspace</full_name>
      <docblock line="78">
        <description>This function skips any whitespace from the current position within
a string and to the next non-whitespace value.</description>
        <long-description></long-description>
        <tag line="78" name="param" description="the string" type="\global\" variable="$body"/>
        <tag line="78" name="param" description="the offset within the string where we should start&#10;&#9;&#9;&#9;   looking for the next non-whitespace character." type="\global\" variable="$offset"/>
        <tag line="78" name="return" description="location within the $body where the next&#10;&#9;&#9;&#9;   non-whitespace char is located." type="\the">
          <type by_reference="false">\the</type>
        </tag>
      </docblock>
      <argument line="88">
        <name>$body</name>
        <default></default>
        <type/>
      </argument>
      <argument line="88">
        <name>$offset</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="109" package="PHPMailer\htmlfilter">
      <name>tln_findnxstr</name>
      <full_name>\tln_findnxstr</full_name>
      <docblock line="98">
        <description>This function looks for the next character within a string.</description>
        <long-description>&lt;p&gt;It's
really just a glorified "strpos", except it catches the failures
nicely.&lt;/p&gt;</long-description>
        <tag line="98" name="param" description="The string to look for needle in." type="\global\" variable="$body"/>
        <tag line="98" name="param" description="Start looking from this position." type="\global\" variable="$offset"/>
        <tag line="98" name="param" description="The character/string to look for." type="\global\" variable="$needle"/>
        <tag line="98" name="return" description="of the next occurance of the needle, or&#10;&#9;&#9;&#9;   strlen($body) if needle wasn't found." type="\location">
          <type by_reference="false">\location</type>
        </tag>
      </docblock>
      <argument line="109">
        <name>$body</name>
        <default></default>
        <type/>
      </argument>
      <argument line="109">
        <name>$offset</name>
        <default></default>
        <type/>
      </argument>
      <argument line="109">
        <name>$needle</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="131" package="PHPMailer\htmlfilter">
      <name>tln_findnxreg</name>
      <full_name>\tln_findnxreg</full_name>
      <docblock line="118">
        <description>This function takes a PCRE-style regexp and tries to match it
within the string.</description>
        <long-description></long-description>
        <tag line="118" name="param" description="The string to look for needle in." type="\global\" variable="$body"/>
        <tag line="118" name="param" description="Start looking from here." type="\global\" variable="$offset"/>
        <tag line="118" name="param" description="A PCRE-style regex to match." type="\global\" variable="$reg"/>
        <tag line="118" name="return" description="a false if no matches found, or an array&#10;&#9;&#9;&#9;   with the following members:&#10;&#9;&#9;&#9;   - integer with the location of the match within $body&#10;&#9;&#9;&#9;   - string with whatever content between offset and the match&#10;&#9;&#9;&#9;   - string with whatever it is we matched" type="\Returns">
          <type by_reference="false">\Returns</type>
        </tag>
      </docblock>
      <argument line="131">
        <name>$body</name>
        <default></default>
        <type/>
      </argument>
      <argument line="131">
        <name>$offset</name>
        <default></default>
        <type/>
      </argument>
      <argument line="131">
        <name>$reg</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="161" package="PHPMailer\htmlfilter">
      <name>tln_getnxtag</name>
      <full_name>\tln_getnxtag</full_name>
      <docblock line="147">
        <description>This function looks for the next tag.</description>
        <long-description></long-description>
        <tag line="147" name="param" description="String where to look for the next tag." type="\global\" variable="$body"/>
        <tag line="147" name="param" description="Start looking from here." type="\global\" variable="$offset"/>
        <tag line="147" name="return" description="if no more tags exist in the body, or&#10;&#9;&#9;&#9;   an array with the following members:&#10;&#9;&#9;&#9;   - string with the name of the tag&#10;&#9;&#9;&#9;   - array with attributes and their values&#10;&#9;&#9;&#9;   - integer with tag type (1, 2, or 3)&#10;&#9;&#9;&#9;   - integer where the tag starts (starting &quot;&lt;&quot;)&#10;&#9;&#9;&#9;   - integer where the tag ends (ending &quot;&gt;&quot;)&#10;&#9;&#9;&#9;   first three members will be false, if the tag is invalid." type="false">
          <type by_reference="false">false</type>
        </tag>
      </docblock>
      <argument line="161">
        <name>$body</name>
        <default></default>
        <type/>
      </argument>
      <argument line="161">
        <name>$offset</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="446" package="PHPMailer\htmlfilter">
      <name>tln_deent</name>
      <full_name>\tln_deent</full_name>
      <docblock line="438">
        <description>Translates entities into literal values so they can be checked.</description>
        <long-description></long-description>
        <tag line="438" name="param" description="the by-ref value to check." type="\global\" variable="$attvalue"/>
        <tag line="438" name="param" description="the regular expression to check against." type="\global\" variable="$regex"/>
        <tag line="438" name="param" description="whether the entites are hexadecimal." type="\global\" variable="$hex"/>
        <tag line="438" name="return" description="or False depending on whether there were matches." type="True">
          <type by_reference="false">True</type>
        </tag>
      </docblock>
      <argument line="446">
        <name>$attvalue</name>
        <default></default>
        <type/>
      </argument>
      <argument line="446">
        <name>$regex</name>
        <default></default>
        <type/>
      </argument>
      <argument line="446">
        <name>$hex</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="474" package="PHPMailer\htmlfilter">
      <name>tln_defang</name>
      <full_name>\tln_defang</full_name>
      <docblock line="466">
        <description>This function checks attribute values for entity-encoded values
and returns them translated into 8-bit strings so we can run
checks on them.</description>
        <long-description></long-description>
        <tag line="466" name="param" description="A string to run entity check against." type="\global\" variable="$attvalue"/>
        <tag line="466" name="return" description="modifies a reference value." type="\Nothing,">
          <type by_reference="false">\Nothing,</type>
        </tag>
      </docblock>
      <argument line="474">
        <name>$attvalue</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="501" package="PHPMailer\htmlfilter">
      <name>tln_unspace</name>
      <full_name>\tln_unspace</full_name>
      <docblock line="493">
        <description>Kill any tabs, newlines, or carriage returns.</description>
        <long-description>&lt;p&gt;Our friends the
makers of the browser with 95% market value decided that it'd
be funny to make "java[tab]script" be just as good as "javascript".&lt;/p&gt;</long-description>
        <tag line="493" name="param" description="The attribute value before extraneous spaces removed." type="\attvalue" variable="$attvalue">
          <type by_reference="false">\attvalue</type>
        </tag>
        <tag line="493" name="return" description="Nothing, modifies a reference value." type="\attvalue">
          <type by_reference="false">\attvalue</type>
        </tag>
      </docblock>
      <argument line="501">
        <name>$attvalue</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="519" package="PHPMailer\htmlfilter">
      <name>tln_fixatts</name>
      <full_name>\tln_fixatts</full_name>
      <docblock line="509">
        <description>This function runs various checks against the attributes.</description>
        <long-description></long-description>
        <tag line="509" name="param" description="String with the name of the tag." type="\global\" variable="$tagname"/>
        <tag line="509" name="param" description="Array with all tag attributes." type="\global\" variable="$attary"/>
        <tag line="509" name="param" description="See description for tln_sanitize" type="\global\" variable="$rm_attnames"/>
        <tag line="509" name="param" description="See description for tln_sanitize" type="\global\" variable="$bad_attvals"/>
        <tag line="509" name="param" description="See description for tln_sanitize" type="\global\" variable="$add_attr_to_tag"/>
        <tag line="509" name="return" description="with modified attributes." type="Array">
          <type by_reference="false">Array</type>
        </tag>
      </docblock>
      <argument line="519">
        <name>$tagname</name>
        <default></default>
        <type/>
      </argument>
      <argument line="520">
        <name>$attary</name>
        <default></default>
        <type/>
      </argument>
      <argument line="521">
        <name>$rm_attnames</name>
        <default></default>
        <type/>
      </argument>
      <argument line="522">
        <name>$bad_attvals</name>
        <default></default>
        <type/>
      </argument>
      <argument line="523">
        <name>$add_attr_to_tag</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="594" package="PHPMailer\htmlfilter">
      <name>tln_sanitize</name>
      <full_name>\tln_sanitize</full_name>
      <docblock line="582">
        <description></description>
        <long-description></long-description>
        <tag line="582" name="param" description="the string with HTML you wish to filter" type="\global\" variable="$body"/>
        <tag line="582" name="param" description="see description above" type="\global\" variable="$tag_list"/>
        <tag line="582" name="param" description="see description above" type="\global\" variable="$rm_tags_with_content"/>
        <tag line="582" name="param" description="see description above" type="\global\" variable="$self_closing_tags"/>
        <tag line="582" name="param" description="see description above" type="\global\" variable="$force_tag_closing"/>
        <tag line="582" name="param" description="see description above" type="\global\" variable="$rm_attnames"/>
        <tag line="582" name="param" description="see description above" type="\global\" variable="$bad_attvals"/>
        <tag line="582" name="param" description="see description above" type="\global\" variable="$add_attr_to_tag"/>
        <tag line="582" name="return" description="html safe to show on your pages." type="\tln_sanitized">
          <type by_reference="false">\tln_sanitized</type>
        </tag>
      </docblock>
      <argument line="594">
        <name>$body</name>
        <default></default>
        <type/>
      </argument>
      <argument line="595">
        <name>$tag_list</name>
        <default></default>
        <type/>
      </argument>
      <argument line="596">
        <name>$rm_tags_with_content</name>
        <default></default>
        <type/>
      </argument>
      <argument line="597">
        <name>$self_closing_tags</name>
        <default></default>
        <type/>
      </argument>
      <argument line="598">
        <name>$force_tag_closing</name>
        <default></default>
        <type/>
      </argument>
      <argument line="599">
        <name>$rm_attnames</name>
        <default></default>
        <type/>
      </argument>
      <argument line="600">
        <name>$bad_attvals</name>
        <default></default>
        <type/>
      </argument>
      <argument line="601">
        <name>$add_attr_to_tag</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="727" package="PHPMailer\htmlfilter">
      <name>HTMLFilter</name>
      <full_name>\HTMLFilter</full_name>
      <argument line="727">
        <name>$body</name>
        <default></default>
        <type/>
      </argument>
      <argument line="727">
        <name>$trans_image_path</name>
        <default></default>
        <type/>
      </argument>
      <argument line="727">
        <name>$block_external_images</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="582" code="50011">No short description for function \tln_sanitize()</error>
      <error line="727" code="50009">No DocBlock was found for function \HTMLFilter()</error>
    </parse_markers>
  </file>
  <file path="libs/phpmailer/class.smtp.php" hash="8c3375776e96c3d8537e310069f3c2e8" package="PHPMailer">
    <docblock line="25">
      <description>PHPMailer - PHP SMTP email transport class
NOTE: Designed for use with PHP version 5 and up</description>
      <long-description/>
      <tag line="25" name="package" description="PHPMailer"/>
      <tag line="25" name="author" description="Andy Prevost"/>
      <tag line="25" name="author" description="Marcus Bointon"/>
      <tag line="25" name="copyright" description="2004 - 2008 Andy Prevost"/>
      <tag line="25" name="author" description="Jim Jagielski"/>
      <tag line="25" name="copyright" description="2010 - 2012 Jim Jagielski"/>
      <tag line="25" name="license" description="http://www.gnu.org/copyleft/lesser.html Distributed under the Lesser General Public License (LGPL)"/>
    </docblock>
    <include line="366" type="Require Once" package="Default">
      <name>ntlm_sasl_client.php</name>
    </include>
    <class final="false" abstract="false" namespace="global" line="46" package="PHPMailer">
      <extends/>
      <name>SMTP</name>
      <full_name>\SMTP</full_name>
      <docblock line="37">
        <description>PHP RFC821 SMTP client</description>
        <long-description>&lt;p&gt;Implements all the RFC 821 SMTP commands except TURN which will always return a not implemented error.
SMTP also provides some utility methods for sending mail to an SMTP server.&lt;/p&gt;</long-description>
        <tag line="37" name="author" description="Chris Ryan"/>
        <tag line="37" name="package" description="PHPMailer"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="51" namespace="global" package="Default">
        <name>$SMTP_PORT</name>
        <default>25</default>
        <docblock line="47">
          <description>SMTP server port</description>
          <long-description>&lt;p&gt;@var int&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="57" namespace="global" package="Default">
        <name>$CRLF</name>
        <default>"\r\n"</default>
        <docblock line="53">
          <description>SMTP reply line ending (don't change)</description>
          <long-description>&lt;p&gt;@var string&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="63" namespace="global" package="Default">
        <name>$do_debug</name>
        <default/>
        <docblock line="59">
          <description>Sets whether debugging is turned on</description>
          <long-description>&lt;p&gt;@var bool&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="70" namespace="global" package="Default">
        <name>$Debugoutput</name>
        <default>"echo"</default>
        <docblock line="65">
          <description>Sets the function/method to use for debugging output.</description>
          <long-description>&lt;p&gt;Right now we only honor "echo" or "error_log"&lt;/p&gt;</long-description>
          <tag line="65" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="76" namespace="global" package="Default">
        <name>$do_verp</name>
        <default>false</default>
        <docblock line="72">
          <description>Sets VERP use on/off (default is off)</description>
          <long-description>&lt;p&gt;@var bool&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="82" namespace="global" package="Default">
        <name>$Timeout</name>
        <default>15</default>
        <docblock line="78">
          <description>Sets the SMTP timeout value for reads, in seconds</description>
          <long-description/>
          <tag line="78" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="88" namespace="global" package="Default">
        <name>$Timelimit</name>
        <default>30</default>
        <docblock line="84">
          <description>Sets the SMTP timelimit value for reads, in seconds</description>
          <long-description/>
          <tag line="84" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="94" namespace="global" package="Default">
        <name>$Version</name>
        <default>'5.2.2'</default>
        <docblock line="90">
          <description>Sets the SMTP PHPMailer Version number</description>
          <long-description/>
          <tag line="90" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="103" namespace="global" package="Default">
        <name>$smtp_conn</name>
        <default/>
        <docblock line="100">
          <description/>
          <long-description/>
          <tag line="100" name="var" description="The socket to the server" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="107" namespace="global" package="Default">
        <name>$error</name>
        <default/>
        <docblock line="104">
          <description/>
          <long-description/>
          <tag line="104" name="var" description="Error message, if any, for the last call" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="111" namespace="global" package="Default">
        <name>$helo_rply</name>
        <default/>
        <docblock line="108">
          <description/>
          <long-description/>
          <tag line="108" name="var" description="The reply the server sent to us for HELO" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="117" package="PHPMailer">
        <name>edebug</name>
        <full_name>edebug</full_name>
        <docblock line="113">
          <description>Outputs debugging info via user-defined method</description>
          <long-description/>
          <tag line="113" name="param" description="" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="PHPMailer">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="125">
          <description>Initialize the class so that the data is in a known state.</description>
          <long-description/>
          <tag line="125" name="access" description="public"/>
          <tag line="125" name="return" description="" type="\SMTP">
            <type by_reference="false">\SMTP</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="PHPMailer">
        <name>Connect</name>
        <full_name>Connect</full_name>
        <docblock line="142">
          <description>Connect to the server specified on the port specified.</description>
          <long-description>&lt;p&gt;If the port is not specified use the default SMTP_PORT.
If tval is specified then a connection will try and be
established with the server for that number of seconds.
If tval is not specified the default is 30 seconds to
try on the connection.&lt;/p&gt;

&lt;p&gt;SMTP CODE SUCCESS: 220
SMTP CODE FAILURE: 421&lt;/p&gt;</long-description>
          <tag line="142" name="access" description="public"/>
          <tag line="142" name="param" description="" type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="param" description="" type="int" variable="$port">
            <type by_reference="false">int</type>
          </tag>
          <tag line="142" name="param" description="" type="int" variable="$tval">
            <type by_reference="false">int</type>
          </tag>
          <tag line="142" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$host</name>
          <default/>
          <type/>
        </argument>
        <argument line="158">
          <name>$port</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="158">
          <name>$tval</name>
          <default>30</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="PHPMailer">
        <name>StartTLS</name>
        <full_name>StartTLS</full_name>
        <docblock line="210">
          <description>Initiate a TLS communication with the server.</description>
          <long-description>&lt;p&gt;SMTP CODE 220 Ready to start TLS
SMTP CODE 501 Syntax error (no parameters allowed)
SMTP CODE 454 TLS not available due to temporary reason&lt;/p&gt;</long-description>
          <tag line="210" name="access" description="public"/>
          <tag line="210" name="return" description="success" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="PHPMailer">
        <name>Authenticate</name>
        <full_name>Authenticate</full_name>
        <docblock line="255">
          <description>Performs SMTP authentication.</description>
          <long-description>&lt;p&gt;Must be run after running the
Hello() method.  Returns true if successfully authenticated.&lt;/p&gt;</long-description>
          <tag line="255" name="access" description="public"/>
          <tag line="255" name="param" description="" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="255" name="param" description="" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="255" name="param" description="" type="string" variable="$authtype">
            <type by_reference="false">string</type>
          </tag>
          <tag line="255" name="param" description="" type="string" variable="$realm">
            <type by_reference="false">string</type>
          </tag>
          <tag line="255" name="param" description="" type="string" variable="$workstation">
            <type by_reference="false">string</type>
          </tag>
          <tag line="255" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$username</name>
          <default/>
          <type/>
        </argument>
        <argument line="266">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="266">
          <name>$authtype</name>
          <default>'LOGIN'</default>
          <type/>
        </argument>
        <argument line="266">
          <name>$realm</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="266">
          <name>$workstation</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="425" package="PHPMailer">
        <name>Connected</name>
        <full_name>Connected</full_name>
        <docblock line="420">
          <description>Returns true if connected to a server otherwise false</description>
          <long-description/>
          <tag line="420" name="access" description="public"/>
          <tag line="420" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="448" package="PHPMailer">
        <name>Close</name>
        <full_name>Close</full_name>
        <docblock line="441">
          <description>Closes the socket and cleans up the state of the class.</description>
          <long-description>&lt;p&gt;It is not considered good to use this function without
first trying to use QUIT.&lt;/p&gt;</long-description>
          <tag line="441" name="access" description="public"/>
          <tag line="441" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="482" package="PHPMailer">
        <name>Data</name>
        <full_name>Data</full_name>
        <docblock line="462">
          <description>Issues a data command and sends the msg_data to the server
finializing the mail transaction.</description>
          <long-description>&lt;p&gt;$msg_data is the message
that is to be send with the headers. Each header needs to be
on a single line followed by a &lt;CRLF&gt; with the message headers
and the message body being seperated by and additional &lt;CRLF&gt;.&lt;/p&gt;

&lt;p&gt;Implements rfc 821: DATA &lt;CRLF&gt;&lt;/p&gt;

&lt;p&gt;SMTP CODE INTERMEDIATE: 354
    [data]
    &lt;CRLF&gt;.&lt;CRLF&gt;
    SMTP CODE SUCCESS: 250
    SMTP CODE FAILURE: 552,554,451,452
SMTP CODE FAILURE: 451,554
SMTP CODE ERROR  : 500,501,503,421&lt;/p&gt;</long-description>
          <tag line="462" name="access" description="public"/>
          <tag line="462" name="param" description="" type="string" variable="$msg_data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="462" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="482">
          <name>$msg_data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="620" package="PHPMailer">
        <name>Hello</name>
        <full_name>Hello</full_name>
        <docblock line="607">
          <description>Sends the HELO command to the smtp server.</description>
          <long-description>&lt;p&gt;This makes sure that we and the server are in
the same known state.&lt;/p&gt;

&lt;p&gt;Implements from rfc 821: HELO &lt;SP&gt; &lt;domain&gt; &lt;CRLF&gt;&lt;/p&gt;

&lt;p&gt;SMTP CODE SUCCESS: 250
SMTP CODE ERROR  : 500, 501, 504, 421&lt;/p&gt;</long-description>
          <tag line="607" name="access" description="public"/>
          <tag line="607" name="param" description="" type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="607" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="620">
          <name>$host</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="652" package="PHPMailer">
        <name>SendHello</name>
        <full_name>SendHello</full_name>
        <docblock line="645">
          <description>Sends a HELO/EHLO command.</description>
          <long-description/>
          <tag line="645" name="access" description="private"/>
          <tag line="645" name="param" description="" type="string" variable="$hello">
            <type by_reference="false">string</type>
          </tag>
          <tag line="645" name="param" description="" type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="645" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="652">
          <name>$hello</name>
          <default/>
          <type/>
        </argument>
        <argument line="652">
          <name>$host</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="693" package="PHPMailer">
        <name>Mail</name>
        <full_name>Mail</full_name>
        <docblock line="678">
          <description>Starts a mail transaction from the email address specified in
$from.</description>
          <long-description>&lt;p&gt;Returns true if successful or false otherwise. If True
the mail transaction is started and then one or more Recipient
commands may be called followed by a Data command.&lt;/p&gt;

&lt;p&gt;Implements rfc 821: MAIL &lt;SP&gt; FROM:&lt;reverse-path&gt; &lt;CRLF&gt;&lt;/p&gt;

&lt;p&gt;SMTP CODE SUCCESS: 250
SMTP CODE SUCCESS: 552,451,452
SMTP CODE SUCCESS: 500,501,421&lt;/p&gt;</long-description>
          <tag line="678" name="access" description="public"/>
          <tag line="678" name="param" description="" type="string" variable="$from">
            <type by_reference="false">string</type>
          </tag>
          <tag line="678" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="693">
          <name>$from</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="737" package="PHPMailer">
        <name>Quit</name>
        <full_name>Quit</full_name>
        <docblock line="725">
          <description>Sends the quit command to the server and then closes the socket
if there is no error or the $close_on_error argument is true.</description>
          <long-description>&lt;p&gt;Implements from rfc 821: QUIT &lt;CRLF&gt;&lt;/p&gt;

&lt;p&gt;SMTP CODE SUCCESS: 221
SMTP CODE ERROR  : 500&lt;/p&gt;</long-description>
          <tag line="725" name="access" description="public"/>
          <tag line="725" name="param" description="" type="bool" variable="$close_on_error">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="725" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="737">
          <name>$close_on_error</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="791" package="PHPMailer">
        <name>Recipient</name>
        <full_name>Recipient</full_name>
        <docblock line="778">
          <description>Sends the command RCPT to the SMTP server with the TO: argument of $to.</description>
          <long-description>&lt;p&gt;Returns true if the recipient was accepted false if it was rejected.&lt;/p&gt;

&lt;p&gt;Implements from rfc 821: RCPT &lt;SP&gt; TO:&lt;forward-path&gt; &lt;CRLF&gt;&lt;/p&gt;

&lt;p&gt;SMTP CODE SUCCESS: 250,251
SMTP CODE FAILURE: 550,551,552,553,450,451,452
SMTP CODE ERROR  : 500,501,503,421&lt;/p&gt;</long-description>
          <tag line="778" name="access" description="public"/>
          <tag line="778" name="param" description="" type="string" variable="$to">
            <type by_reference="false">string</type>
          </tag>
          <tag line="778" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="791">
          <name>$to</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="834" package="PHPMailer">
        <name>Reset</name>
        <full_name>Reset</full_name>
        <docblock line="822">
          <description>Sends the RSET command to abort and transaction that is
currently in progress.</description>
          <long-description>&lt;p&gt;Returns true if successful false
otherwise.&lt;/p&gt;

&lt;p&gt;Implements rfc 821: RSET &lt;CRLF&gt;&lt;/p&gt;

&lt;p&gt;SMTP CODE SUCCESS: 250
SMTP CODE ERROR  : 500,501,504,421&lt;/p&gt;</long-description>
          <tag line="822" name="access" description="public"/>
          <tag line="822" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="883" package="PHPMailer">
        <name>SendAndMail</name>
        <full_name>SendAndMail</full_name>
        <docblock line="866">
          <description>Starts a mail transaction from the email address specified in
$from.</description>
          <long-description>&lt;p&gt;Returns true if successful or false otherwise. If True
the mail transaction is started and then one or more Recipient
commands may be called followed by a Data command. This command
will send the message to the users terminal if they are logged
in and send them an email.&lt;/p&gt;

&lt;p&gt;Implements rfc 821: SAML &lt;SP&gt; FROM:&lt;reverse-path&gt; &lt;CRLF&gt;&lt;/p&gt;

&lt;p&gt;SMTP CODE SUCCESS: 250
SMTP CODE SUCCESS: 552,451,452
SMTP CODE SUCCESS: 500,501,502,421&lt;/p&gt;</long-description>
          <tag line="866" name="access" description="public"/>
          <tag line="866" name="param" description="" type="string" variable="$from">
            <type by_reference="false">string</type>
          </tag>
          <tag line="866" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="883">
          <name>$from</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="927" package="PHPMailer">
        <name>Turn</name>
        <full_name>Turn</full_name>
        <docblock line="914">
          <description>This is an optional command for SMTP that this class does not
support.</description>
          <long-description>&lt;p&gt;This method is here to make the RFC821 Definition
complete for this class and &lt;strong&gt;may&lt;/strong&gt; be implimented in the future&lt;/p&gt;

&lt;p&gt;Implements from rfc 821: TURN &lt;CRLF&gt;&lt;/p&gt;

&lt;p&gt;SMTP CODE SUCCESS: 250
SMTP CODE FAILURE: 502
SMTP CODE ERROR  : 500, 503&lt;/p&gt;</long-description>
          <tag line="914" name="access" description="public"/>
          <tag line="914" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="941" package="PHPMailer">
        <name>getError</name>
        <full_name>getError</full_name>
        <docblock line="936">
          <description>Get the current error</description>
          <long-description/>
          <tag line="936" name="access" description="public"/>
          <tag line="936" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="958" package="PHPMailer">
        <name>get_lines</name>
        <full_name>get_lines</full_name>
        <docblock line="949">
          <description>Read in as many lines as possible
either before eof or socket timeout occurs on the operation.</description>
          <long-description>&lt;p&gt;With SMTP we can tell if we have more lines to read if the
4th character is '-' symbol. If it is a space then we don't
need to read anything else.&lt;/p&gt;</long-description>
          <tag line="949" name="access" description="private"/>
          <tag line="949" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="libs/fpdf.php" hash="d8919ddf3132b32dc8d9981a65aa14ab" package="Default">
    <include line="1145" type="Include" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="10" package="Default">
      <name>FPDF_VERSION</name>
      <full_name>\FPDF_VERSION</full_name>
      <value>'1.7'</value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="12" package="Default">
      <extends/>
      <name>FPDF</name>
      <full_name>\FPDF</full_name>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$page</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="15" namespace="global" package="Default">
        <name>$n</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="16" namespace="global" package="Default">
        <name>$offsets</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$buffer</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$pages</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$state</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$compress</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$k</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$DefOrientation</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$CurOrientation</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$StdPageSizes</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$DefPageSize</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$CurPageSize</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$PageSizes</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$wPt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$hPt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$w</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$h</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$lMargin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$tMargin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$rMargin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$bMargin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="34" namespace="global" package="Default">
        <name>$cMargin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="35" namespace="global" package="Default">
        <name>$x</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="35" namespace="global" package="Default">
        <name>$y</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="36" namespace="global" package="Default">
        <name>$lasth</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$LineWidth</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="global" package="Default">
        <name>$fontpath</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="39" namespace="global" package="Default">
        <name>$CoreFonts</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$fonts</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="41" namespace="global" package="Default">
        <name>$FontFiles</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="42" namespace="global" package="Default">
        <name>$diffs</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="global" package="Default">
        <name>$FontFamily</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="44" namespace="global" package="Default">
        <name>$FontStyle</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$underline</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="46" namespace="global" package="Default">
        <name>$CurrentFont</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="47" namespace="global" package="Default">
        <name>$FontSizePt</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="48" namespace="global" package="Default">
        <name>$FontSize</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="49" namespace="global" package="Default">
        <name>$DrawColor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="50" namespace="global" package="Default">
        <name>$FillColor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="51" namespace="global" package="Default">
        <name>$TextColor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="52" namespace="global" package="Default">
        <name>$ColorFlag</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="53" namespace="global" package="Default">
        <name>$ws</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="54" namespace="global" package="Default">
        <name>$images</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="55" namespace="global" package="Default">
        <name>$PageLinks</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="56" namespace="global" package="Default">
        <name>$links</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="57" namespace="global" package="Default">
        <name>$AutoPageBreak</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="58" namespace="global" package="Default">
        <name>$PageBreakTrigger</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="59" namespace="global" package="Default">
        <name>$InHeader</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="60" namespace="global" package="Default">
        <name>$InFooter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="61" namespace="global" package="Default">
        <name>$ZoomMode</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="62" namespace="global" package="Default">
        <name>$LayoutMode</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="63" namespace="global" package="Default">
        <name>$title</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="64" namespace="global" package="Default">
        <name>$subject</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="65" namespace="global" package="Default">
        <name>$author</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="66" namespace="global" package="Default">
        <name>$keywords</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="67" namespace="global" package="Default">
        <name>$creator</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="68" namespace="global" package="Default">
        <name>$AliasNbPages</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="69" namespace="global" package="Default">
        <name>$PDFVersion</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="Default">
        <name>FPDF</name>
        <full_name>FPDF</full_name>
        <argument line="76">
          <name>$orientation</name>
          <default>'P'</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$unit</name>
          <default>'mm'</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$size</name>
          <default>'A4'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="Default">
        <name>SetMargins</name>
        <full_name>SetMargins</full_name>
        <argument line="170">
          <name>$left</name>
          <default/>
          <type/>
        </argument>
        <argument line="170">
          <name>$top</name>
          <default/>
          <type/>
        </argument>
        <argument line="170">
          <name>$right</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="180" package="Default">
        <name>SetLeftMargin</name>
        <full_name>SetLeftMargin</full_name>
        <argument line="180">
          <name>$margin</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="Default">
        <name>SetTopMargin</name>
        <full_name>SetTopMargin</full_name>
        <argument line="188">
          <name>$margin</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="194" package="Default">
        <name>SetRightMargin</name>
        <full_name>SetRightMargin</full_name>
        <argument line="194">
          <name>$margin</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="200" package="Default">
        <name>SetAutoPageBreak</name>
        <full_name>SetAutoPageBreak</full_name>
        <argument line="200">
          <name>$auto</name>
          <default/>
          <type/>
        </argument>
        <argument line="200">
          <name>$margin</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="208" package="Default">
        <name>SetDisplayMode</name>
        <full_name>SetDisplayMode</full_name>
        <argument line="208">
          <name>$zoom</name>
          <default/>
          <type/>
        </argument>
        <argument line="208">
          <name>$layout</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="Default">
        <name>SetCompression</name>
        <full_name>SetCompression</full_name>
        <argument line="221">
          <name>$compress</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="230" package="Default">
        <name>SetTitle</name>
        <full_name>SetTitle</full_name>
        <argument line="230">
          <name>$title</name>
          <default/>
          <type/>
        </argument>
        <argument line="230">
          <name>$isUTF8</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="Default">
        <name>SetSubject</name>
        <full_name>SetSubject</full_name>
        <argument line="238">
          <name>$subject</name>
          <default/>
          <type/>
        </argument>
        <argument line="238">
          <name>$isUTF8</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="246" package="Default">
        <name>SetAuthor</name>
        <full_name>SetAuthor</full_name>
        <argument line="246">
          <name>$author</name>
          <default/>
          <type/>
        </argument>
        <argument line="246">
          <name>$isUTF8</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="254" package="Default">
        <name>SetKeywords</name>
        <full_name>SetKeywords</full_name>
        <argument line="254">
          <name>$keywords</name>
          <default/>
          <type/>
        </argument>
        <argument line="254">
          <name>$isUTF8</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="262" package="Default">
        <name>SetCreator</name>
        <full_name>SetCreator</full_name>
        <argument line="262">
          <name>$creator</name>
          <default/>
          <type/>
        </argument>
        <argument line="262">
          <name>$isUTF8</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="270" package="Default">
        <name>AliasNbPages</name>
        <full_name>AliasNbPages</full_name>
        <argument line="270">
          <name>$alias</name>
          <default>'{nb}'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="276" package="Default">
        <name>Error</name>
        <full_name>Error</full_name>
        <argument line="276">
          <name>$msg</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="282" package="Default">
        <name>Open</name>
        <full_name>Open</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="288" package="Default">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="305" package="Default">
        <name>AddPage</name>
        <full_name>AddPage</full_name>
        <argument line="305">
          <name>$orientation</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="305">
          <name>$size</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="374" package="Default">
        <name>Header</name>
        <full_name>Header</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="379" package="Default">
        <name>Footer</name>
        <full_name>Footer</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="384" package="Default">
        <name>PageNo</name>
        <full_name>PageNo</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="390" package="Default">
        <name>SetDrawColor</name>
        <full_name>SetDrawColor</full_name>
        <argument line="390">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
        <argument line="390">
          <name>$g</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="390">
          <name>$b</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="401" package="Default">
        <name>SetFillColor</name>
        <full_name>SetFillColor</full_name>
        <argument line="401">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
        <argument line="401">
          <name>$g</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="401">
          <name>$b</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="413" package="Default">
        <name>SetTextColor</name>
        <full_name>SetTextColor</full_name>
        <argument line="413">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
        <argument line="413">
          <name>$g</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="413">
          <name>$b</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="423" package="Default">
        <name>GetStringWidth</name>
        <full_name>GetStringWidth</full_name>
        <argument line="423">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="435" package="Default">
        <name>SetLineWidth</name>
        <full_name>SetLineWidth</full_name>
        <argument line="435">
          <name>$width</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="443" package="Default">
        <name>Line</name>
        <full_name>Line</full_name>
        <argument line="443">
          <name>$x1</name>
          <default/>
          <type/>
        </argument>
        <argument line="443">
          <name>$y1</name>
          <default/>
          <type/>
        </argument>
        <argument line="443">
          <name>$x2</name>
          <default/>
          <type/>
        </argument>
        <argument line="443">
          <name>$y2</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="449" package="Default">
        <name>Rect</name>
        <full_name>Rect</full_name>
        <argument line="449">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
        <argument line="449">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
        <argument line="449">
          <name>$w</name>
          <default/>
          <type/>
        </argument>
        <argument line="449">
          <name>$h</name>
          <default/>
          <type/>
        </argument>
        <argument line="449">
          <name>$style</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="461" package="Default">
        <name>AddFont</name>
        <full_name>AddFont</full_name>
        <argument line="461">
          <name>$family</name>
          <default/>
          <type/>
        </argument>
        <argument line="461">
          <name>$style</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="461">
          <name>$file</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="497" package="Default">
        <name>SetFont</name>
        <full_name>SetFont</full_name>
        <argument line="497">
          <name>$family</name>
          <default/>
          <type/>
        </argument>
        <argument line="497">
          <name>$style</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="497">
          <name>$size</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="547" package="Default">
        <name>SetFontSize</name>
        <full_name>SetFontSize</full_name>
        <argument line="547">
          <name>$size</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="558" package="Default">
        <name>AddLink</name>
        <full_name>AddLink</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="566" package="Default">
        <name>SetLink</name>
        <full_name>SetLink</full_name>
        <argument line="566">
          <name>$link</name>
          <default/>
          <type/>
        </argument>
        <argument line="566">
          <name>$y</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="566">
          <name>$page</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="576" package="Default">
        <name>Link</name>
        <full_name>Link</full_name>
        <argument line="576">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
        <argument line="576">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
        <argument line="576">
          <name>$w</name>
          <default/>
          <type/>
        </argument>
        <argument line="576">
          <name>$h</name>
          <default/>
          <type/>
        </argument>
        <argument line="576">
          <name>$link</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="582" package="Default">
        <name>Text</name>
        <full_name>Text</full_name>
        <argument line="582">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
        <argument line="582">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
        <argument line="582">
          <name>$txt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="593" package="Default">
        <name>AcceptPageBreak</name>
        <full_name>AcceptPageBreak</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="599" package="Default">
        <name>Cell</name>
        <full_name>Cell</full_name>
        <argument line="599">
          <name>$w</name>
          <default/>
          <type/>
        </argument>
        <argument line="599">
          <name>$h</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="599">
          <name>$txt</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="599">
          <name>$border</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="599">
          <name>$ln</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="599">
          <name>$align</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="599">
          <name>$fill</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="599">
          <name>$link</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="678" package="Default">
        <name>MultiCell</name>
        <full_name>MultiCell</full_name>
        <argument line="678">
          <name>$w</name>
          <default/>
          <type/>
        </argument>
        <argument line="678">
          <name>$h</name>
          <default/>
          <type/>
        </argument>
        <argument line="678">
          <name>$txt</name>
          <default/>
          <type/>
        </argument>
        <argument line="678">
          <name>$border</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="678">
          <name>$align</name>
          <default>'J'</default>
          <type/>
        </argument>
        <argument line="678">
          <name>$fill</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="791" package="Default">
        <name>Write</name>
        <full_name>Write</full_name>
        <argument line="791">
          <name>$h</name>
          <default/>
          <type/>
        </argument>
        <argument line="791">
          <name>$txt</name>
          <default/>
          <type/>
        </argument>
        <argument line="791">
          <name>$link</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="872" package="Default">
        <name>Ln</name>
        <full_name>Ln</full_name>
        <argument line="872">
          <name>$h</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="882" package="Default">
        <name>Image</name>
        <full_name>Image</full_name>
        <argument line="882">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
        <argument line="882">
          <name>$x</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="882">
          <name>$y</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="882">
          <name>$w</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="882">
          <name>$h</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="882">
          <name>$type</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="882">
          <name>$link</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="945" package="Default">
        <name>GetX</name>
        <full_name>GetX</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="951" package="Default">
        <name>SetX</name>
        <full_name>SetX</full_name>
        <argument line="951">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="960" package="Default">
        <name>GetY</name>
        <full_name>GetY</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="966" package="Default">
        <name>SetY</name>
        <full_name>SetY</full_name>
        <argument line="966">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="976" package="Default">
        <name>SetXY</name>
        <full_name>SetXY</full_name>
        <argument line="976">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
        <argument line="976">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="983" package="Default">
        <name>Output</name>
        <full_name>Output</full_name>
        <argument line="983">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="983">
          <name>$dest</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1045" package="Default">
        <name>_dochecks</name>
        <full_name>_dochecks</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1058" package="Default">
        <name>_checkoutput</name>
        <full_name>_checkoutput</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1078" package="Default">
        <name>_getpagesize</name>
        <full_name>_getpagesize</full_name>
        <argument line="1078">
          <name>$size</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1097" package="Default">
        <name>_beginpage</name>
        <full_name>_beginpage</full_name>
        <argument line="1097">
          <name>$orientation</name>
          <default/>
          <type/>
        </argument>
        <argument line="1097">
          <name>$size</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1137" package="Default">
        <name>_endpage</name>
        <full_name>_endpage</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1142" package="Default">
        <name>_loadfont</name>
        <full_name>_loadfont</full_name>
        <argument line="1142">
          <name>$font</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1152" package="Default">
        <name>_escape</name>
        <full_name>_escape</full_name>
        <argument line="1152">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1162" package="Default">
        <name>_textstring</name>
        <full_name>_textstring</full_name>
        <argument line="1162">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1168" package="Default">
        <name>_UTF8toUTF16</name>
        <full_name>_UTF8toUTF16</full_name>
        <argument line="1168">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1201" package="Default">
        <name>_dounderline</name>
        <full_name>_dounderline</full_name>
        <argument line="1201">
          <name>$x</name>
          <default/>
          <type/>
        </argument>
        <argument line="1201">
          <name>$y</name>
          <default/>
          <type/>
        </argument>
        <argument line="1201">
          <name>$txt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1210" package="Default">
        <name>_parsejpg</name>
        <full_name>_parsejpg</full_name>
        <argument line="1210">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1229" package="Default">
        <name>_parsepng</name>
        <full_name>_parsepng</full_name>
        <argument line="1229">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1240" package="Default">
        <name>_parsepngstream</name>
        <full_name>_parsepngstream</full_name>
        <argument line="1240">
          <name>$f</name>
          <default/>
          <type/>
        </argument>
        <argument line="1240">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1365" package="Default">
        <name>_readstream</name>
        <full_name>_readstream</full_name>
        <argument line="1365">
          <name>$f</name>
          <default/>
          <type/>
        </argument>
        <argument line="1365">
          <name>$n</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1382" package="Default">
        <name>_readint</name>
        <full_name>_readint</full_name>
        <argument line="1382">
          <name>$f</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1389" package="Default">
        <name>_parsegif</name>
        <full_name>_parsegif</full_name>
        <argument line="1389">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1428" package="Default">
        <name>_newobj</name>
        <full_name>_newobj</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1436" package="Default">
        <name>_putstream</name>
        <full_name>_putstream</full_name>
        <argument line="1436">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1443" package="Default">
        <name>_out</name>
        <full_name>_out</full_name>
        <argument line="1443">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1452" package="Default">
        <name>_putpages</name>
        <full_name>_putpages</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1525" package="Default">
        <name>_putfonts</name>
        <full_name>_putfonts</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1619" package="Default">
        <name>_putimages</name>
        <full_name>_putimages</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1629" package="Default">
        <name>_putimage</name>
        <full_name>_putimage</full_name>
        <argument line="1629">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1681" package="Default">
        <name>_putxobjectdict</name>
        <full_name>_putxobjectdict</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1687" package="Default">
        <name>_putresourcedict</name>
        <full_name>_putresourcedict</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1699" package="Default">
        <name>_putresources</name>
        <full_name>_putresources</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1712" package="Default">
        <name>_putinfo</name>
        <full_name>_putinfo</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1728" package="Default">
        <name>_putcatalog</name>
        <full_name>_putcatalog</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1748" package="Default">
        <name>_putheader</name>
        <full_name>_putheader</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1753" package="Default">
        <name>_puttrailer</name>
        <full_name>_puttrailer</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1760" package="Default">
        <name>_enddoc</name>
        <full_name>_enddoc</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libs/fpdf.php</error>
      <error line="12" code="50000">No DocBlock was found for \FPDF</error>
      <error line="14" code="50018">No DocBlock was found for property $page</error>
      <error line="15" code="50018">No DocBlock was found for property $n</error>
      <error line="16" code="50018">No DocBlock was found for property $offsets</error>
      <error line="17" code="50018">No DocBlock was found for property $buffer</error>
      <error line="18" code="50018">No DocBlock was found for property $pages</error>
      <error line="19" code="50018">No DocBlock was found for property $state</error>
      <error line="20" code="50018">No DocBlock was found for property $compress</error>
      <error line="21" code="50018">No DocBlock was found for property $k</error>
      <error line="22" code="50018">No DocBlock was found for property $DefOrientation</error>
      <error line="23" code="50018">No DocBlock was found for property $CurOrientation</error>
      <error line="24" code="50018">No DocBlock was found for property $StdPageSizes</error>
      <error line="25" code="50018">No DocBlock was found for property $DefPageSize</error>
      <error line="26" code="50018">No DocBlock was found for property $CurPageSize</error>
      <error line="27" code="50018">No DocBlock was found for property $PageSizes</error>
      <error line="28" code="50018">No DocBlock was found for property $wPt</error>
      <error line="28" code="50018">No DocBlock was found for property $hPt</error>
      <error line="29" code="50018">No DocBlock was found for property $w</error>
      <error line="29" code="50018">No DocBlock was found for property $h</error>
      <error line="30" code="50018">No DocBlock was found for property $lMargin</error>
      <error line="31" code="50018">No DocBlock was found for property $tMargin</error>
      <error line="32" code="50018">No DocBlock was found for property $rMargin</error>
      <error line="33" code="50018">No DocBlock was found for property $bMargin</error>
      <error line="34" code="50018">No DocBlock was found for property $cMargin</error>
      <error line="35" code="50018">No DocBlock was found for property $x</error>
      <error line="35" code="50018">No DocBlock was found for property $y</error>
      <error line="36" code="50018">No DocBlock was found for property $lasth</error>
      <error line="37" code="50018">No DocBlock was found for property $LineWidth</error>
      <error line="38" code="50018">No DocBlock was found for property $fontpath</error>
      <error line="39" code="50018">No DocBlock was found for property $CoreFonts</error>
      <error line="40" code="50018">No DocBlock was found for property $fonts</error>
      <error line="41" code="50018">No DocBlock was found for property $FontFiles</error>
      <error line="42" code="50018">No DocBlock was found for property $diffs</error>
      <error line="43" code="50018">No DocBlock was found for property $FontFamily</error>
      <error line="44" code="50018">No DocBlock was found for property $FontStyle</error>
      <error line="45" code="50018">No DocBlock was found for property $underline</error>
      <error line="46" code="50018">No DocBlock was found for property $CurrentFont</error>
      <error line="47" code="50018">No DocBlock was found for property $FontSizePt</error>
      <error line="48" code="50018">No DocBlock was found for property $FontSize</error>
      <error line="49" code="50018">No DocBlock was found for property $DrawColor</error>
      <error line="50" code="50018">No DocBlock was found for property $FillColor</error>
      <error line="51" code="50018">No DocBlock was found for property $TextColor</error>
      <error line="52" code="50018">No DocBlock was found for property $ColorFlag</error>
      <error line="53" code="50018">No DocBlock was found for property $ws</error>
      <error line="54" code="50018">No DocBlock was found for property $images</error>
      <error line="55" code="50018">No DocBlock was found for property $PageLinks</error>
      <error line="56" code="50018">No DocBlock was found for property $links</error>
      <error line="57" code="50018">No DocBlock was found for property $AutoPageBreak</error>
      <error line="58" code="50018">No DocBlock was found for property $PageBreakTrigger</error>
      <error line="59" code="50018">No DocBlock was found for property $InHeader</error>
      <error line="60" code="50018">No DocBlock was found for property $InFooter</error>
      <error line="61" code="50018">No DocBlock was found for property $ZoomMode</error>
      <error line="62" code="50018">No DocBlock was found for property $LayoutMode</error>
      <error line="63" code="50018">No DocBlock was found for property $title</error>
      <error line="64" code="50018">No DocBlock was found for property $subject</error>
      <error line="65" code="50018">No DocBlock was found for property $author</error>
      <error line="66" code="50018">No DocBlock was found for property $keywords</error>
      <error line="67" code="50018">No DocBlock was found for property $creator</error>
      <error line="68" code="50018">No DocBlock was found for property $AliasNbPages</error>
      <error line="69" code="50018">No DocBlock was found for property $PDFVersion</error>
      <error line="76" code="50010">No DocBlock was found for method FPDF()</error>
      <error line="170" code="50010">No DocBlock was found for method SetMargins()</error>
      <error line="180" code="50010">No DocBlock was found for method SetLeftMargin()</error>
      <error line="188" code="50010">No DocBlock was found for method SetTopMargin()</error>
      <error line="194" code="50010">No DocBlock was found for method SetRightMargin()</error>
      <error line="200" code="50010">No DocBlock was found for method SetAutoPageBreak()</error>
      <error line="208" code="50010">No DocBlock was found for method SetDisplayMode()</error>
      <error line="221" code="50010">No DocBlock was found for method SetCompression()</error>
      <error line="230" code="50010">No DocBlock was found for method SetTitle()</error>
      <error line="238" code="50010">No DocBlock was found for method SetSubject()</error>
      <error line="246" code="50010">No DocBlock was found for method SetAuthor()</error>
      <error line="254" code="50010">No DocBlock was found for method SetKeywords()</error>
      <error line="262" code="50010">No DocBlock was found for method SetCreator()</error>
      <error line="270" code="50010">No DocBlock was found for method AliasNbPages()</error>
      <error line="276" code="50010">No DocBlock was found for method Error()</error>
      <error line="282" code="50010">No DocBlock was found for method Open()</error>
      <error line="288" code="50010">No DocBlock was found for method Close()</error>
      <error line="305" code="50010">No DocBlock was found for method AddPage()</error>
      <error line="374" code="50010">No DocBlock was found for method Header()</error>
      <error line="379" code="50010">No DocBlock was found for method Footer()</error>
      <error line="384" code="50010">No DocBlock was found for method PageNo()</error>
      <error line="390" code="50010">No DocBlock was found for method SetDrawColor()</error>
      <error line="401" code="50010">No DocBlock was found for method SetFillColor()</error>
      <error line="413" code="50010">No DocBlock was found for method SetTextColor()</error>
      <error line="423" code="50010">No DocBlock was found for method GetStringWidth()</error>
      <error line="435" code="50010">No DocBlock was found for method SetLineWidth()</error>
      <error line="443" code="50010">No DocBlock was found for method Line()</error>
      <error line="449" code="50010">No DocBlock was found for method Rect()</error>
      <error line="461" code="50010">No DocBlock was found for method AddFont()</error>
      <error line="497" code="50010">No DocBlock was found for method SetFont()</error>
      <error line="547" code="50010">No DocBlock was found for method SetFontSize()</error>
      <error line="558" code="50010">No DocBlock was found for method AddLink()</error>
      <error line="566" code="50010">No DocBlock was found for method SetLink()</error>
      <error line="576" code="50010">No DocBlock was found for method Link()</error>
      <error line="582" code="50010">No DocBlock was found for method Text()</error>
      <error line="593" code="50010">No DocBlock was found for method AcceptPageBreak()</error>
      <error line="599" code="50010">No DocBlock was found for method Cell()</error>
      <error line="678" code="50010">No DocBlock was found for method MultiCell()</error>
      <error line="791" code="50010">No DocBlock was found for method Write()</error>
      <error line="872" code="50010">No DocBlock was found for method Ln()</error>
      <error line="882" code="50010">No DocBlock was found for method Image()</error>
      <error line="945" code="50010">No DocBlock was found for method GetX()</error>
      <error line="951" code="50010">No DocBlock was found for method SetX()</error>
      <error line="960" code="50010">No DocBlock was found for method GetY()</error>
      <error line="966" code="50010">No DocBlock was found for method SetY()</error>
      <error line="976" code="50010">No DocBlock was found for method SetXY()</error>
      <error line="983" code="50010">No DocBlock was found for method Output()</error>
      <error line="1045" code="50010">No DocBlock was found for method _dochecks()</error>
      <error line="1058" code="50010">No DocBlock was found for method _checkoutput()</error>
      <error line="1078" code="50010">No DocBlock was found for method _getpagesize()</error>
      <error line="1097" code="50010">No DocBlock was found for method _beginpage()</error>
      <error line="1137" code="50010">No DocBlock was found for method _endpage()</error>
      <error line="1142" code="50010">No DocBlock was found for method _loadfont()</error>
      <error line="1152" code="50010">No DocBlock was found for method _escape()</error>
      <error line="1162" code="50010">No DocBlock was found for method _textstring()</error>
      <error line="1168" code="50010">No DocBlock was found for method _UTF8toUTF16()</error>
      <error line="1201" code="50010">No DocBlock was found for method _dounderline()</error>
      <error line="1210" code="50010">No DocBlock was found for method _parsejpg()</error>
      <error line="1229" code="50010">No DocBlock was found for method _parsepng()</error>
      <error line="1240" code="50010">No DocBlock was found for method _parsepngstream()</error>
      <error line="1365" code="50010">No DocBlock was found for method _readstream()</error>
      <error line="1382" code="50010">No DocBlock was found for method _readint()</error>
      <error line="1389" code="50010">No DocBlock was found for method _parsegif()</error>
      <error line="1428" code="50010">No DocBlock was found for method _newobj()</error>
      <error line="1436" code="50010">No DocBlock was found for method _putstream()</error>
      <error line="1443" code="50010">No DocBlock was found for method _out()</error>
      <error line="1452" code="50010">No DocBlock was found for method _putpages()</error>
      <error line="1525" code="50010">No DocBlock was found for method _putfonts()</error>
      <error line="1619" code="50010">No DocBlock was found for method _putimages()</error>
      <error line="1629" code="50010">No DocBlock was found for method _putimage()</error>
      <error line="1681" code="50010">No DocBlock was found for method _putxobjectdict()</error>
      <error line="1687" code="50010">No DocBlock was found for method _putresourcedict()</error>
      <error line="1699" code="50010">No DocBlock was found for method _putresources()</error>
      <error line="1712" code="50010">No DocBlock was found for method _putinfo()</error>
      <error line="1728" code="50010">No DocBlock was found for method _putcatalog()</error>
      <error line="1748" code="50010">No DocBlock was found for method _putheader()</error>
      <error line="1753" code="50010">No DocBlock was found for method _puttrailer()</error>
      <error line="1760" code="50010">No DocBlock was found for method _enddoc()</error>
    </parse_markers>
  </file>
  <file path="libs/securimage/securimage_show.php" hash="d1f31992d25d4a123f8b69fe620204b4" package="Securimage">
    <docblock line="3">
      <description>Project:     Securimage: A PHP class for creating and managing form CAPTCHA images&lt;br /&gt;
File:        securimage_show.php&lt;br /&gt;</description>
      <long-description>&lt;p&gt;Copyright (c) 2013, Drew Phillips
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;p&gt;Any modifications to the library should be indicated clearly in the source code
to inform users that the changes are not a part of the original software.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you found this script useful, please take a quick moment to rate it.&lt;br /&gt;
http://www.hotscripts.com/rate/49400.html  Thanks.&lt;/p&gt;</long-description>
      <tag line="3" name="link" description="Securimage PHP CAPTCHA" link="http://www.phpcaptcha.org"/>
      <tag line="3" name="link" description="Download Latest Version" link="http://www.phpcaptcha.org/latest.zip"/>
      <tag line="3" name="link" description="Online Documentation" link="http://www.phpcaptcha.org/Securimage_Docs/"/>
      <tag line="3" name="copyright" description="2013 Drew Phillips"/>
      <tag line="3" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
      <tag line="3" name="version" description="3.5.1 (June 21, 2013)"/>
      <tag line="3" name="package" description="Securimage"/>
    </docblock>
    <include line="50" type="Require Once" package="Default">
      <name/>
    </include>
  </file>
  <file path="libs/securimage/example_form.php" hash="d10a28912846b5ea1a62d22028628f22" package="Default">
    <include line="145" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="global" line="96" package="Default">
      <name>process_si_contact_form</name>
      <full_name>\process_si_contact_form</full_name>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libs/securimage/example_form.php</error>
      <error line="96" code="50009">No DocBlock was found for function \process_si_contact_form()</error>
    </parse_markers>
  </file>
  <file path="libs/securimage/example_form.ajax.php" hash="e18cf9650c0ca1de2fd87810e88e9b00" package="Default">
    <include line="168" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="global" line="121" package="Default">
      <name>process_si_contact_form</name>
      <full_name>\process_si_contact_form</full_name>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libs/securimage/example_form.ajax.php</error>
      <error line="121" code="50009">No DocBlock was found for function \process_si_contact_form()</error>
    </parse_markers>
  </file>
  <file path="libs/securimage/WavFile.php" hash="2323d9ab9bef747e33800c1b8b54ed16" package="Default">
    <class final="false" abstract="false" namespace="global" line="69" package="PHPWavUtils">
      <extends/>
      <name>WavFile</name>
      <full_name>\WavFile</full_name>
      <docblock line="5">
        <description>Project: PHPWavUtils: Classes for creating, reading, and manipulating WAV files in PHP&lt;br /&gt;
File: WavFile.php&lt;br /&gt;</description>
        <long-description>&lt;p&gt;Copyright (c) 2012, Drew Phillips
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;p&gt;Any modifications to the library should be indicated clearly in the source code
to inform users that the changes are not a part of the original software.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</long-description>
        <tag line="5" name="copyright" description="2012 Drew Phillips"/>
        <tag line="5" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
        <tag line="5" name="author" description="Paul Voegler &lt;http://www.voegler.eu/&gt;"/>
        <tag line="5" name="version" description="1.0 (October 2012)"/>
        <tag line="5" name="package" description="PHPWavUtils"/>
        <tag line="5" name="license" description="BSD License&#10;Changelog:&#10;  1.0 (10/2/2012)&#10;    - Fix insertSilence() creating invalid block size&#10;  1.0 RC1 (4/20/2012)&#10;    - Initial release candidate&#10;    - Supports 8, 16, 24, 32 bit PCM, 32-bit IEEE FLOAT, Extensible Format&#10;    - Support for 18 channels of audio&#10;    - Ability to read an offset from a file to reduce memory footprint with large files&#10;    - Single-pass audio filter processing&#10;    - Highly accurate and efficient mix and normalization filters (http://www.voegler.eu/pub/audio/)&#10;    - Utility filters for degrading audio, and inserting silence&#10;  0.6 (4/12/2012)&#10;    - Support 8, 16, 24, 32 bit and PCM float (Paul Voegler)&#10;    - Add normalize filter, misc improvements and fixes (Paul Voegler)&#10;    - Normalize parameters to filter() to use filter constants as array indices&#10;    - Add option to mix filter to loop the target file if the source is longer&#10;  0.5 (4/3/2012)&#10;    - Fix binary pack routine (Paul Voegler)&#10;    - Add improved mixing function (Paul Voegler)"/>
      </docblock>
      <constant namespace="global" line="75" package="PHPWavUtils">
        <name>FILTER_MIX</name>
        <full_name>FILTER_MIX</full_name>
        <value>1</value>
        <docblock line="74">
          <description/>
          <long-description/>
          <tag line="74" name="var" description="Filter flag for mixing two files" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="78" package="PHPWavUtils">
        <name>FILTER_NORMALIZE</name>
        <full_name>FILTER_NORMALIZE</full_name>
        <value>2</value>
        <docblock line="77">
          <description/>
          <long-description/>
          <tag line="77" name="var" description="Filter flag for normalizing audio data" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="81" package="PHPWavUtils">
        <name>FILTER_DEGRADE</name>
        <full_name>FILTER_DEGRADE</full_name>
        <value>4</value>
        <docblock line="80">
          <description/>
          <long-description/>
          <tag line="80" name="var" description="Filter flag for degrading audio data" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="84" package="PHPWavUtils">
        <name>MAX_CHANNEL</name>
        <full_name>MAX_CHANNEL</full_name>
        <value>18</value>
        <docblock line="83">
          <description/>
          <long-description/>
          <tag line="83" name="var" description="Maximum number of channels" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="87" package="PHPWavUtils">
        <name>MAX_SAMPLERATE</name>
        <full_name>MAX_SAMPLERATE</full_name>
        <value>192000</value>
        <docblock line="86">
          <description/>
          <long-description/>
          <tag line="86" name="var" description="Maximum sample rate" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="90" package="PHPWavUtils">
        <name>SPEAKER_DEFAULT</name>
        <full_name>SPEAKER_DEFAULT</full_name>
        <value>0</value>
        <docblock line="89">
          <description>Channel Locations for ChannelMask</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="91" package="PHPWavUtils">
        <name>SPEAKER_FRONT_LEFT</name>
        <full_name>SPEAKER_FRONT_LEFT</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="92" package="PHPWavUtils">
        <name>SPEAKER_FRONT_RIGHT</name>
        <full_name>SPEAKER_FRONT_RIGHT</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="93" package="PHPWavUtils">
        <name>SPEAKER_FRONT_CENTER</name>
        <full_name>SPEAKER_FRONT_CENTER</full_name>
        <value>4</value>
      </constant>
      <constant namespace="global" line="94" package="PHPWavUtils">
        <name>SPEAKER_LOW_FREQUENCY</name>
        <full_name>SPEAKER_LOW_FREQUENCY</full_name>
        <value>8</value>
      </constant>
      <constant namespace="global" line="95" package="PHPWavUtils">
        <name>SPEAKER_BACK_LEFT</name>
        <full_name>SPEAKER_BACK_LEFT</full_name>
        <value>16</value>
      </constant>
      <constant namespace="global" line="96" package="PHPWavUtils">
        <name>SPEAKER_BACK_RIGHT</name>
        <full_name>SPEAKER_BACK_RIGHT</full_name>
        <value>32</value>
      </constant>
      <constant namespace="global" line="97" package="PHPWavUtils">
        <name>SPEAKER_FRONT_LEFT_OF_CENTER</name>
        <full_name>SPEAKER_FRONT_LEFT_OF_CENTER</full_name>
        <value>64</value>
      </constant>
      <constant namespace="global" line="98" package="PHPWavUtils">
        <name>SPEAKER_FRONT_RIGHT_OF_CENTER</name>
        <full_name>SPEAKER_FRONT_RIGHT_OF_CENTER</full_name>
        <value>128</value>
      </constant>
      <constant namespace="global" line="99" package="PHPWavUtils">
        <name>SPEAKER_BACK_CENTER</name>
        <full_name>SPEAKER_BACK_CENTER</full_name>
        <value>256</value>
      </constant>
      <constant namespace="global" line="100" package="PHPWavUtils">
        <name>SPEAKER_SIDE_LEFT</name>
        <full_name>SPEAKER_SIDE_LEFT</full_name>
        <value>512</value>
      </constant>
      <constant namespace="global" line="101" package="PHPWavUtils">
        <name>SPEAKER_SIDE_RIGHT</name>
        <full_name>SPEAKER_SIDE_RIGHT</full_name>
        <value>1024</value>
      </constant>
      <constant namespace="global" line="102" package="PHPWavUtils">
        <name>SPEAKER_TOP_CENTER</name>
        <full_name>SPEAKER_TOP_CENTER</full_name>
        <value>2048</value>
      </constant>
      <constant namespace="global" line="103" package="PHPWavUtils">
        <name>SPEAKER_TOP_FRONT_LEFT</name>
        <full_name>SPEAKER_TOP_FRONT_LEFT</full_name>
        <value>4096</value>
      </constant>
      <constant namespace="global" line="104" package="PHPWavUtils">
        <name>SPEAKER_TOP_FRONT_CENTER</name>
        <full_name>SPEAKER_TOP_FRONT_CENTER</full_name>
        <value>8192</value>
      </constant>
      <constant namespace="global" line="105" package="PHPWavUtils">
        <name>SPEAKER_TOP_FRONT_RIGHT</name>
        <full_name>SPEAKER_TOP_FRONT_RIGHT</full_name>
        <value>16384</value>
      </constant>
      <constant namespace="global" line="106" package="PHPWavUtils">
        <name>SPEAKER_TOP_BACK_LEFT</name>
        <full_name>SPEAKER_TOP_BACK_LEFT</full_name>
        <value>32768</value>
      </constant>
      <constant namespace="global" line="107" package="PHPWavUtils">
        <name>SPEAKER_TOP_BACK_CENTER</name>
        <full_name>SPEAKER_TOP_BACK_CENTER</full_name>
        <value>65536</value>
      </constant>
      <constant namespace="global" line="108" package="PHPWavUtils">
        <name>SPEAKER_TOP_BACK_RIGHT</name>
        <full_name>SPEAKER_TOP_BACK_RIGHT</full_name>
        <value>131072</value>
      </constant>
      <constant namespace="global" line="109" package="PHPWavUtils">
        <name>SPEAKER_ALL</name>
        <full_name>SPEAKER_ALL</full_name>
        <value>262143</value>
      </constant>
      <constant namespace="global" line="112" package="PHPWavUtils">
        <name>WAVE_FORMAT_PCM</name>
        <full_name>WAVE_FORMAT_PCM</full_name>
        <value>1</value>
        <docblock line="111">
          <description/>
          <long-description/>
          <tag line="111" name="var" description="PCM Audio Format" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="115" package="PHPWavUtils">
        <name>WAVE_FORMAT_IEEE_FLOAT</name>
        <full_name>WAVE_FORMAT_IEEE_FLOAT</full_name>
        <value>3</value>
        <docblock line="114">
          <description/>
          <long-description/>
          <tag line="114" name="var" description="IEEE FLOAT Audio Format" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="118" package="PHPWavUtils">
        <name>WAVE_FORMAT_EXTENSIBLE</name>
        <full_name>WAVE_FORMAT_EXTENSIBLE</full_name>
        <value>65534</value>
        <docblock line="117">
          <description/>
          <long-description/>
          <tag line="117" name="var" description="EXTENSIBLE Audio Format - actual audio format defined by SubFormat" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="121" package="PHPWavUtils">
        <name>WAVE_SUBFORMAT_PCM</name>
        <full_name>WAVE_SUBFORMAT_PCM</full_name>
        <value>"0100000000001000800000aa00389b71"</value>
        <docblock line="120">
          <description/>
          <long-description/>
          <tag line="120" name="var" description="PCM Audio Format SubType - LE hex representation of GUID {00000001-0000-0010-8000-00AA00389B71}" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="124" package="PHPWavUtils">
        <name>WAVE_SUBFORMAT_IEEE_FLOAT</name>
        <full_name>WAVE_SUBFORMAT_IEEE_FLOAT</full_name>
        <value>"0300000000001000800000aa00389b71"</value>
        <docblock line="123">
          <description/>
          <long-description/>
          <tag line="123" name="var" description="IEEE FLOAT Audio Format SubType - LE hex representation of GUID {00000003-0000-0010-8000-00AA00389B71}" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="protected" line="133" namespace="global" package="Default">
        <name>$LOOKUP_LOGBASE</name>
        <default>array(2.513, 2.667, 2.841, 3.038, 3.262, 3.52, 3.819, 4.171, 4.589, 5.093, 5.711, 6.487, 7.483, 8.806, 10.634, 13.302, 17.51, 24.97, 41.155, 96.088)</default>
        <docblock line="130">
          <description/>
          <long-description/>
          <tag line="130" name="var" description="Log base modifier lookup table for a given threshold (in 0.05 steps) used by normalizeSample. Adjusts the slope (1st derivative) of the log function at the threshold to 1 for a smooth transition from linear to logarithmic amplitude output." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="141" namespace="global" package="Default">
        <name>$_actualSize</name>
        <default/>
        <docblock line="140">
          <description/>
          <long-description/>
          <tag line="140" name="var" description="The actual physical file size" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="144" namespace="global" package="Default">
        <name>$_chunkSize</name>
        <default/>
        <docblock line="143">
          <description/>
          <long-description/>
          <tag line="143" name="var" description="The size of the file in RIFF header" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="147" namespace="global" package="Default">
        <name>$_fmtChunkSize</name>
        <default/>
        <docblock line="146">
          <description/>
          <long-description/>
          <tag line="146" name="var" description="The size of the &quot;fmt &quot; chunk" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="150" namespace="global" package="Default">
        <name>$_fmtExtendedSize</name>
        <default/>
        <docblock line="149">
          <description/>
          <long-description/>
          <tag line="149" name="var" description="The size of the extended &quot;fmt &quot; data" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="153" namespace="global" package="Default">
        <name>$_factChunkSize</name>
        <default/>
        <docblock line="152">
          <description/>
          <long-description/>
          <tag line="152" name="var" description="The size of the &quot;fact&quot; chunk" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="156" namespace="global" package="Default">
        <name>$_dataSize</name>
        <default/>
        <docblock line="155">
          <description/>
          <long-description/>
          <tag line="155" name="var" description="Size of the data chunk" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="159" namespace="global" package="Default">
        <name>$_dataSize_fp</name>
        <default/>
        <docblock line="158">
          <description/>
          <long-description/>
          <tag line="158" name="var" description="Size of the data chunk in the opened wav file" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="162" namespace="global" package="Default">
        <name>$_dataSize_valid</name>
        <default/>
        <docblock line="161">
          <description/>
          <long-description/>
          <tag line="161" name="var" description="Does _dataSize really reflect strlen($_samples)? Case when a wav file is read with readData = false" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="165" namespace="global" package="Default">
        <name>$_dataOffset</name>
        <default/>
        <docblock line="164">
          <description/>
          <long-description/>
          <tag line="164" name="var" description="Starting offset of data chunk" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="168" namespace="global" package="Default">
        <name>$_audioFormat</name>
        <default/>
        <docblock line="167">
          <description/>
          <long-description/>
          <tag line="167" name="var" description="The audio format - WavFile::WAVE_FORMAT_*" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="171" namespace="global" package="Default">
        <name>$_audioSubFormat</name>
        <default/>
        <docblock line="170">
          <description/>
          <long-description/>
          <tag line="170" name="var" description="The audio subformat - WavFile::WAVE_SUBFORMAT_*" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="174" namespace="global" package="Default">
        <name>$_numChannels</name>
        <default/>
        <docblock line="173">
          <description/>
          <long-description/>
          <tag line="173" name="var" description="Number of channels in the audio file" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="177" namespace="global" package="Default">
        <name>$_channelMask</name>
        <default/>
        <docblock line="176">
          <description/>
          <long-description/>
          <tag line="176" name="var" description="The channel mask" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="180" namespace="global" package="Default">
        <name>$_sampleRate</name>
        <default/>
        <docblock line="179">
          <description/>
          <long-description/>
          <tag line="179" name="var" description="Samples per second" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="183" namespace="global" package="Default">
        <name>$_bitsPerSample</name>
        <default/>
        <docblock line="182">
          <description/>
          <long-description/>
          <tag line="182" name="var" description="Number of bits per sample" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="186" namespace="global" package="Default">
        <name>$_validBitsPerSample</name>
        <default/>
        <docblock line="185">
          <description/>
          <long-description/>
          <tag line="185" name="var" description="Number of valid bits per sample" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="189" namespace="global" package="Default">
        <name>$_blockAlign</name>
        <default/>
        <docblock line="188">
          <description/>
          <long-description/>
          <tag line="188" name="var" description="NumChannels * BitsPerSample/8" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="192" namespace="global" package="Default">
        <name>$_numBlocks</name>
        <default/>
        <docblock line="191">
          <description/>
          <long-description/>
          <tag line="191" name="var" description="Number of sample blocks" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="195" namespace="global" package="Default">
        <name>$_byteRate</name>
        <default/>
        <docblock line="194">
          <description/>
          <long-description/>
          <tag line="194" name="var" description="Bytes per second" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="198" namespace="global" package="Default">
        <name>$_samples</name>
        <default/>
        <docblock line="197">
          <description/>
          <long-description/>
          <tag line="197" name="var" description="Binary string of samples" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="201" namespace="global" package="Default">
        <name>$_fp</name>
        <default/>
        <docblock line="200">
          <description/>
          <long-description/>
          <tag line="200" name="var" description="The file pointer used for reading wavs from file or memory" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="PHPWavUtils">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="207">
          <description>WavFile Constructor.</description>
          <long-description>&lt;pre&gt;&lt;code&gt;$wav1 = new WavFile(2, 44100, 16);         // new wav with 2 channels, at 44100 samples/sec and 16 bits per sample
$wav2 = new WavFile('./audio/sound.wav');  // open and read wav file
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="207" name="param" description="(Optional) If string, the filename of the wav file to open. The number of channels otherwise. Defaults to 1." type="string|int" variable="$numChannelsOrFileName">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="207" name="param" description="(Optional) If opening a file and boolean, decides whether to read the data chunk or not. Defaults to true. The sample rate in samples per second otherwise. 8000 = standard telephone, 16000 = wideband telephone, 32000 = FM radio and 44100 = CD quality. Defaults to 8000." type="int|bool" variable="$sampleRateOrReadData">
            <type by_reference="false">int</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="207" name="param" description="(Optional) The number of bits per sample. Has to be 8, 16 or 24 for PCM audio or 32 for IEEE FLOAT audio. 8 = telephone, 16 = CD and 24 or 32 = studio quality. Defaults to 8." type="int" variable="$bitsPerSample">
            <type by_reference="false">int</type>
          </tag>
          <tag line="207" name="throws" description="" type="\WavFormatException">
            <type by_reference="false">\WavFormatException</type>
          </tag>
          <tag line="207" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$numChannelsOrFileName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="221">
          <name>$sampleRateOrReadData</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="221">
          <name>$bitsPerSample</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="256" package="PHPWavUtils">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="260" package="PHPWavUtils">
        <name>__clone</name>
        <full_name>__clone</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="269" package="PHPWavUtils">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="264">
          <description>Output the wav file headers and data.</description>
          <long-description/>
          <tag line="264" name="return" description="The encoded file." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="286" package="PHPWavUtils">
        <name>unpackSample</name>
        <full_name>unpackSample</full_name>
        <docblock line="279">
          <description>Unpacks a single binary sample to numeric value.</description>
          <long-description/>
          <tag line="279" name="param" description="(Required) The sample to decode." type="string" variable="$sampleBinary">
            <type by_reference="false">string</type>
          </tag>
          <tag line="279" name="param" description="(Optional) The bits per sample to decode. If omitted, derives it from the length of $sampleBinary." type="int" variable="$bitDepth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="279" name="return" description="The numeric sample value. Float for 32-bit samples. Returns null for unsupported bit depths." type="int|float">
            <type by_reference="false">int</type>
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="286">
          <name>$sampleBinary</name>
          <default/>
          <type/>
        </argument>
        <argument line="286">
          <name>$bitDepth</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="332" package="PHPWavUtils">
        <name>packSample</name>
        <full_name>packSample</full_name>
        <docblock line="325">
          <description>Packs a single numeric sample to binary.</description>
          <long-description/>
          <tag line="325" name="param" description="(Required) The sample to encode. Has to be within valid range for $bitDepth. Float values only for 32 bits." type="int|float" variable="$sample">
            <type by_reference="false">int</type>
            <type by_reference="false">float</type>
          </tag>
          <tag line="325" name="param" description="(Required) The bits per sample to encode with." type="int" variable="$bitDepth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="325" name="return" description="The encoded binary sample. Returns null for unsupported bit depths." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="332">
          <name>$sample</name>
          <default/>
          <type/>
        </argument>
        <argument line="332">
          <name>$bitDepth</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="370" package="PHPWavUtils">
        <name>unpackSampleBlock</name>
        <full_name>unpackSampleBlock</full_name>
        <docblock line="362">
          <description>Unpacks a binary sample block to numeric values.</description>
          <long-description/>
          <tag line="362" name="param" description="(Required) The binary sample block (all channels)." type="string" variable="$sampleBlock">
            <type by_reference="false">string</type>
          </tag>
          <tag line="362" name="param" description="(Required) The bits per sample to decode." type="int" variable="$bitDepth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="362" name="param" description="(Optional) The number of channels to decode. If omitted, derives it from the length of $sampleBlock and $bitDepth." type="int" variable="$numChannels">
            <type by_reference="false">int</type>
          </tag>
          <tag line="362" name="return" description="The sample values as an array of integers of floats for 32 bits. First channel is array index 1." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="370">
          <name>$sampleBlock</name>
          <default/>
          <type/>
        </argument>
        <argument line="370">
          <name>$bitDepth</name>
          <default/>
          <type/>
        </argument>
        <argument line="370">
          <name>$numChannels</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="392" package="PHPWavUtils">
        <name>packSampleBlock</name>
        <full_name>packSampleBlock</full_name>
        <docblock line="385">
          <description>Packs an array of numeric channel samples to a binary sample block.</description>
          <long-description/>
          <tag line="385" name="param" description="(Required) The array of channel sample values. Expects float values for 32 bits and integer otherwise." type="array" variable="$samples">
            <type by_reference="false">array</type>
          </tag>
          <tag line="385" name="param" description="(Required) The bits per sample to encode with." type="int" variable="$bitDepth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="385" name="return" description="The encoded binary sample block." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="392">
          <name>$samples</name>
          <default/>
          <type/>
        </argument>
        <argument line="392">
          <name>$bitDepth</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="419" package="PHPWavUtils">
        <name>normalizeSample</name>
        <full_name>normalizeSample</full_name>
        <docblock line="401">
          <description>Normalizes a float audio sample.</description>
          <long-description>&lt;p&gt;Maximum input range assumed for compression is [-2, 2].
See http://www.voegler.eu/pub/audio/ for more information.&lt;/p&gt;</long-description>
          <tag line="401" name="param" description="(Required) The float sample to normalize." type="float" variable="$sampleFloat">
            <type by_reference="false">float</type>
          </tag>
          <tag line="401" name="param" description="(Required) The threshold or gain factor for normalizing the amplitude. &lt;ul&gt;&#10;    &lt;li&gt; &gt;= 1 - Normalize by multiplying by the threshold (boost - positive gain). &lt;br /&gt;&#10;           A value of 1 in effect means no normalization (and results in clipping). &lt;/li&gt;&#10;    &lt;li&gt; &lt;= -1 - Normalize by dividing by the the absolute value of threshold (attenuate - negative gain). &lt;br /&gt;&#10;           A factor of 2 (-2) is about 6dB reduction in volume.&lt;/li&gt;&#10;    &lt;li&gt; [0, 1) - (open inverval - not including 1) - The threshold&#10;           above which amplitudes are comressed logarithmically. &lt;br /&gt;&#10;           e.g. 0.6 to leave amplitudes up to 60% &quot;as is&quot; and compress above. &lt;/li&gt;&#10;    &lt;li&gt; (-1, 0) - (open inverval - not including -1 and 0) - The threshold&#10;           above which amplitudes are comressed linearly. &lt;br /&gt;&#10;           e.g. -0.6 to leave amplitudes up to 60% &quot;as is&quot; and compress above. &lt;/li&gt;&lt;/ul&gt;" type="float" variable="$threshold">
            <type by_reference="false">float</type>
          </tag>
          <tag line="401" name="return" description="The normalized sample." type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="419">
          <name>$sampleFloat</name>
          <default/>
          <type/>
        </argument>
        <argument line="419">
          <name>$threshold</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="453" package="PHPWavUtils">
        <name>getActualSize</name>
        <full_name>getActualSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="457" package="PHPWavUtils">
        <name>setActualSize</name>
        <full_name>setActualSize</full_name>
        <argument line="457">
          <name>$actualSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="467" package="PHPWavUtils">
        <name>getChunkSize</name>
        <full_name>getChunkSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="471" package="PHPWavUtils">
        <name>setChunkSize</name>
        <full_name>setChunkSize</full_name>
        <argument line="471">
          <name>$chunkSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="487" package="PHPWavUtils">
        <name>getFmtChunkSize</name>
        <full_name>getFmtChunkSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="491" package="PHPWavUtils">
        <name>setFmtChunkSize</name>
        <full_name>setFmtChunkSize</full_name>
        <argument line="491">
          <name>$fmtChunkSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="504" package="PHPWavUtils">
        <name>getFmtExtendedSize</name>
        <full_name>getFmtExtendedSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="508" package="PHPWavUtils">
        <name>setFmtExtendedSize</name>
        <full_name>setFmtExtendedSize</full_name>
        <argument line="508">
          <name>$fmtExtendedSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="526" package="PHPWavUtils">
        <name>getFactChunkSize</name>
        <full_name>getFactChunkSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="530" package="PHPWavUtils">
        <name>setFactChunkSize</name>
        <full_name>setFactChunkSize</full_name>
        <argument line="530">
          <name>$factChunkSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="547" package="PHPWavUtils">
        <name>getDataSize</name>
        <full_name>getDataSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="551" package="PHPWavUtils">
        <name>setDataSize</name>
        <full_name>setDataSize</full_name>
        <argument line="551">
          <name>$dataSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="565" package="PHPWavUtils">
        <name>getDataOffset</name>
        <full_name>getDataOffset</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="569" package="PHPWavUtils">
        <name>setDataOffset</name>
        <full_name>setDataOffset</full_name>
        <argument line="569">
          <name>$dataOffset</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="583" package="PHPWavUtils">
        <name>getAudioFormat</name>
        <full_name>getAudioFormat</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="587" package="PHPWavUtils">
        <name>setAudioFormat</name>
        <full_name>setAudioFormat</full_name>
        <argument line="587">
          <name>$audioFormat</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="612" package="PHPWavUtils">
        <name>getAudioSubFormat</name>
        <full_name>getAudioSubFormat</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="616" package="PHPWavUtils">
        <name>setAudioSubFormat</name>
        <full_name>setAudioSubFormat</full_name>
        <argument line="616">
          <name>$audioSubFormat</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="630" package="PHPWavUtils">
        <name>getNumChannels</name>
        <full_name>getNumChannels</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="634" package="PHPWavUtils">
        <name>setNumChannels</name>
        <full_name>setNumChannels</full_name>
        <argument line="634">
          <name>$numChannels</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="650" package="PHPWavUtils">
        <name>getChannelMask</name>
        <full_name>getChannelMask</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="654" package="PHPWavUtils">
        <name>setChannelMask</name>
        <full_name>setChannelMask</full_name>
        <argument line="654">
          <name>$channelMask</name>
          <default>self::SPEAKER_DEFAULT</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="675" package="PHPWavUtils">
        <name>getSampleRate</name>
        <full_name>getSampleRate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="679" package="PHPWavUtils">
        <name>setSampleRate</name>
        <full_name>setSampleRate</full_name>
        <argument line="679">
          <name>$sampleRate</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="693" package="PHPWavUtils">
        <name>getBitsPerSample</name>
        <full_name>getBitsPerSample</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="697" package="PHPWavUtils">
        <name>setBitsPerSample</name>
        <full_name>setBitsPerSample</full_name>
        <argument line="697">
          <name>$bitsPerSample</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="713" package="PHPWavUtils">
        <name>getValidBitsPerSample</name>
        <full_name>getValidBitsPerSample</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="717" package="PHPWavUtils">
        <name>setValidBitsPerSample</name>
        <full_name>setValidBitsPerSample</full_name>
        <argument line="717">
          <name>$validBitsPerSample</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="732" package="PHPWavUtils">
        <name>getBlockAlign</name>
        <full_name>getBlockAlign</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="736" package="PHPWavUtils">
        <name>setBlockAlign</name>
        <full_name>setBlockAlign</full_name>
        <argument line="736">
          <name>$blockAlign</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="748" package="PHPWavUtils">
        <name>getNumBlocks</name>
        <full_name>getNumBlocks</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="753" package="PHPWavUtils">
        <name>setNumBlocks</name>
        <full_name>setNumBlocks</full_name>
        <argument line="753">
          <name>$numBlocks</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="763" package="PHPWavUtils">
        <name>getByteRate</name>
        <full_name>getByteRate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="767" package="PHPWavUtils">
        <name>setByteRate</name>
        <full_name>setByteRate</full_name>
        <argument line="767">
          <name>$byteRate</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="777" package="PHPWavUtils">
        <name>getSamples</name>
        <full_name>getSamples</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="781" package="PHPWavUtils">
        <name>setSamples</name>
        <full_name>setSamples</full_name>
        <argument line="781">
          <name>$samples</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="797" package="PHPWavUtils">
        <name>getMinAmplitude</name>
        <full_name>getMinAmplitude</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="808" package="PHPWavUtils">
        <name>getZeroAmplitude</name>
        <full_name>getZeroAmplitude</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="819" package="PHPWavUtils">
        <name>getMaxAmplitude</name>
        <full_name>getMaxAmplitude</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="840" package="PHPWavUtils">
        <name>makeHeader</name>
        <full_name>makeHeader</full_name>
        <docblock line="834">
          <description>Construct a wav header from this object.</description>
          <long-description>&lt;p&gt;Includes "fact" chunk in necessary.
http://www-mmsp.ece.mcgill.ca/documents/audioformats/wave/wave.html&lt;/p&gt;</long-description>
          <tag line="834" name="return" description="The RIFF header data." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="884" package="PHPWavUtils">
        <name>getDataSubchunk</name>
        <full_name>getDataSubchunk</full_name>
        <docblock line="879">
          <description>Construct wav DATA chunk.</description>
          <long-description/>
          <tag line="879" name="return" description="The DATA header and chunk." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="905" package="PHPWavUtils">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="899">
          <description>Save the wav data to a file.</description>
          <long-description/>
          <tag line="899" name="param" description="(Required) The file path to save the wav to." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="899" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="905">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="927" package="PHPWavUtils">
        <name>openWav</name>
        <full_name>openWav</full_name>
        <docblock line="919">
          <description>Reads a wav header and data from a file.</description>
          <long-description/>
          <tag line="919" name="param" description="(Required) The path to the wav file to read." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="919" name="param" description="(Optional) If true, also read the data chunk." type="bool" variable="$readData">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="919" name="throws" description="" type="\WavFormatException">
            <type by_reference="false">\WavFormatException</type>
          </tag>
          <tag line="919" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="927">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="927">
          <name>$readData</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="953" package="PHPWavUtils">
        <name>closeWav</name>
        <full_name>closeWav</full_name>
        <docblock line="949">
          <description>Close a with openWav() previously opened wav file or free the buffer of setWavData().</description>
          <long-description>&lt;p&gt;Not necessary if the data has been read (readData = true) already.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="967" package="PHPWavUtils">
        <name>setWavData</name>
        <full_name>setWavData</full_name>
        <docblock line="959">
          <description>Set the wav file data and properties from a wav file in a string.</description>
          <long-description/>
          <tag line="959" name="param" description="(Required) The wav file data. Passed by reference." type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="959" name="param" description="(Optional) True to free the passed $data after copying." type="bool" variable="$free">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="959" name="throws" description="" type="\WavFormatException">
            <type by_reference="false">\WavFormatException</type>
          </tag>
          <tag line="959" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="967">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
        <argument line="967">
          <name>$free</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="997" package="PHPWavUtils">
        <name>readWav</name>
        <full_name>readWav</full_name>
        <docblock line="990">
          <description>Read wav file from a stream.</description>
          <long-description/>
          <tag line="990" name="param" description="(Optional) If true, also read the data chunk." type="\" variable="$readData"/>
          <tag line="990" name="throws" description="" type="\WavFormatException">
            <type by_reference="false">\WavFormatException</type>
          </tag>
          <tag line="990" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="997">
          <name>$readData</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1022" package="PHPWavUtils">
        <name>readWavHeader</name>
        <full_name>readWavHeader</full_name>
        <docblock line="1015">
          <description>Parse a wav header.</description>
          <long-description>&lt;p&gt;http://www-mmsp.ece.mcgill.ca/documents/audioformats/wave/wave.html&lt;/p&gt;</long-description>
          <tag line="1015" name="throws" description="" type="\WavFormatException">
            <type by_reference="false">\WavFormatException</type>
          </tag>
          <tag line="1015" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1278" package="PHPWavUtils">
        <name>readWavData</name>
        <full_name>readWavData</full_name>
        <docblock line="1271">
          <description>Read the wav data from the file into the buffer.</description>
          <long-description/>
          <tag line="1271" name="param" description="(Optional) The byte offset to skip before starting to read. Must be a multiple of BlockAlign." type="\" variable="$dataOffset"/>
          <tag line="1271" name="param" description="(Optional) The size of the data to read in bytes. Must be a multiple of BlockAlign. Defaults to all data." type="\" variable="$dataSize"/>
          <tag line="1271" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1278">
          <name>$dataOffset</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1278">
          <name>$dataSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1319" package="PHPWavUtils">
        <name>getSampleBlock</name>
        <full_name>getSampleBlock</full_name>
        <docblock line="1313">
          <description>Return a single sample block from the file.</description>
          <long-description/>
          <tag line="1313" name="param" description="(Required) The sample block number. Zero based." type="int" variable="$blockNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1313" name="return" description="The binary sample block (all channels). Returns null if the sample block number was out of range." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1319">
          <name>$blockNum</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1344" package="PHPWavUtils">
        <name>setSampleBlock</name>
        <full_name>setSampleBlock</full_name>
        <docblock line="1336">
          <description>Set a single sample block.</description>
          <long-description>&lt;p&gt;&lt;br /&gt;
Allows to append a sample block.&lt;/p&gt;</long-description>
          <tag line="1336" name="param" description="(Required) The binary sample block (all channels)." type="string" variable="$sampleBlock">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1336" name="param" description="(Required) The sample block number. Zero based." type="int" variable="$blockNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1336" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1344">
          <name>$sampleBlock</name>
          <default/>
          <type/>
        </argument>
        <argument line="1344">
          <name>$blockNum</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1389" package="PHPWavUtils">
        <name>getSampleValue</name>
        <full_name>getSampleValue</full_name>
        <docblock line="1381">
          <description>Get a float sample value for a specific sample block and channel number.</description>
          <long-description/>
          <tag line="1381" name="param" description="(Required) The sample block number to fetch. Zero based." type="int" variable="$blockNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1381" name="param" description="(Required) The channel number within the sample block to fetch. First channel is 1." type="int" variable="$channelNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1381" name="return" description="The float sample value. Returns null if the sample block number was out of range." type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="1381" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1389">
          <name>$blockNum</name>
          <default/>
          <type/>
        </argument>
        <argument line="1389">
          <name>$channelNum</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1453" package="PHPWavUtils">
        <name>setSampleValue</name>
        <full_name>setSampleValue</full_name>
        <docblock line="1443">
          <description>Sets a float sample value for a specific sample block number and channel.</description>
          <long-description>&lt;p&gt;&lt;br /&gt;
Converts float values to appropriate integer values and clips properly. &lt;br /&gt;
Allows to append samples (in order).&lt;/p&gt;</long-description>
          <tag line="1443" name="param" description="(Required) The float sample value to set. Converts float values and clips if necessary." type="float" variable="$sampleFloat">
            <type by_reference="false">float</type>
          </tag>
          <tag line="1443" name="param" description="(Required) The sample block number to set or append. Zero based." type="int" variable="$blockNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1443" name="param" description="(Required) The channel number within the sample block to set or append. First channel is 1." type="int" variable="$channelNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1443" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1453">
          <name>$sampleFloat</name>
          <default/>
          <type/>
        </argument>
        <argument line="1453">
          <name>$blockNum</name>
          <default/>
          <type/>
        </argument>
        <argument line="1453">
          <name>$channelNum</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1571" package="PHPWavUtils">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="1546">
          <description>Run samples through audio processing filters.</description>
          <long-description>&lt;pre&gt;&lt;code&gt;$wav-&gt;filter(
     array(
         WavFile::FILTER_MIX =&gt; array(          // Filter for mixing 2 WavFile instances.
             'wav' =&gt; $wav2,                    // (Required) The WavFile to mix into this WhavFile. If no optional arguments are given, can be passed without the array.
             'loop' =&gt; true,                    // (Optional) Loop the selected portion (with warping to the beginning at the end).
             'blockOffset' =&gt; 0,                // (Optional) Block number to start mixing from.
             'numBlocks' =&gt; null                // (Optional) Number of blocks to mix in or to select for looping. Defaults to the end or all data for looping.
         ),
         WavFile::FILTER_NORMALIZE =&gt; 0.6,      // (Required) Normalization of (mixed) audio samples - see threshold parameter for normalizeSample().
         WavFile::FILTER_DEGRADE =&gt; 0.9         // (Required) Introduce random noise. The quality relative to the amplitude. 1 = no noise, 0 = max. noise.
     ),
     0,                                         // (Optional) The block number of this WavFile to start with.
     null                                       // (Optional) The number of blocks to process.
 );
 &lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="1546" name="param" description="(Required) An array of 1 or more audio processing filters." type="array" variable="$filters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1546" name="param" description="(Optional) The block number to start precessing from." type="int" variable="$blockOffset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1546" name="param" description="(Optional) The maximum  number of blocks to process." type="int" variable="$numBlocks">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1546" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1571">
          <name>$filters</name>
          <default/>
          <type/>
        </argument>
        <argument line="1571">
          <name>$blockOffset</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1571">
          <name>$numBlocks</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1678" package="PHPWavUtils">
        <name>appendWav</name>
        <full_name>appendWav</full_name>
        <docblock line="1671">
          <description>Append a wav file to the current wav.</description>
          <long-description>&lt;p&gt;&lt;br /&gt;
The wav files must have the same sample rate, number of bits per sample, and number of channels.&lt;/p&gt;</long-description>
          <tag line="1671" name="param" description="(Required) The wav file to append." type="\WavFile" variable="$wav">
            <type by_reference="false">\WavFile</type>
          </tag>
          <tag line="1671" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1678">
          <name>$wav</name>
          <default/>
          <type>\WavFile</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1702" package="PHPWavUtils">
        <name>mergeWav</name>
        <full_name>mergeWav</full_name>
        <docblock line="1694">
          <description>Mix 2 wav files together.</description>
          <long-description>&lt;p&gt;&lt;br /&gt;
Both wavs must have the same sample rate and same number of channels.&lt;/p&gt;</long-description>
          <tag line="1694" name="param" description="(Required) The WavFile to mix." type="\WavFile" variable="$wav">
            <type by_reference="false">\WavFile</type>
          </tag>
          <tag line="1694" name="param" description="(Optional) See normalizeSample for an explanation." type="float" variable="$normalizeThreshold">
            <type by_reference="false">float</type>
          </tag>
          <tag line="1694" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1702">
          <name>$wav</name>
          <default/>
          <type>\WavFile</type>
        </argument>
        <argument line="1702">
          <name>$normalizeThreshold</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1714" package="PHPWavUtils">
        <name>insertSilence</name>
        <full_name>insertSilence</full_name>
        <docblock line="1709">
          <description>Add silence to the wav file.</description>
          <long-description/>
          <tag line="1709" name="param" description="(Optional) How many seconds of silence. If negative, add to the beginning of the file. Defaults to 1s." type="float" variable="$duration">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="1714">
          <name>$duration</name>
          <default>1.0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1736" package="PHPWavUtils">
        <name>degrade</name>
        <full_name>degrade</full_name>
        <docblock line="1731">
          <description>Degrade the quality of the wav file by introducing random noise.</description>
          <long-description/>
          <tag line="1731" name="param" description="quality  (Optional) The quality relative to the amplitude. 1 = no noise, 0 = max. noise." type="float" variable="$quality">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="1736">
          <name>$quality</name>
          <default>1.0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1749" package="PHPWavUtils">
        <name>generateNoise</name>
        <full_name>generateNoise</full_name>
        <docblock line="1743">
          <description>Generate noise at the end of the wav for the specified duration and volume.</description>
          <long-description/>
          <tag line="1743" name="param" description="(Optional) Number of seconds of noise to generate." type="float" variable="$duration">
            <type by_reference="false">float</type>
          </tag>
          <tag line="1743" name="param" description="(Optional) The percentage of the maximum amplitude to use. 100 = full amplitude." type="float" variable="$percent">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="1749">
          <name>$duration</name>
          <default>1.0</default>
          <type/>
        </argument>
        <argument line="1749">
          <name>$percent</name>
          <default>100</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1779" package="PHPWavUtils">
        <name>convertBitsPerSample</name>
        <full_name>convertBitsPerSample</full_name>
        <docblock line="1773">
          <description>Convert sample data to different bits per sample.</description>
          <long-description/>
          <tag line="1773" name="param" description="(Required) The new number of bits per sample;" type="int" variable="$bitsPerSample">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1773" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1779">
          <name>$bitsPerSample</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1806" package="PHPWavUtils">
        <name>displayInfo</name>
        <full_name>displayInfo</full_name>
        <docblock line="1803">
          <description>Output information about the wav object.</description>
          <long-description/>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1859" package="Default">
      <extends>\Exception</extends>
      <name>WavFileException</name>
      <full_name>\WavFileException</full_name>
      <docblock line="1856">
        <description>WavFileException indicates an illegal state or argument in this class.</description>
        <long-description/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="global" line="1864" package="Default">
      <extends>\WavFileException</extends>
      <name>WavFormatException</name>
      <full_name>\WavFormatException</full_name>
      <docblock line="1861">
        <description>WavFormatException indicates a malformed or unsupported wav file header.</description>
        <long-description/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libs/securimage/WavFile.php</error>
      <error line="256" code="50010">No DocBlock was found for method __destruct()</error>
      <error line="260" code="50010">No DocBlock was found for method __clone()</error>
      <error line="453" code="50010">No DocBlock was found for method getActualSize()</error>
      <error line="457" code="50010">No DocBlock was found for method setActualSize()</error>
      <error line="467" code="50010">No DocBlock was found for method getChunkSize()</error>
      <error line="471" code="50010">No DocBlock was found for method setChunkSize()</error>
      <error line="487" code="50010">No DocBlock was found for method getFmtChunkSize()</error>
      <error line="491" code="50010">No DocBlock was found for method setFmtChunkSize()</error>
      <error line="504" code="50010">No DocBlock was found for method getFmtExtendedSize()</error>
      <error line="508" code="50010">No DocBlock was found for method setFmtExtendedSize()</error>
      <error line="526" code="50010">No DocBlock was found for method getFactChunkSize()</error>
      <error line="530" code="50010">No DocBlock was found for method setFactChunkSize()</error>
      <error line="547" code="50010">No DocBlock was found for method getDataSize()</error>
      <error line="551" code="50010">No DocBlock was found for method setDataSize()</error>
      <error line="565" code="50010">No DocBlock was found for method getDataOffset()</error>
      <error line="569" code="50010">No DocBlock was found for method setDataOffset()</error>
      <error line="583" code="50010">No DocBlock was found for method getAudioFormat()</error>
      <error line="587" code="50010">No DocBlock was found for method setAudioFormat()</error>
      <error line="612" code="50010">No DocBlock was found for method getAudioSubFormat()</error>
      <error line="616" code="50010">No DocBlock was found for method setAudioSubFormat()</error>
      <error line="630" code="50010">No DocBlock was found for method getNumChannels()</error>
      <error line="634" code="50010">No DocBlock was found for method setNumChannels()</error>
      <error line="650" code="50010">No DocBlock was found for method getChannelMask()</error>
      <error line="654" code="50010">No DocBlock was found for method setChannelMask()</error>
      <error line="675" code="50010">No DocBlock was found for method getSampleRate()</error>
      <error line="679" code="50010">No DocBlock was found for method setSampleRate()</error>
      <error line="693" code="50010">No DocBlock was found for method getBitsPerSample()</error>
      <error line="697" code="50010">No DocBlock was found for method setBitsPerSample()</error>
      <error line="713" code="50010">No DocBlock was found for method getValidBitsPerSample()</error>
      <error line="717" code="50010">No DocBlock was found for method setValidBitsPerSample()</error>
      <error line="732" code="50010">No DocBlock was found for method getBlockAlign()</error>
      <error line="736" code="50010">No DocBlock was found for method setBlockAlign()</error>
      <error line="748" code="50010">No DocBlock was found for method getNumBlocks()</error>
      <error line="753" code="50010">No DocBlock was found for method setNumBlocks()</error>
      <error line="763" code="50010">No DocBlock was found for method getByteRate()</error>
      <error line="767" code="50010">No DocBlock was found for method setByteRate()</error>
      <error line="777" code="50010">No DocBlock was found for method getSamples()</error>
      <error line="781" code="50010">No DocBlock was found for method setSamples()</error>
      <error line="797" code="50010">No DocBlock was found for method getMinAmplitude()</error>
      <error line="808" code="50010">No DocBlock was found for method getZeroAmplitude()</error>
      <error line="819" code="50010">No DocBlock was found for method getMaxAmplitude()</error>
    </parse_markers>
  </file>
  <file path="libs/securimage/securimage.php" hash="c4329158f5ae35742a9fe8685a36c60b" package="Securimage">
    <docblock line="5">
      <description>Project:     Securimage: A PHP class for creating and managing form CAPTCHA images&lt;br /&gt;
File:        securimage.php&lt;br /&gt;</description>
      <long-description>&lt;p&gt;Copyright (c) 2013, Drew Phillips
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;p&gt;Any modifications to the library should be indicated clearly in the source code
to inform users that the changes are not a part of the original software.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you found this script useful, please take a quick moment to rate it.&lt;br /&gt;
http://www.hotscripts.com/rate/49400.html  Thanks.&lt;/p&gt;</long-description>
      <tag line="5" name="link" description="Securimage PHP CAPTCHA" link="http://www.phpcaptcha.org"/>
      <tag line="5" name="link" description="Download Latest Version" link="http://www.phpcaptcha.org/latest.zip"/>
      <tag line="5" name="link" description="Online Documentation" link="http://www.phpcaptcha.org/Securimage_Docs/"/>
      <tag line="5" name="copyright" description="2013 Drew Phillips"/>
      <tag line="5" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
      <tag line="5" name="version" description="3.5.1 (June 21, 2013)"/>
      <tag line="5" name="package" description="Securimage"/>
    </docblock>
    <include line="851" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="165" package="Securimage\classes">
      <extends/>
      <name>Securimage</name>
      <full_name>\Securimage</full_name>
      <docblock line="156">
        <description>Securimage CAPTCHA Class.</description>
        <long-description/>
        <tag line="156" name="version" description="3.5"/>
        <tag line="156" name="package" description="Securimage"/>
        <tag line="156" name="subpackage" description="classes"/>
        <tag line="156" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
      </docblock>
      <constant namespace="global" line="175" package="Securimage\classes">
        <name>SI_IMAGE_JPEG</name>
        <full_name>SI_IMAGE_JPEG</full_name>
        <value>1</value>
        <docblock line="171">
          <description>Renders captcha as a JPEG image</description>
          <long-description/>
          <tag line="171" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="180" package="Securimage\classes">
        <name>SI_IMAGE_PNG</name>
        <full_name>SI_IMAGE_PNG</full_name>
        <value>2</value>
        <docblock line="176">
          <description>Renders captcha as a PNG image (default)</description>
          <long-description/>
          <tag line="176" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="185" package="Securimage\classes">
        <name>SI_IMAGE_GIF</name>
        <full_name>SI_IMAGE_GIF</full_name>
        <value>3</value>
        <docblock line="181">
          <description>Renders captcha as a GIF image</description>
          <long-description/>
          <tag line="181" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="191" package="Securimage\classes">
        <name>SI_CAPTCHA_STRING</name>
        <full_name>SI_CAPTCHA_STRING</full_name>
        <value>0</value>
        <docblock line="187">
          <description>Create a normal alphanumeric captcha</description>
          <long-description/>
          <tag line="187" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="196" package="Securimage\classes">
        <name>SI_CAPTCHA_MATHEMATIC</name>
        <full_name>SI_CAPTCHA_MATHEMATIC</full_name>
        <value>1</value>
        <docblock line="192">
          <description>Create a captcha consisting of a simple math problem</description>
          <long-description/>
          <tag line="192" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="201" package="Securimage\classes">
        <name>SI_CAPTCHA_WORDS</name>
        <full_name>SI_CAPTCHA_WORDS</full_name>
        <value>2</value>
        <docblock line="197">
          <description>Create a word based captcha using 2 words</description>
          <long-description/>
          <tag line="197" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="208" package="Securimage\classes">
        <name>SI_DRIVER_MYSQL</name>
        <full_name>SI_DRIVER_MYSQL</full_name>
        <value>'mysql'</value>
        <docblock line="203">
          <description>MySQL option identifier for database storage option</description>
          <long-description/>
          <tag line="203" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="215" package="Securimage\classes">
        <name>SI_DRIVER_PGSQL</name>
        <full_name>SI_DRIVER_PGSQL</full_name>
        <value>'pgsql'</value>
        <docblock line="210">
          <description>PostgreSQL option identifier for database storage option</description>
          <long-description/>
          <tag line="210" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="222" package="Securimage\classes">
        <name>SI_DRIVER_SQLITE3</name>
        <full_name>SI_DRIVER_SQLITE3</full_name>
        <value>'sqlite'</value>
        <docblock line="217">
          <description>SQLite option identifier for database storage option</description>
          <long-description/>
          <tag line="217" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="public" line="231" namespace="global" package="Default">
        <name>$image_width</name>
        <default>215</default>
        <docblock line="227">
          <description>The width of the captcha image</description>
          <long-description/>
          <tag line="227" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="236" namespace="global" package="Default">
        <name>$image_height</name>
        <default>80</default>
        <docblock line="232">
          <description>The height of the captcha image</description>
          <long-description/>
          <tag line="232" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="241" namespace="global" package="Default">
        <name>$image_type</name>
        <default>self::SI_IMAGE_PNG</default>
        <docblock line="237">
          <description>The type of the image, default = png</description>
          <long-description/>
          <tag line="237" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="247" namespace="global" package="Default">
        <name>$image_bg_color</name>
        <default>'#ffffff'</default>
        <docblock line="243">
          <description>The background color of the captcha</description>
          <long-description/>
          <tag line="243" name="var" description="" type="\Securimage_Color">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="252" namespace="global" package="Default">
        <name>$text_color</name>
        <default>'#707070'</default>
        <docblock line="248">
          <description>The color of the captcha text</description>
          <long-description/>
          <tag line="248" name="var" description="" type="\Securimage_Color">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="257" namespace="global" package="Default">
        <name>$line_color</name>
        <default>'#707070'</default>
        <docblock line="253">
          <description>The color of the lines over the captcha</description>
          <long-description/>
          <tag line="253" name="var" description="" type="\Securimage_Color">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="262" namespace="global" package="Default">
        <name>$noise_color</name>
        <default>'#707070'</default>
        <docblock line="258">
          <description>The color of the noise that is drawn</description>
          <long-description/>
          <tag line="258" name="var" description="" type="\Securimage_Color">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="268" namespace="global" package="Default">
        <name>$text_transparency_percentage</name>
        <default>20</default>
        <docblock line="264">
          <description>How transparent to make the text 0 = completely opaque, 100 = invisible</description>
          <long-description/>
          <tag line="264" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="273" namespace="global" package="Default">
        <name>$use_transparent_text</name>
        <default>true</default>
        <docblock line="269">
          <description>Whether or not to draw the text transparently, true = use transparency, false = no transparency</description>
          <long-description/>
          <tag line="269" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="279" namespace="global" package="Default">
        <name>$code_length</name>
        <default>6</default>
        <docblock line="275">
          <description>The length of the captcha code</description>
          <long-description/>
          <tag line="275" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="284" namespace="global" package="Default">
        <name>$case_sensitive</name>
        <default>false</default>
        <docblock line="280">
          <description>Whether the captcha should be case sensitive (not recommended, use only for maximum protection)</description>
          <long-description/>
          <tag line="280" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="289" namespace="global" package="Default">
        <name>$charset</name>
        <default>'ABCDEFGHKLMNPRSTUVWYZabcdefghklmnprstuvwyz23456789'</default>
        <docblock line="285">
          <description>The character set to use for generating the captcha code</description>
          <long-description/>
          <tag line="285" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="294" namespace="global" package="Default">
        <name>$expiry_time</name>
        <default>900</default>
        <docblock line="290">
          <description>How long in seconds a captcha remains valid, after this time it will not be accepted</description>
          <long-description/>
          <tag line="290" name="var" description="" type="\unknown_type">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="301" namespace="global" package="Default">
        <name>$session_name</name>
        <default>null</default>
        <docblock line="296">
          <description>The session name securimage should use, only set this if your application uses a custom session name
It is recommended to set this value below so it is used by all securimage scripts</description>
          <long-description/>
          <tag line="296" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="307" namespace="global" package="Default">
        <name>$use_wordlist</name>
        <default>false</default>
        <docblock line="303">
          <description>true to use the wordlist file, false to generate random captcha codes</description>
          <long-description/>
          <tag line="303" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="313" namespace="global" package="Default">
        <name>$perturbation</name>
        <default>0.85</default>
        <docblock line="309">
          <description>The level of distortion, 0.75 = normal, 1.0 = very high distortion</description>
          <long-description/>
          <tag line="309" name="var" description="" type="double">
            <type by_reference="false">double</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="318" namespace="global" package="Default">
        <name>$num_lines</name>
        <default>5</default>
        <docblock line="314">
          <description>How many lines to draw over the captcha code to increase security</description>
          <long-description/>
          <tag line="314" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="323" namespace="global" package="Default">
        <name>$noise_level</name>
        <default>2</default>
        <docblock line="319">
          <description>The level of noise (random dots) to place on the image, 0-10</description>
          <long-description/>
          <tag line="319" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="329" namespace="global" package="Default">
        <name>$image_signature</name>
        <default>''</default>
        <docblock line="325">
          <description>The signature text to draw on the bottom corner of the image</description>
          <long-description/>
          <tag line="325" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="334" namespace="global" package="Default">
        <name>$signature_color</name>
        <default>'#707070'</default>
        <docblock line="330">
          <description>The color of the signature text</description>
          <long-description/>
          <tag line="330" name="var" description="" type="\Securimage_Color">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="339" namespace="global" package="Default">
        <name>$signature_font</name>
        <default/>
        <docblock line="335">
          <description>The path to the ttf font file to use for the signature text, defaults to $ttf_file (AHGBold.ttf)</description>
          <long-description/>
          <tag line="335" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="348" namespace="global" package="Default">
        <name>$use_sqlite_db</name>
        <default>false</default>
        <docblock line="341">
          <description>DO NOT USE!!!
Use an SQLite database to store data (for users that do not support cookies)</description>
          <long-description/>
          <tag line="341" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="341" name="see" description="\Securimage::$use_sqlite_db" refers="\Securimage::$use_sqlite_db"/>
          <tag line="341" name="deprecated" description="3.2RC4"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="358" namespace="global" package="Default">
        <name>$use_database</name>
        <default>false</default>
        <docblock line="350">
          <description>Use a database backend for code storage.</description>
          <long-description>&lt;p&gt;Provides a fallback to users with cookies disabled.
Required when using captcha IDs.&lt;/p&gt;</long-description>
          <tag line="350" name="see" description="\Securimage::$database_driver" refers="\Securimage::$database_driver"/>
          <tag line="350" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="367" namespace="global" package="Default">
        <name>$database_driver</name>
        <default>self::SI_DRIVER_SQLITE3</default>
        <docblock line="360">
          <description>Database driver to use for database support.</description>
          <long-description>&lt;p&gt;Allowable values: 'mysql', 'pgsql', 'sqlite'.
Default: sqlite&lt;/p&gt;</long-description>
          <tag line="360" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="376" namespace="global" package="Default">
        <name>$database_host</name>
        <default>'localhost'</default>
        <docblock line="369">
          <description>Database host to connect to when using mysql or postgres
On Linux use "localhost" for Unix domain socket, otherwise uses TCP/IP
Does not apply to SQLite</description>
          <long-description/>
          <tag line="369" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="384" namespace="global" package="Default">
        <name>$database_user</name>
        <default>''</default>
        <docblock line="378">
          <description>Database username for connection (mysql, postgres only)
Default is an empty string</description>
          <long-description/>
          <tag line="378" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="392" namespace="global" package="Default">
        <name>$database_pass</name>
        <default>''</default>
        <docblock line="386">
          <description>Database password for connection (mysql, postgres only)
Default is empty string</description>
          <long-description/>
          <tag line="386" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="400" namespace="global" package="Default">
        <name>$database_name</name>
        <default>''</default>
        <docblock line="394">
          <description>Name of the database to select (mysql, postgres only)</description>
          <long-description/>
          <tag line="394" name="see" description="for SQLite" refers="\Securimage::$database_file"/>
          <tag line="394" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="409" namespace="global" package="Default">
        <name>$database_table</name>
        <default>'captcha_codes'</default>
        <docblock line="402">
          <description>Database table where captcha codes are stored
Note: Securimage will attempt to create this table for you if it does
not exist.</description>
          <long-description>&lt;p&gt;If the table cannot be created, an E_USER_WARNING is emitted.&lt;/p&gt;</long-description>
          <tag line="402" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="418" namespace="global" package="Default">
        <name>$database_file</name>
        <default/>
        <docblock line="411">
          <description>Fully qualified path to the database file when using SQLite3.</description>
          <long-description>&lt;p&gt;This value is only used when $database_driver == sqlite3 and does
not apply when no database is used, or when using MySQL or PostgreSQL.&lt;/p&gt;</long-description>
          <tag line="411" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="425" namespace="global" package="Default">
        <name>$captcha_type</name>
        <default>self::SI_CAPTCHA_STRING</default>
        <docblock line="420">
          <description>The type of captcha to create, either alphanumeric, or a math problem&lt;br /&gt;
Securimage::SI_CAPTCHA_STRING or Securimage::SI_CAPTCHA_MATHEMATIC</description>
          <long-description/>
          <tag line="420" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="442" namespace="global" package="Default">
        <name>$namespace</name>
        <default/>
        <docblock line="427">
          <description>The captcha namespace, use this if you have multiple forms on a single page, blank if you do not use multiple forms on one page</description>
          <long-description/>
          <tag line="427" name="var" description="&lt;code&gt; &lt;?php // in securimage_show.php (create one show script for each form) $img-&gt;namespace = 'contact_form'; // in form validator $img-&gt;namespace = 'contact_form'; if ($img-&gt;check($code) == true) { echo &quot;Valid!&quot;; } &lt;/code&gt;" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="448" namespace="global" package="Default">
        <name>$ttf_file</name>
        <default/>
        <docblock line="444">
          <description>The font file to use to draw the captcha code, leave blank for default font AHGBold.ttf</description>
          <long-description/>
          <tag line="444" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="453" namespace="global" package="Default">
        <name>$wordlist_file</name>
        <default/>
        <docblock line="449">
          <description>The path to the wordlist file to use, leave blank for default words/words.txt</description>
          <long-description/>
          <tag line="449" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="458" namespace="global" package="Default">
        <name>$background_directory</name>
        <default/>
        <docblock line="454">
          <description>The directory to scan for background images, if set a random background will be chosen from this folder</description>
          <long-description/>
          <tag line="454" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="464" namespace="global" package="Default">
        <name>$sqlite_database</name>
        <default/>
        <docblock line="459">
          <description>The path to the SQLite database file to use, if $use_sqlite_database = true, should be chmod 666</description>
          <long-description/>
          <tag line="459" name="deprecated" description="3.2RC4"/>
          <tag line="459" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="472" namespace="global" package="Default">
        <name>$audio_path</name>
        <default/>
        <docblock line="465">
          <description>The path to the securimage audio directory, can be set in securimage_play.php</description>
          <long-description/>
          <tag line="465" name="var" description="&lt;code&gt; $img-&gt;audio_path = '/home/yoursite/public_html/securimage/audio/en/'; &lt;/code&gt;" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="479" namespace="global" package="Default">
        <name>$audio_noise_path</name>
        <default/>
        <docblock line="473">
          <description>The path to the directory containing audio files that will be selected
randomly and mixed with the captcha audio.</description>
          <long-description/>
          <tag line="473" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="489" namespace="global" package="Default">
        <name>$audio_use_noise</name>
        <default/>
        <docblock line="480">
          <description>Whether or not to mix background noise files into captcha audio (true = mix, false = no)
Mixing random background audio with noise can help improve security of audio captcha.</description>
          <long-description>&lt;p&gt;Default: securimage/audio/noise&lt;/p&gt;</long-description>
          <tag line="480" name="since" description="3.0.3"/>
          <tag line="480" name="see" description="\Securimage::$audio_noise_path" refers="\Securimage::$audio_noise_path"/>
          <tag line="480" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="511" namespace="global" package="Default">
        <name>$audio_mix_normalization</name>
        <default>0.6</default>
        <docblock line="490">
          <description>The method and threshold (or gain factor) used to normalize the mixing with background noise.</description>
          <long-description>&lt;p&gt;See http://www.voegler.eu/pub/audio/ for more information.&lt;/p&gt;

&lt;p&gt;Valid:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt; &gt;= 1 - Normalize by multiplying by the threshold (boost - positive gain). &lt;br /&gt;
           A value of 1 in effect means no normalization (and results in clipping). &lt;/li&gt;
    &lt;li&gt; &lt;= -1 - Normalize by dividing by the the absolute value of threshold (attenuate - negative gain). &lt;br /&gt;
           A factor of 2 (-2) is about 6dB reduction in volume.&lt;/li&gt;
    &lt;li&gt; [0, 1) - (open inverval - not including 1) - The threshold
           above which amplitudes are comressed logarithmically. &lt;br /&gt;
           e.g. 0.6 to leave amplitudes up to 60% "as is" and compress above. &lt;/li&gt;
    &lt;li&gt; (-1, 0) - (open inverval - not including -1 and 0) - The threshold
           above which amplitudes are comressed linearly. &lt;br /&gt;
           e.g. -0.6 to leave amplitudes up to 60% "as is" and compress above. &lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;Default: 0.6&lt;/p&gt;</long-description>
          <tag line="490" name="since" description="3.0.4"/>
          <tag line="490" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="519" namespace="global" package="Default">
        <name>$degrade_audio</name>
        <default/>
        <docblock line="512">
          <description>Whether or not to degrade audio by introducing random noise (improves security of audio captcha)
Default: true</description>
          <long-description/>
          <tag line="512" name="since" description="3.0.3"/>
          <tag line="512" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="526" namespace="global" package="Default">
        <name>$audio_gap_min</name>
        <default>0</default>
        <docblock line="520">
          <description>Minimum delay to insert between captcha audio letters in milliseconds</description>
          <long-description/>
          <tag line="520" name="since" description="3.0.3"/>
          <tag line="520" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="533" namespace="global" package="Default">
        <name>$audio_gap_max</name>
        <default>600</default>
        <docblock line="527">
          <description>Maximum delay to insert between captcha audio letters in milliseconds</description>
          <long-description/>
          <tag line="527" name="since" description="3.0.3"/>
          <tag line="527" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="539" namespace="global" package="Default">
        <name>$_captchaId</name>
        <default>null</default>
        <docblock line="535">
          <description>Captcha ID if using static captcha</description>
          <long-description/>
          <tag line="535" name="var" description="Unique captcha id" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="541" namespace="global" package="Default">
        <name>$im</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="542" namespace="global" package="Default">
        <name>$tmpimg</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="543" namespace="global" package="Default">
        <name>$bgimg</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="544" namespace="global" package="Default">
        <name>$iscale</name>
        <default>5</default>
      </property>
      <property final="false" static="false" visibility="public" line="546" namespace="global" package="Default">
        <name>$securimage_path</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="553" namespace="global" package="Default">
        <name>$code</name>
        <default/>
        <docblock line="548">
          <description>The captcha challenge value (either the case-sensitive/insensitive word captcha, or the solution to the math captcha)</description>
          <long-description/>
          <tag line="548" name="var" description="Captcha challenge value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="560" namespace="global" package="Default">
        <name>$code_display</name>
        <default/>
        <docblock line="555">
          <description>The display value of the captcha to draw on the image (the word captcha, or the math equation to present to the user)</description>
          <long-description/>
          <tag line="555" name="var" description="Captcha display value to draw on the image" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="570" namespace="global" package="Default">
        <name>$display_value</name>
        <default/>
        <docblock line="562">
          <description>A value that can be passed to the constructor that can be used to generate a captcha image with a given value
This value does not get stored in the session or database and is only used when calling Securimage::show().</description>
          <long-description>&lt;p&gt;If a display_value was passed to the constructor and the captcha image is generated, the display_value will be used
as the string to draw on the captcha image.  Used only if captcha codes are generated and managed by a 3rd party app/library&lt;/p&gt;</long-description>
          <tag line="562" name="var" description="Captcha code value to display on the image" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="577" namespace="global" package="Default">
        <name>$captcha_code</name>
        <default/>
        <docblock line="572">
          <description>Captcha code supplied by user [set from Securimage::check()]</description>
          <long-description/>
          <tag line="572" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="584" namespace="global" package="Default">
        <name>$no_exit</name>
        <default/>
        <docblock line="579">
          <description>Flag that can be specified telling securimage not to call exit after generating a captcha image or audio file</description>
          <long-description/>
          <tag line="579" name="var" description="If true, script will not terminate; if false script will terminate (default)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="591" namespace="global" package="Default">
        <name>$no_session</name>
        <default/>
        <docblock line="586">
          <description>Flag indicating whether or not a PHP session should be started and used</description>
          <long-description/>
          <tag line="586" name="var" description="If true, no session will be started; if false, session will be started and used to store data (default)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="598" namespace="global" package="Default">
        <name>$send_headers</name>
        <default/>
        <docblock line="593">
          <description>Flag indicating whether or not HTTP headers will be sent when outputting captcha image/audio</description>
          <long-description/>
          <tag line="593" name="var" description="If true (default) headers will be sent, if false, no headers are sent" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="605" namespace="global" package="Default">
        <name>$pdo_conn</name>
        <default/>
        <docblock line="600">
          <description>PDO connection when a database is used</description>
          <long-description/>
          <tag line="600" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="608" namespace="global" package="Default">
        <name>$gdbgcolor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="609" namespace="global" package="Default">
        <name>$gdtextcolor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="610" namespace="global" package="Default">
        <name>$gdlinecolor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="611" namespace="global" package="Default">
        <name>$gdsignaturecolor</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="629" package="Securimage\classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="613">
          <description>Create a new securimage object, pass options to set in the constructor.&lt;br /&gt;
This can be used to display a captcha, play an audible captcha, or validate an entry</description>
          <long-description/>
          <tag line="613" name="param" description="&lt;code&gt;&#10;$options = array(&#10;    'text_color' =&gt; new Securimage_Color('#013020'),&#10;    'code_length' =&gt; 5,&#10;    'num_lines' =&gt; 5,&#10;    'noise_level' =&gt; 3,&#10;    'font_file' =&gt; Securimage::getPath() . '/custom.ttf'&#10;);&#10;$img = new Securimage($options);&#10;&lt;/code&gt;" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="629">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="721" package="Securimage\classes">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="717">
          <description>Return the absolute path to the Securimage directory</description>
          <long-description/>
          <tag line="717" name="return" description="The path to the securimage base directory" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="735" package="Securimage\classes">
        <name>getCaptchaId</name>
        <full_name>getCaptchaId</full_name>
        <docblock line="726">
          <description>Generate a new captcha ID or retrieve the current ID</description>
          <long-description/>
          <tag line="726" name="param" description="bool If true, generates a new challenge and returns and ID" type="\" variable="$new"/>
          <tag line="726" name="param" description="array Additional options to be passed to Securimage.&#10;Must include database options if not set directly in securimage.php" type="\" variable="$options"/>
          <tag line="726" name="return" description="Returns null if no captcha id set and new was false, or string captcha ID" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="735">
          <name>$new</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="735">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="763" package="Securimage\classes">
        <name>checkByCaptchaId</name>
        <full_name>checkByCaptchaId</full_name>
        <docblock line="752">
          <description>Validate a captcha code input against a captcha ID</description>
          <long-description/>
          <tag line="752" name="param" description="The captcha ID to check" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="752" name="param" description="The captcha value supplied by the user" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="752" name="param" description="Array of options to construct Securimage with.&#10;Options must include database options if they are not set in securimage.php" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="752" name="see" description="\Securimage::$database_driver" refers="\Securimage::$database_driver"/>
          <tag line="752" name="return" description="true if the code was valid for the given captcha ID, false if not or if database failed to open" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="763">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
        <argument line="763">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="763">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="807" package="Securimage\classes">
        <name>show</name>
        <full_name>show</full_name>
        <docblock line="794">
          <description>Used to serve a captcha image to the browser</description>
          <long-description/>
          <tag line="794" name="param" description="The path to the background image to use&#10;&lt;code&gt;&#10;$img = new Securimage();&#10;$img-&gt;code_length = 6;&#10;$img-&gt;num_lines   = 5;&#10;$img-&gt;noise_level = 5;&#10;$img-&gt;show(); // sends the image to browser&#10;exit;&#10;&lt;/code&gt;" type="string" variable="$background_image">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="807">
          <name>$background_image</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="831" package="Securimage\classes">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="818">
          <description>Check a submitted code against the stored value</description>
          <long-description/>
          <tag line="818" name="param" description="The captcha code to check&#10;&lt;code&gt;&#10;$code = $_POST['code'];&#10;$img  = new Securimage();&#10;if ($img-&gt;check($code) == true) {&#10;    $captcha_valid = true;&#10;} else {&#10;    $captcha_valid = false;&#10;}&#10;&lt;/code&gt;" type="string" variable="$code">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="831">
          <name>$code</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="847" package="Securimage\classes">
        <name>outputAudioFile</name>
        <full_name>outputAudioFile</full_name>
        <docblock line="838">
          <description>Output a wav file of the captcha code to the browser</description>
          <long-description>&lt;pre&gt;&lt;code&gt;$img = new Securimage();
$img-&gt;outputAudioFile(); // outputs a wav file to the browser
exit;
&lt;/code&gt;&lt;/pre&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="899" package="Securimage\classes">
        <name>getCode</name>
        <full_name>getCode</full_name>
        <docblock line="893">
          <description>Return the code from the session or sqlite database if used.</description>
          <long-description>&lt;p&gt;If none exists yet, an empty string is returned&lt;/p&gt;</long-description>
          <tag line="893" name="param" description="bool   True to receive an array containing the code and properties" type="\" variable="$array"/>
          <tag line="893" name="return" description="Array if $array = true, otherwise a string containing the code" type="array|string">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="899">
          <name>$array</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="899">
          <name>$returnExisting</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="944" package="Securimage\classes">
        <name>doImage</name>
        <full_name>doImage</full_name>
        <docblock line="941">
          <description>The main image drawing routing, responsible for constructing the entire image and serving it</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1015" package="Securimage\classes">
        <name>allocateColors</name>
        <full_name>allocateColors</full_name>
        <docblock line="1012">
          <description>Allocate the colors to be used for the image</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1066" package="Securimage\classes">
        <name>setBackground</name>
        <full_name>setBackground</full_name>
        <docblock line="1063">
          <description>The the background color, or background image to be used</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1114" package="Securimage\classes">
        <name>getBackgroundFromDirectory</name>
        <full_name>getBackgroundFromDirectory</full_name>
        <docblock line="1111">
          <description>Scan the directory for a background image to use</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1136" package="Securimage\classes">
        <name>createCode</name>
        <full_name>createCode</full_name>
        <docblock line="1133">
          <description>Generates the code or math problem and saves the value to the session</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1188" package="Securimage\classes">
        <name>drawWord</name>
        <full_name>drawWord</full_name>
        <docblock line="1185">
          <description>Draws the captcha code on the image</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1226" package="Securimage\classes">
        <name>distortedCopy</name>
        <full_name>distortedCopy</full_name>
        <docblock line="1223">
          <description>Copies the captcha image to the final image with distortion applied</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1277" package="Securimage\classes">
        <name>drawLines</name>
        <full_name>drawLines</full_name>
        <docblock line="1274">
          <description>Draws distorted lines on the image</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1314" package="Securimage\classes">
        <name>drawNoise</name>
        <full_name>drawNoise</full_name>
        <docblock line="1311">
          <description>Draws random noise on the image</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1353" package="Securimage\classes">
        <name>addSignature</name>
        <full_name>addSignature</full_name>
        <docblock line="1350">
          <description>Print signature text on image</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1366" package="Securimage\classes">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="1363">
          <description>Sends the appropriate image and cache headers and outputs image to the browser</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1413" package="Securimage\classes">
        <name>getAudibleCode</name>
        <full_name>getAudibleCode</full_name>
        <docblock line="1408">
          <description>Gets the code and returns the binary audio file for the stored captcha code</description>
          <long-description/>
          <tag line="1408" name="return" description="audio representation of the captcha in Wav format" type="\The">
            <type by_reference="false">\The</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1456" package="Securimage\classes">
        <name>readCodeFromFile</name>
        <full_name>readCodeFromFile</full_name>
        <docblock line="1453">
          <description>Gets a captcha code from a wordlist</description>
          <long-description/>
        </docblock>
        <argument line="1456">
          <name>$numWords</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1499" package="Securimage\classes">
        <name>generateCode</name>
        <full_name>generateCode</full_name>
        <docblock line="1496">
          <description>Generates a random captcha code from the set character set</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1520" package="Securimage\classes">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="1516">
          <description>Checks the entered code against the value stored in the session or sqlite database, handles case sensitivity
Also clears the stored codes if the code was entered correctly to prevent re-use</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1562" package="Securimage\classes">
        <name>saveData</name>
        <full_name>saveData</full_name>
        <docblock line="1559">
          <description>Save data to session namespace and database if used</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1584" package="Securimage\classes">
        <name>saveCodeToDatabase</name>
        <full_name>saveCodeToDatabase</full_name>
        <docblock line="1581">
          <description>Saves the code to the sqlite database</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1623" package="Securimage\classes">
        <name>openDatabase</name>
        <full_name>openDatabase</full_name>
        <docblock line="1620">
          <description>Open sqlite database</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1680" package="Securimage\classes">
        <name>getDsn</name>
        <full_name>getDsn</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1701" package="Securimage\classes">
        <name>checkTablesExist</name>
        <full_name>checkTablesExist</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1743" package="Securimage\classes">
        <name>createDatabaseTables</name>
        <full_name>createDatabaseTables</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1813" package="Securimage\classes">
        <name>getCodeFromDatabase</name>
        <full_name>getCodeFromDatabase</full_name>
        <docblock line="1806">
          <description>Get a code from the sqlite database for ip address/captchaId.</description>
          <long-description/>
          <tag line="1806" name="return" description="Empty string if no code was found or has expired,&#10;otherwise returns the stored captcha code.  If a captchaId is set, this&#10;returns an array with indices &quot;code&quot; and &quot;code_disp&quot;" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1856" package="Securimage\classes">
        <name>clearCodeFromDatabase</name>
        <full_name>clearCodeFromDatabase</full_name>
        <docblock line="1853">
          <description>Remove an entered code from the database</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1882" package="Securimage\classes">
        <name>purgeOldCodesFromDatabase</name>
        <full_name>purgeOldCodesFromDatabase</full_name>
        <docblock line="1879">
          <description>Deletes old codes from sqlite database</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1901" package="Securimage\classes">
        <name>isCodeExpired</name>
        <full_name>isCodeExpired</full_name>
        <docblock line="1897">
          <description>Checks to see if the captcha code has expired and cannot be used</description>
          <long-description/>
          <tag line="1897" name="param" description="" type="\unknown_type" variable="$creation_time">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="1901">
          <name>$creation_time</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1920" package="Securimage\classes">
        <name>generateWAV</name>
        <full_name>generateWAV</full_name>
        <docblock line="1914">
          <description>Generate a wav file given the $letters in the code</description>
          <long-description/>
          <tag line="1914" name="todo" description="Add ability to merge 2 sound files together to have random background sounds"/>
          <tag line="1914" name="param" description="" type="array" variable="$letters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1914" name="return" description="The binary contents of the wav file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1920">
          <name>$letters</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2001" package="Securimage\classes">
        <name>getRandomNoiseFile</name>
        <full_name>getRandomNoiseFile</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2031" package="Securimage\classes">
        <name>audioError</name>
        <full_name>audioError</full_name>
        <docblock line="2026">
          <description>Return a wav file saying there was an error generating file</description>
          <long-description/>
          <tag line="2026" name="return" description="The binary audio contents" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2041" package="Securimage\classes">
        <name>canSendHeaders</name>
        <full_name>canSendHeaders</full_name>
        <docblock line="2036">
          <description>Checks to see if headers can be sent and if any error has been output to the browser</description>
          <long-description/>
          <tag line="2036" name="return" description="true if headers haven't been sent and no output/errors will break audio/images, false if unsafe" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2059" package="Securimage\classes">
        <name>frand</name>
        <full_name>frand</full_name>
        <docblock line="2054">
          <description>Return a random float between 0 and 0.9999</description>
          <long-description/>
          <tag line="2054" name="return" description="Random float between 0 and 0.9999" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2069" package="Securimage\classes">
        <name>initColor</name>
        <full_name>initColor</full_name>
        <docblock line="2064">
          <description>Convert an html color code to a Securimage_Color</description>
          <long-description/>
          <tag line="2064" name="param" description="" type="string" variable="$color">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2064" name="param" description="The defalt color to use if $color is invalid" type="\Securimage_Color" variable="$default">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
        <argument line="2069">
          <name>$color</name>
          <default/>
          <type/>
        </argument>
        <argument line="2069">
          <name>$default</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2101" package="Securimage\classes">
        <name>errorHandler</name>
        <full_name>errorHandler</full_name>
        <docblock line="2086">
          <description>Error handler used when outputting captcha image or audio.</description>
          <long-description>&lt;p&gt;This error handler helps determine if any errors raised would
prevent captcha image or audio from displaying.  If they have
no effect on the output buffer or headers, true is returned so
the script can continue processing.
See https://github.com/dapphp/securimage/issues/15&lt;/p&gt;</long-description>
          <tag line="2086" name="param" description="" type="int" variable="$errno">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2086" name="param" description="" type="string" variable="$errstr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2086" name="param" description="" type="string" variable="$errfile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2086" name="param" description="" type="int" variable="$errline">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2086" name="param" description="" type="array" variable="$errcontext">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2086" name="return" description="true if handled, false if PHP should handle" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2101">
          <name>$errno</name>
          <default/>
          <type/>
        </argument>
        <argument line="2101">
          <name>$errstr</name>
          <default/>
          <type/>
        </argument>
        <argument line="2101">
          <name>$errfile</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="2101">
          <name>$errline</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="2101">
          <name>$errcontext</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2125" package="Securimage\classes">
      <extends/>
      <name>Securimage_Color</name>
      <full_name>\Securimage_Color</full_name>
      <docblock line="2116">
        <description>Color object for Securimage CAPTCHA</description>
        <long-description/>
        <tag line="2116" name="version" description="3.0"/>
        <tag line="2116" name="since" description="2.0"/>
        <tag line="2116" name="package" description="Securimage"/>
        <tag line="2116" name="subpackage" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="2127" namespace="global" package="Default">
        <name>$r</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="2128" namespace="global" package="Default">
        <name>$g</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="2129" namespace="global" package="Default">
        <name>$b</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2142" package="Securimage\classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="2131">
          <description>Create a new Securimage_Color object.&lt;br /&gt;
Constructor expects 1 or 3 arguments.&lt;br /&gt;
When passing a single argument, specify the color using HTML hex format,&lt;br /&gt;
when passing 3 arguments, specify each RGB component (from 0-255) individually.&lt;br /&gt;
$color = new Securimage_Color('#0080FF') or &lt;br /&gt;
$color = new Securimage_Color(0, 128, 255)</description>
          <long-description/>
          <tag line="2131" name="param" description="" type="string" variable="$color">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2131" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="2142">
          <name>$color</name>
          <default>'#ffffff'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2178" package="Securimage\classes">
        <name>constructRGB</name>
        <full_name>constructRGB</full_name>
        <docblock line="2172">
          <description>Construct from an rgb triplet</description>
          <long-description/>
          <tag line="2172" name="param" description="The red component, 0-255" type="int" variable="$red">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2172" name="param" description="The green component, 0-255" type="int" variable="$green">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2172" name="param" description="The blue component, 0-255" type="int" variable="$blue">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="2178">
          <name>$red</name>
          <default/>
          <type/>
        </argument>
        <argument line="2178">
          <name>$green</name>
          <default/>
          <type/>
        </argument>
        <argument line="2178">
          <name>$blue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2196" package="Securimage\classes">
        <name>constructHTML</name>
        <full_name>constructHTML</full_name>
        <docblock line="2192">
          <description>Construct from an html hex color code</description>
          <long-description/>
          <tag line="2192" name="param" description="" type="string" variable="$color">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2196">
          <name>$color</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="541" code="50018">No DocBlock was found for property $im</error>
      <error line="542" code="50018">No DocBlock was found for property $tmpimg</error>
      <error line="543" code="50018">No DocBlock was found for property $bgimg</error>
      <error line="544" code="50018">No DocBlock was found for property $iscale</error>
      <error line="546" code="50018">No DocBlock was found for property $securimage_path</error>
      <error line="608" code="50018">No DocBlock was found for property $gdbgcolor</error>
      <error line="609" code="50018">No DocBlock was found for property $gdtextcolor</error>
      <error line="610" code="50018">No DocBlock was found for property $gdlinecolor</error>
      <error line="611" code="50018">No DocBlock was found for property $gdsignaturecolor</error>
      <error line="726" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $options in getCaptchaId()</error>
      <error line="893" code="50015">Argument $returnExisting is missing from the Docblock of getCode()</error>
      <error line="1453" code="50015">Argument $numWords is missing from the Docblock of readCodeFromFile()</error>
      <error line="1680" code="50010">No DocBlock was found for method getDsn()</error>
      <error line="1701" code="50010">No DocBlock was found for method checkTablesExist()</error>
      <error line="1743" code="50010">No DocBlock was found for method createDatabaseTables()</error>
      <error line="2001" code="50010">No DocBlock was found for method getRandomNoiseFile()</error>
      <error line="2127" code="50018">No DocBlock was found for property $r</error>
      <error line="2128" code="50018">No DocBlock was found for property $g</error>
      <error line="2129" code="50018">No DocBlock was found for property $b</error>
    </parse_markers>
  </file>
  <file path="libs/securimage/securimage_play.php" hash="b3abe61bf58a68c6c94b210368a2f9d6" package="Securimage">
    <docblock line="3">
      <description>Project:     Securimage: A PHP class for creating and managing form CAPTCHA images&lt;br /&gt;
File:        securimage_play.php&lt;br /&gt;</description>
      <long-description>&lt;p&gt;This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or any later version.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Any modifications to the library should be indicated clearly in the source code
to inform users that the changes are not a part of the original software.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you found this script useful, please take a quick moment to rate it.&lt;br /&gt;
http://www.hotscripts.com/rate/49400.html  Thanks.&lt;/p&gt;</long-description>
      <tag line="3" name="link" description="Securimage PHP CAPTCHA" link="http://www.phpcaptcha.org"/>
      <tag line="3" name="link" description="Download Latest Version" link="http://www.phpcaptcha.org/latest.zip"/>
      <tag line="3" name="link" description="Online Documentation" link="http://www.phpcaptcha.org/Securimage_Docs/"/>
      <tag line="3" name="copyright" description="2012 Drew Phillips"/>
      <tag line="3" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
      <tag line="3" name="version" description="3.5.1 (June 21, 2013)"/>
      <tag line="3" name="package" description="Securimage"/>
    </docblock>
    <include line="37" type="Require Once" package="Default">
      <name/>
    </include>
  </file>
  <file path="libs/common.php" hash="513bc42933331cc9d07292b19bf0dc64" package="FrameTool">
    <docblock line="3">
      <description>Fonctions de base du framework</description>
      <long-description/>
      <tag line="3" name="package" description="FrameTool"/>
    </docblock>
    <include line="196" type="Include Once" package="Default">
      <name/>
    </include>
    <include line="212" type="Include Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="11" package="FrameTool">
      <name>ACL_ANNONYMOUS</name>
      <full_name>\ACL_ANNONYMOUS</full_name>
      <value>0</value>
    </constant>
    <constant namespace="global" line="12" package="FrameTool">
      <name>ACL_GUEST</name>
      <full_name>\ACL_GUEST</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="13" package="FrameTool">
      <name>ACL_USER</name>
      <full_name>\ACL_USER</full_name>
      <value>2</value>
    </constant>
    <constant namespace="global" line="14" package="FrameTool">
      <name>ACL_SUPERUSER</name>
      <full_name>\ACL_SUPERUSER</full_name>
      <value>3</value>
    </constant>
    <constant namespace="global" line="15" package="FrameTool">
      <name>ACL_ADMINISTRATOR</name>
      <full_name>\ACL_ADMINISTRATOR</full_name>
      <value>4</value>
    </constant>
    <function namespace="global" line="21" package="FrameTool">
      <name>aclFromText</name>
      <full_name>\aclFromText</full_name>
      <docblock line="17">
        <description>Pour r√©cup√©rer la valeur num√©rique associ√© √† un r√¥le</description>
        <long-description/>
        <tag line="17" name="param" description="" type="\type" variable="$txt">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="21">
        <name>$txt</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="38" package="FrameTool">
      <name>hasAcl</name>
      <full_name>\hasAcl</full_name>
      <docblock line="33">
        <description>Test si l'utilisateur a un niveau d'acc√®s</description>
        <long-description/>
        <tag line="33" name="param" description="" type="\type" variable="$acl">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="33" name="return" description="" type="\type">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="38">
        <name>$acl</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="51" package="FrameTool">
      <name>needAcl</name>
      <full_name>\needAcl</full_name>
      <docblock line="46">
        <description>Affiche une page d'erreur si le niveau d'acc√®s de l'utilisateur
est trop faible</description>
        <long-description/>
        <tag line="46" name="param" description="" type="\type" variable="$acl">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="51">
        <name>$acl</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="76" package="FrameTool">
      <name>acl_smarty</name>
      <full_name>\acl_smarty</full_name>
      <docblock line="56">
        <description>Permet de cacher quelque chose en fonction de l'accr√©ditation</description>
        <long-description>&lt;p&gt;__Dans le template __
SYNTAXE1 :
{acl level="ADMINISTRATOR"}...{/acl}
Pour s'afficher il faut le niveau demand√©. Level peut √™tre :
ADMINISTRATOR, SUPERUSER, USER, GUEST, ANNONYMOUS&lt;/p&gt;

&lt;p&gt;SYNTAXE2:
{acl action="act" page="pge"}..{/acl}
Pour s'afficher, l'utilisateur doit avoir les acc√®s √† la page pge de l'action
act.&lt;/p&gt;</long-description>
        <tag line="56" name="param" description="" type="\type" variable="$params">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="56" name="param" description="" type="\type" variable="$content">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="56" name="param" description="" type="\type" variable="$smarty">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="56" name="param" description="" type="\type" variable="$repeat">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="56" name="return" description="" type="\type">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="76">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="76">
        <name>$content</name>
        <default/>
        <type/>
      </argument>
      <argument line="76">
        <name>$smarty</name>
        <default/>
        <type/>
      </argument>
      <argument line="76">
        <name>$repeat</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="100" package="FrameTool">
      <name>getAclLevel</name>
      <full_name>\getAclLevel</full_name>
      <docblock line="93">
        <description>R√©cup√®re le niveau n√©cessaire pour aller effectuer une action</description>
        <long-description/>
        <tag line="93" name="global" description="type $pdo"/>
        <tag line="93" name="param" description="" type="\type" variable="$action">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="93" name="param" description="" type="\type" variable="$page">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="93" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="100">
        <name>$action</name>
        <default/>
        <type/>
      </argument>
      <argument line="100">
        <name>$page</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="136" package="FrameTool">
      <name>mkurl</name>
      <full_name>\mkurl</full_name>
      <docblock line="128">
        <description>Permet de cr√©er des URL pour le framework</description>
        <long-description/>
        <tag line="128" name="global" description="type $urlops"/>
        <tag line="128" name="global" description="type $urlbase"/>
        <tag line="128" name="param" description="" type="\type" variable="$page">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="128" name="param" description="" type="\type" variable="$options">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="128" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="136">
        <name>$action</name>
        <default/>
        <type/>
      </argument>
      <argument line="136">
        <name>$page</name>
        <default>'index'</default>
        <type/>
      </argument>
      <argument line="136">
        <name>$options</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="153" package="FrameTool">
      <name>mkurl_smarty</name>
      <full_name>\mkurl_smarty</full_name>
      <argument line="153">
        <name>$params</name>
        <default/>
        <type/>
      </argument>
      <argument line="153">
        <name>$smarty</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="172" package="FrameTool">
      <name>quit</name>
      <full_name>\quit</full_name>
      <docblock line="169">
        <description>Permet de quitter proprement le CMS</description>
        <long-description/>
      </docblock>
    </function>
    <function namespace="global" line="181" package="FrameTool">
      <name>redirect</name>
      <full_name>\redirect</full_name>
      <docblock line="176">
        <description>Redirige l'utilisateur.</description>
        <long-description/>
        <tag line="176" name="param" description="" type="\type" variable="$page">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="176" name="param" description="" type="\type" variable="$options">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="181">
        <name>$action</name>
        <default/>
        <type/>
      </argument>
      <argument line="181">
        <name>$page</name>
        <default>'index'</default>
        <type/>
      </argument>
      <argument line="181">
        <name>$options</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="193" package="FrameTool">
      <name>modsecu</name>
      <full_name>\modsecu</full_name>
      <docblock line="187">
        <description>Laisser la possibilit√© √† un module de g√©rer sa s√©curit√©</description>
        <long-description/>
        <tag line="187" name="global" description="type $root"/>
        <tag line="187" name="param" description="" type="\type" variable="$action">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="187" name="param" description="" type="\type" variable="$page">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="193">
        <name>$action</name>
        <default/>
        <type/>
      </argument>
      <argument line="193">
        <name>$page</name>
        <default>'index'</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="209" package="FrameTool">
      <name>modexec</name>
      <full_name>\modexec</full_name>
      <docblock line="203">
        <description>Execute un controleur</description>
        <long-description/>
        <tag line="203" name="global" description="type $root"/>
        <tag line="203" name="param" description="" type="\type" variable="$action">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="203" name="param" description="" type="\type" variable="$page">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="209">
        <name>$action</name>
        <default/>
        <type/>
      </argument>
      <argument line="209">
        <name>$page</name>
        <default>'index'</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="233" package="FrameTool">
      <name>urldup</name>
      <full_name>\urldup</full_name>
      <docblock line="229">
        <description>G√©n√®re une URL de la m√™me page avec des param√®tres diff√©rents</description>
        <long-description/>
        <tag line="229" name="param" description="" type="\type" variable="$options">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="233">
        <name>$options</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="259" package="FrameTool">
      <name>autoInsert</name>
      <full_name>\autoInsert</full_name>
      <docblock line="250">
        <description>Cette fonction un peu pratique permet d'ins√©rer en BDD des donn√©es
√† partir d'un formulaire.</description>
        <long-description/>
        <tag line="250" name="global" description="type $pdo"/>
        <tag line="250" name="param" description="" type="\type" variable="$table">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="250" name="param" description="" type="\type" variable="$prefix">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="250" name="param" description="" type="array" variable="$extra">
          <type by_reference="false">array</type>
        </tag>
        <tag line="250" name="return" description="" type="\type">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="259">
        <name>$table</name>
        <default/>
        <type/>
      </argument>
      <argument line="259">
        <name>$prefix</name>
        <default/>
        <type/>
      </argument>
      <argument line="259">
        <name>$extra</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="291" package="Default">
      <extends/>
      <name>SimplePager</name>
      <full_name>\SimplePager</full_name>
      <docblock line="287">
        <description>Petite classe tr√®s pratique qui permet de cr√©er un gestionnaire de page
facilement.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="297" namespace="global" package="Default">
        <name>$start</name>
        <default/>
        <docblock line="293">
          <description>num√©ro du premier enregistrement</description>
          <long-description/>
          <tag line="293" name="var" description="" type="\type">
            <type by_reference="false">\type</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="303" namespace="global" package="Default">
        <name>$nbByPage</name>
        <default/>
        <docblock line="299">
          <description>Nombre d'enregistrements par page</description>
          <long-description/>
          <tag line="299" name="var" description="" type="\type">
            <type by_reference="false">\type</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="309" namespace="global" package="Default">
        <name>$prepose</name>
        <default/>
        <docblock line="305">
          <description>Prefix des variables pour ce pager</description>
          <long-description/>
          <tag line="305" name="var" description="" type="\type">
            <type by_reference="false">\type</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="315" namespace="global" package="Default">
        <name>$sql</name>
        <default/>
        <docblock line="311">
          <description>Requete SQL contenant la limite pr√©par√© avec PDO</description>
          <long-description/>
          <tag line="311" name="var" description="" type="\type">
            <type by_reference="false">\type</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="321" namespace="global" package="Default">
        <name>$sqlCount</name>
        <default/>
        <docblock line="317">
          <description>Requete SQL pr√©par√© avec PDO qui servira √† compter les enregistrements</description>
          <long-description/>
          <tag line="317" name="var" description="" type="\type">
            <type by_reference="false">\type</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="327" namespace="global" package="Default">
        <name>$key</name>
        <default/>
        <docblock line="323">
          <description>Petit racourcis pour avoir la variable du num√©ro de page</description>
          <long-description/>
          <tag line="323" name="var" description="" type="\type">
            <type by_reference="false">\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="338" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="329">
          <description>On construit le pager</description>
          <long-description/>
          <tag line="329" name="global" description="type $pdo"/>
          <tag line="329" name="param" description="" type="\type" variable="$table">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="329" name="param" description="" type="\type" variable="$where">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="329" name="param" description="" type="\type" variable="$id">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="329" name="param" description="" type="\type" variable="$nbpage">
            <type by_reference="false">\type</type>
          </tag>
        </docblock>
        <argument line="338">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="338">
          <name>$where</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="338">
          <name>$id</name>
          <default>'p'</default>
          <type/>
        </argument>
        <argument line="338">
          <name>$nbpage</name>
          <default>50</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="361" package="Default">
        <name>bindValue</name>
        <full_name>bindValue</full_name>
        <docblock line="356">
          <description>Bind une valeur sur les requetes SQL pr√©par√©s</description>
          <long-description/>
          <tag line="356" name="param" description="" type="\type" variable="$param">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="356" name="param" description="" type="\type" variable="$value">
            <type by_reference="false">\type</type>
          </tag>
        </docblock>
        <argument line="361">
          <name>$param</name>
          <default/>
          <type/>
        </argument>
        <argument line="361">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="369" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="366">
          <description>Applique le pager √† un template</description>
          <long-description/>
        </docblock>
        <argument line="369">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="128" code="50014">Name of argument $action does not match with the DocBlock's name $page in \mkurl()</error>
      <error line="128" code="50014">Name of argument $page does not match with the DocBlock's name $options in \mkurl()</error>
      <error line="128" code="50015">Argument $options is missing from the Docblock of \mkurl()</error>
      <error line="153" code="50009">No DocBlock was found for function \mkurl_smarty()</error>
      <error line="176" code="50014">Name of argument $action does not match with the DocBlock's name $page in \redirect()</error>
      <error line="176" code="50014">Name of argument $page does not match with the DocBlock's name $options in \redirect()</error>
      <error line="176" code="50015">Argument $options is missing from the Docblock of \redirect()</error>
      <error line="366" code="50015">Argument $tpl is missing from the Docblock of run()</error>
    </parse_markers>
  </file>
  <file path="libs/pi_barcode.php" hash="77c58890aafe28a4fe08de3facbedd0d" package="piBarecode">
    <docblock line="2">
      <description>Fichier de la biblioth√®que pi_barecode</description>
      <long-description/>
      <tag line="2" name="package" description="piBarecode"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="117" package="Default">
      <extends/>
      <name>pi_barcode</name>
      <full_name>\pi_barcode</full_name>
      <property final="false" static="false" visibility="public" line="123" namespace="global" package="Default">
        <name>$CODE</name>
        <default/>
        <docblock line="119">
          <description>***** DÔøΩfinition des variables *****</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="124" namespace="global" package="Default">
        <name>$FULLCODE</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="125" namespace="global" package="Default">
        <name>$TYPE</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="126" namespace="global" package="Default">
        <name>$HEIGHT</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="127" namespace="global" package="Default">
        <name>$WIDTH</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="128" namespace="global" package="Default">
        <name>$CODEWIDTH</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="129" namespace="global" package="Default">
        <name>$CALMZONE</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="130" namespace="global" package="Default">
        <name>$HR</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="131" namespace="global" package="Default">
        <name>$SHOWTYPE</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="132" namespace="global" package="Default">
        <name>$BACKGROUND</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="133" namespace="global" package="Default">
        <name>$FOREGROUND</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="134" namespace="global" package="Default">
        <name>$FILETYPE</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="135" namespace="global" package="Default">
        <name>$ENCODED</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="136" namespace="global" package="Default">
        <name>$IH</name>
        <default>NULL</default>
      </property>
      <property final="false" static="false" visibility="public" line="141" namespace="global" package="Default">
        <name>$C128</name>
        <default>array(0 =&gt; "11011001100", 1 =&gt; "11001101100", 2 =&gt; "11001100110", 3 =&gt; "10010011000", 4 =&gt; "10010001100", 5 =&gt; "10001001100", 6 =&gt; "10011001000", 7 =&gt; "10011000100", 8 =&gt; "10001100100", 9 =&gt; "11001001000", 10 =&gt; "11001000100", 11 =&gt; "11000100100", 12 =&gt; "10110011100", 13 =&gt; "10011011100", 14 =&gt; "10011001110", 15 =&gt; "10111001100", 16 =&gt; "10011101100", 17 =&gt; "10011100110", 18 =&gt; "11001110010", 19 =&gt; "11001011100", 20 =&gt; "11001001110", 21 =&gt; "11011100100", 22 =&gt; "11001110100", 23 =&gt; "11101101110", 24 =&gt; "11101001100", 25 =&gt; "11100101100", 26 =&gt; "11100100110", 27 =&gt; "11101100100", 28 =&gt; "11100110100", 29 =&gt; "11100110010", 30 =&gt; "11011011000", 31 =&gt; "11011000110", 32 =&gt; "11000110110", 33 =&gt; "10100011000", 34 =&gt; "10001011000", 35 =&gt; "10001000110", 36 =&gt; "10110001000", 37 =&gt; "10001101000", 38 =&gt; "10001100010", 39 =&gt; "11010001000", 40 =&gt; "11000101000", 41 =&gt; "11000100010", 42 =&gt; "10110111000", 43 =&gt; "10110001110", 44 =&gt; "10001101110", 45 =&gt; "10111011000", 46 =&gt; "10111000110", 47 =&gt; "10001110110", 48 =&gt; "11101110110", 49 =&gt; "11010001110", 50 =&gt; "11000101110", 51 =&gt; "11011101000", 52 =&gt; "11011100010", 53 =&gt; "11011101110", 54 =&gt; "11101011000", 55 =&gt; "11101000110", 56 =&gt; "11100010110", 57 =&gt; "11101101000", 58 =&gt; "11101100010", 59 =&gt; "11100011010", 60 =&gt; "11101111010", 61 =&gt; "11001000010", 62 =&gt; "11110001010", 63 =&gt; "10100110000", 64 =&gt; "10100001100", 65 =&gt; "10010110000", 66 =&gt; "10010000110", 67 =&gt; "10000101100", 68 =&gt; "10000100110", 69 =&gt; "10110010000", 70 =&gt; "10110000100", 71 =&gt; "10011010000", 72 =&gt; "10011000010", 73 =&gt; "10000110100", 74 =&gt; "10000110010", 75 =&gt; "11000010010", 76 =&gt; "11001010000", 77 =&gt; "11110111010", 78 =&gt; "11000010100", 79 =&gt; "10001111010", 80 =&gt; "10100111100", 81 =&gt; "10010111100", 82 =&gt; "10010011110", 83 =&gt; "10111100100", 84 =&gt; "10011110100", 85 =&gt; "10011110010", 86 =&gt; "11110100100", 87 =&gt; "11110010100", 88 =&gt; "11110010010", 89 =&gt; "11011011110", 90 =&gt; "11011110110", 91 =&gt; "11110110110", 92 =&gt; "10101111000", 93 =&gt; "10100011110", 94 =&gt; "10001011110", 95 =&gt; "10111101000", 96 =&gt; "10111100010", 97 =&gt; "11110101000", 98 =&gt; "11110100010", 99 =&gt; "10111011110", 100 =&gt; "10111101110", 101 =&gt; "11101011110", 102 =&gt; "11110101110", 'c' =&gt; "10111011110", 'b' =&gt; "10111101110", 'a' =&gt; "11101011110", 'A' =&gt; "11010000100", 'B' =&gt; "11010010000", 'C' =&gt; "11010011100", 'S' =&gt; "1100011101011")</default>
        <docblock line="138">
          <description>DÔøΩfinition des symbologies</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="184" namespace="global" package="Default">
        <name>$C25</name>
        <default>array(0 =&gt; "11331", 1 =&gt; "31113", 2 =&gt; "13113", 3 =&gt; "33111", 4 =&gt; "11313", 5 =&gt; "31311", 6 =&gt; "13311", 7 =&gt; "11133", 8 =&gt; "31131", 9 =&gt; "13131", 'D' =&gt; "111011101", 'F' =&gt; "111010111", 'd' =&gt; "1010", 'f' =&gt; "11101")</default>
      </property>
      <property final="false" static="false" visibility="public" line="194" namespace="global" package="Default">
        <name>$C39</name>
        <default>array('0' =&gt; "101001101101", '1' =&gt; "110100101011", '2' =&gt; "101100101011", '3' =&gt; "110110010101", '4' =&gt; "101001101011", '5' =&gt; "110100110101", '6' =&gt; "101100110101", '7' =&gt; "101001011011", '8' =&gt; "110100101101", '9' =&gt; "101100101101", 'A' =&gt; "110101001011", 'B' =&gt; "101101001011", 'C' =&gt; "110110100101", 'D' =&gt; "101011001011", 'E' =&gt; "110101100101", 'F' =&gt; "101101100101", 'G' =&gt; "101010011011", 'H' =&gt; "110101001101", 'I' =&gt; "101101001101", 'J' =&gt; "101011001101", 'K' =&gt; "110101010011", 'L' =&gt; "101101010011", 'M' =&gt; "110110101001", 'N' =&gt; "101011010011", 'O' =&gt; "110101101001", 'P' =&gt; "101101101001", 'Q' =&gt; "101010110011", 'R' =&gt; "110101011001", 'S' =&gt; "101101011001", 'T' =&gt; "101011011001", 'U' =&gt; "110010101011", 'V' =&gt; "100110101011", 'W' =&gt; "110011010101", 'X' =&gt; "100101101011", 'Y' =&gt; "110010110101", 'Z' =&gt; "100110110101", '-' =&gt; "100101011011", '.' =&gt; "110010101101", ' ' =&gt; "100110101101", '$' =&gt; "100100100101", '/' =&gt; "100100101001", '+' =&gt; "100101001001", '%' =&gt; "101001001001", '*' =&gt; "100101101101")</default>
      </property>
      <property final="false" static="false" visibility="public" line="212" namespace="global" package="Default">
        <name>$codabar</name>
        <default>array('0' =&gt; "101010011", '1' =&gt; "101011001", '2' =&gt; "101001011", '3' =&gt; "110010101", '4' =&gt; "101101001", '5' =&gt; "110101001", '6' =&gt; "100101011", '7' =&gt; "100101101", '8' =&gt; "100110101", '9' =&gt; "110100101", '-' =&gt; "101001101", '$' =&gt; "101100101", ':' =&gt; "1101011011", '/' =&gt; "1101101011", '.' =&gt; "1101101101", '+' =&gt; "1011011011", 'A' =&gt; "1011001001", 'B' =&gt; "1010010011", 'C' =&gt; "1001001011", 'D' =&gt; "1010011001")</default>
      </property>
      <property final="false" static="false" visibility="public" line="222" namespace="global" package="Default">
        <name>$MSI</name>
        <default>array(0 =&gt; "100100100100", 1 =&gt; "100100100110", 2 =&gt; "100100110100", 3 =&gt; "100100110110", 4 =&gt; "100110100100", 5 =&gt; "100110100110", 6 =&gt; "100110110100", 7 =&gt; "100110110110", 8 =&gt; "110100100100", 9 =&gt; "110100100110", 'D' =&gt; "110", 'F' =&gt; "1001")</default>
      </property>
      <property final="false" static="false" visibility="public" line="237" namespace="global" package="Default">
        <name>$C11</name>
        <default>array('0' =&gt; "101011", '1' =&gt; "1101011", '2' =&gt; "1001011", '3' =&gt; "1100101", '4' =&gt; "1011011", '5' =&gt; "1101101", '6' =&gt; "1001101", '7' =&gt; "1010011", '8' =&gt; "1101001", '9' =&gt; "110101", '-' =&gt; "101101", 'S' =&gt; "1011001")</default>
      </property>
      <property final="false" static="false" visibility="public" line="252" namespace="global" package="Default">
        <name>$postnet</name>
        <default>array('0' =&gt; "11000", '1' =&gt; "00011", '2' =&gt; "00101", '3' =&gt; "00110", '4' =&gt; "01001", '5' =&gt; "01010", '6' =&gt; "01100", '7' =&gt; "10001", '8' =&gt; "10010", '9' =&gt; "10100")</default>
      </property>
      <property final="false" static="false" visibility="public" line="265" namespace="global" package="Default">
        <name>$kix</name>
        <default>array('0' =&gt; '2233', '1' =&gt; '2103', '2' =&gt; '2130', '3' =&gt; '1203', '4' =&gt; '1230', '5' =&gt; '1100', '6' =&gt; '2013', '7' =&gt; '2323', '8' =&gt; '2310', '9' =&gt; '1023', 'A' =&gt; '1010', 'B' =&gt; '1320', 'C' =&gt; '2031', 'D' =&gt; '2301', 'E' =&gt; '2332', 'F' =&gt; '1001', 'G' =&gt; '1032', 'H' =&gt; '1302', 'I' =&gt; '0213', 'J' =&gt; '0123', 'K' =&gt; '0110', 'L' =&gt; '3223', '2' =&gt; '3210', 'N' =&gt; '3120', 'O' =&gt; '0231', 'P' =&gt; '0101', 'Q' =&gt; '0132', 'R' =&gt; '3201', 'S' =&gt; '3232', 'T' =&gt; '3102', 'U' =&gt; '0011', 'V' =&gt; '0321', 'W' =&gt; '0312', 'X' =&gt; '3021', 'Y' =&gt; '3021', 'Z' =&gt; '3322')</default>
      </property>
      <property final="false" static="false" visibility="public" line="280" namespace="global" package="Default">
        <name>$CMC7</name>
        <default>array(0 =&gt; "0,3-0,22|2,1-2,24|4,0-4,8|4,18-4,25|8,0-8,8|8,18-8,25|12,0-12,8|12,18-12,25|14,1-14,24|16,3-16,22", 1 =&gt; "0,5-0,12|0,17-0,25|4,3-4,10|4,17-4,25|6,2-6,9|6,17-6,25|8,1-8,25|10,0-10,25|14,14-14,25|16,14-16,25", 2 =&gt; "0,2-0,9|0,17-0,25|2,0-2,9|2,16-2,25|6,0-6,6|6,13-6,25|10,0-10,6|10,11-10,17|10,20-10,25|12,0-12,6|12,10-12,16|12,20-12,25|14,0-14,14|14,20-14,25|16,2-16,13|16,20-16,25", 3 =&gt; "0,2-0,9|0,17-0,23|4,0-4,9|4,17-4,25|6,0-6,8|6,18-6,25|10,0-10,7|10,10-10,16|10,19-10,25|12,0-12,7|12,10-12,16|12,19-12,25|14,0-14,25|16,2-16,12|16,14-16,23", 4 =&gt; "0,6-0,21|4,4-4,21|6,3-6,11|6,16-6,21|8,2-8,10|8,16-8,21|12,0-12,8|12,15-12,25|14,0-14,8|14,15-14,25|16,0-16,8|16,15-16,25", 5 =&gt; "0,0-0,14|0,19-0,25|2,0-2,14|2,19-2,25|4,0-4,6|4,9-4,14|4,19-4,25|6,0-6,6|6,9-6,14|6,19-6,25|10,0-10,6|10,9-10,14|10,19-10,25|14,0-14,6|14,9-14,25|16,0-16,6|16,11-16,23", 6 =&gt; "0,2-0,23|2,0-2,25|4,0-4,6|4,10-4,15|4,19-4,25|8,0-8,6|8,10-8,15|8,19-8,25|10,0-10,6|10,10-10,15|10,19-10,25|14,0-14,7|14,10-14,25|16,2-16,7|16,12-16,23", 7 =&gt; "0,0-0,9|0,19-0,25|4,0-4,6|4,16-4,25|8,0-8,6|8,12-8,21|10,0-10,6|10,9-10,19|12,0-12,17|14,0-14,15|16,0-16,13", 8 =&gt; "0,2-0,10|0,15-0,23|2,0-2,11|2,14-2,25|6,0-6,6|6,10-6,15|6,19-6,25|8,0-8,6|8,10-8,15|8,19-8,25|10,0-10,6|10,10-10,15|10,19-10,25|14,0-14,11|14,14-14,25|16,2-16,10|16,15-16,23", 9 =&gt; "0,2-0,13|0,18-0,23|2,0-2,15|2,18-2,25|6,0-6,6|6,10-6,15|6,19-6,25|8,0-8,6|8,10-8,15|8,19-8,25|12,0-12,6|12,10-12,15|12,19-12,25|14,0-14,25|16,2-16,23", 'A' =&gt; "0,4-0,15|0,19-0,24|2,4-2,15|2,19-2,24|4,4-4,15|4,19-4,24|8,4-8,15|8,19-8,24|10,4-10,15|10,19-10,24|12,4-12,15|12,19-12,24|16,4-16,15|16,19-16,24", 'B' =&gt; "0,9-0,24|4,7-4,22|6,6-6,21|8,5-8,20|10,4-10,19|12,3-12,18|16,1-16,16", 'C' =&gt; "0,4-0,12|0,16-0,24|2,4-2,12|2,16-2,24|4,4-4,12|4,16-4,24|6,4-6,12|6,16-6,24|10,7-10,21|12,7-12,21|16,7-16,21", 'D' =&gt; "0,10-0,24|2,10-2,24|6,10-6,24|8,10-8,24|10,4-10,24|12,4-12,24|16,4-16,24", 'E' =&gt; "0,7-0,12|0,16-0,25|2,5-2,23|4,3-4,21|6,1-6,19|8,0-8,18|12,3-12,21|16,7-16,12|16,16-16,25")</default>
      </property>
      <property final="false" static="false" visibility="public" line="298" namespace="global" package="Default">
        <name>$EANbars</name>
        <default>array('A' =&gt; array(0 =&gt; "0001101", 1 =&gt; "0011001", 2 =&gt; "0010011", 3 =&gt; "0111101", 4 =&gt; "0100011", 5 =&gt; "0110001", 6 =&gt; "0101111", 7 =&gt; "0111011", 8 =&gt; "0110111", 9 =&gt; "0001011"), 'B' =&gt; array(0 =&gt; "0100111", 1 =&gt; "0110011", 2 =&gt; "0011011", 3 =&gt; "0100001", 4 =&gt; "0011101", 5 =&gt; "0111001", 6 =&gt; "0000101", 7 =&gt; "0010001", 8 =&gt; "0001001", 9 =&gt; "0010111"), 'C' =&gt; array(0 =&gt; "1110010", 1 =&gt; "1100110", 2 =&gt; "1101100", 3 =&gt; "1000010", 4 =&gt; "1011100", 5 =&gt; "1001110", 6 =&gt; "1010000", 7 =&gt; "1000100", 8 =&gt; "1001000", 9 =&gt; "1110100"))</default>
      </property>
      <property final="false" static="false" visibility="public" line="321" namespace="global" package="Default">
        <name>$EANparity</name>
        <default>array(0 =&gt; array('A', 'A', 'A', 'A', 'A', 'A'), 1 =&gt; array('A', 'A', 'B', 'A', 'B', 'B'), 2 =&gt; array('A', 'A', 'B', 'B', 'A', 'B'), 3 =&gt; array('A', 'A', 'B', 'B', 'B', 'A'), 4 =&gt; array('A', 'B', 'A', 'A', 'B', 'B'), 5 =&gt; array('A', 'B', 'B', 'A', 'A', 'B'), 6 =&gt; array('A', 'B', 'B', 'B', 'A', 'A'), 7 =&gt; array('A', 'B', 'A', 'B', 'A', 'B'), 8 =&gt; array('A', 'B', 'A', 'B', 'B', 'A'), 9 =&gt; array('A', 'B', 'B', 'A', 'B', 'A'))</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="337" package="Default">
        <name>pi_barcode</name>
        <full_name>pi_barcode</full_name>
        <docblock line="334">
          <description>Constructeur // est appelÔøΩ automatiquement ÔøΩ l'instanciation de l'objet</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="359" package="Default">
        <name>setType</name>
        <full_name>setType</full_name>
        <docblock line="356">
          <description>Set Barcode Type</description>
          <long-description/>
        </docblock>
        <argument line="359">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="366" package="Default">
        <name>setCode</name>
        <full_name>setCode</full_name>
        <docblock line="363">
          <description>Set Barcode String</description>
          <long-description/>
        </docblock>
        <argument line="366">
          <name>$code</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="373" package="Default">
        <name>setSize</name>
        <full_name>setSize</full_name>
        <docblock line="370">
          <description>Set Image Height and Extra-Width</description>
          <long-description/>
        </docblock>
        <argument line="373">
          <name>$height</name>
          <default/>
          <type/>
        </argument>
        <argument line="373">
          <name>$width</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="373">
          <name>$calmZone</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="382" package="Default">
        <name>setText</name>
        <full_name>setText</full_name>
        <docblock line="379">
          <description>Set the Printed Text under Bars</description>
          <long-description/>
        </docblock>
        <argument line="382">
          <name>$text</name>
          <default>'AUTO'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="389" package="Default">
        <name>hideCodeType</name>
        <full_name>hideCodeType</full_name>
        <docblock line="386">
          <description>Disable CodeType printing</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="396" package="Default">
        <name>setColors</name>
        <full_name>setColors</full_name>
        <docblock line="393">
          <description>Set Colors</description>
          <long-description/>
        </docblock>
        <argument line="396">
          <name>$fg</name>
          <default/>
          <type/>
        </argument>
        <argument line="396">
          <name>$bg</name>
          <default>'#FFFFFF'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="404" package="Default">
        <name>setFiletype</name>
        <full_name>setFiletype</full_name>
        <docblock line="401">
          <description>Set File Type (PNG, GIF or JPG)</description>
          <long-description/>
        </docblock>
        <argument line="404">
          <name>$ft</name>
          <default>'PNG'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="415" package="Default">
        <name>checkCode</name>
        <full_name>checkCode</full_name>
        <docblock line="410">
          <description>VÔøΩrification du Code</description>
          <long-description>&lt;p&gt;calcul ou vÔøΩrification du Checksum&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="664" package="Default">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="659">
          <description>Encodage</description>
          <long-description>&lt;p&gt;Encode des symboles (a-Z, 0-9, ...) vers des barres&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="962" package="Default">
        <name>showBarcodeImage</name>
        <full_name>showBarcodeImage</full_name>
        <docblock line="959">
          <description>Show Image</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="987" package="Default">
        <name>writeBarcodeFile</name>
        <full_name>writeBarcodeFile</full_name>
        <docblock line="984">
          <description>Save Image</description>
          <long-description/>
        </docblock>
        <argument line="987">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="117" code="50000">No DocBlock was found for \pi_barcode</error>
      <error line="124" code="50018">No DocBlock was found for property $FULLCODE</error>
      <error line="125" code="50018">No DocBlock was found for property $TYPE</error>
      <error line="126" code="50018">No DocBlock was found for property $HEIGHT</error>
      <error line="127" code="50018">No DocBlock was found for property $WIDTH</error>
      <error line="128" code="50018">No DocBlock was found for property $CODEWIDTH</error>
      <error line="129" code="50018">No DocBlock was found for property $CALMZONE</error>
      <error line="130" code="50018">No DocBlock was found for property $HR</error>
      <error line="131" code="50018">No DocBlock was found for property $SHOWTYPE</error>
      <error line="132" code="50018">No DocBlock was found for property $BACKGROUND</error>
      <error line="133" code="50018">No DocBlock was found for property $FOREGROUND</error>
      <error line="134" code="50018">No DocBlock was found for property $FILETYPE</error>
      <error line="135" code="50018">No DocBlock was found for property $ENCODED</error>
      <error line="136" code="50018">No DocBlock was found for property $IH</error>
      <error line="184" code="50018">No DocBlock was found for property $C25</error>
      <error line="194" code="50018">No DocBlock was found for property $C39</error>
      <error line="212" code="50018">No DocBlock was found for property $codabar</error>
      <error line="222" code="50018">No DocBlock was found for property $MSI</error>
      <error line="237" code="50018">No DocBlock was found for property $C11</error>
      <error line="252" code="50018">No DocBlock was found for property $postnet</error>
      <error line="265" code="50018">No DocBlock was found for property $kix</error>
      <error line="280" code="50018">No DocBlock was found for property $CMC7</error>
      <error line="298" code="50018">No DocBlock was found for property $EANbars</error>
      <error line="321" code="50018">No DocBlock was found for property $EANparity</error>
      <error line="356" code="50015">Argument $type is missing from the Docblock of setType()</error>
      <error line="363" code="50015">Argument $code is missing from the Docblock of setCode()</error>
      <error line="370" code="50015">Argument $height is missing from the Docblock of setSize()</error>
      <error line="370" code="50015">Argument $width is missing from the Docblock of setSize()</error>
      <error line="370" code="50015">Argument $calmZone is missing from the Docblock of setSize()</error>
      <error line="379" code="50015">Argument $text is missing from the Docblock of setText()</error>
      <error line="393" code="50015">Argument $fg is missing from the Docblock of setColors()</error>
      <error line="393" code="50015">Argument $bg is missing from the Docblock of setColors()</error>
      <error line="401" code="50015">Argument $ft is missing from the Docblock of setFiletype()</error>
      <error line="984" code="50015">Argument $file is missing from the Docblock of writeBarcodeFile()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="FPDF" full_name="FPDF"/>
  <package name="FrameTool" full_name="FrameTool"/>
  <package name="PHPMailer" full_name="PHPMailer">
    <package name="htmlfilter" full_name="PHPMailer\htmlfilter"/>
  </package>
  <package name="PHPWavUtils" full_name="PHPWavUtils"/>
  <package name="Securimage" full_name="Securimage">
    <package name="classes" full_name="Securimage\classes"/>
  </package>
  <package name="Smarty" full_name="Smarty">
    <package name="Cacher" full_name="Smarty\Cacher"/>
    <package name="Compiler" full_name="Smarty\Compiler"/>
    <package name="Config" full_name="Smarty\Config"/>
    <package name="Debug" full_name="Smarty\Debug"/>
    <package name="PluginsBlock" full_name="Smarty\PluginsBlock"/>
    <package name="PluginsFilter" full_name="Smarty\PluginsFilter"/>
    <package name="PluginsFunction" full_name="Smarty\PluginsFunction"/>
    <package name="PluginsInternal" full_name="Smarty\PluginsInternal"/>
    <package name="PluginsModifier" full_name="Smarty\PluginsModifier"/>
    <package name="PluginsModifierCompiler" full_name="Smarty\PluginsModifierCompiler"/>
    <package name="PluginsShared" full_name="Smarty\PluginsShared"/>
    <package name="Security" full_name="Smarty\Security"/>
    <package name="Template" full_name="Smarty\Template"/>
    <package name="TemplateResources" full_name="Smarty\TemplateResources"/>
  </package>
  <package name="makefont" full_name="makefont">
    <package name="ttfparser" full_name="makefont\ttfparser"/>
  </package>
  <package name="piBarecode" full_name="piBarecode"/>
  <package name="ticketgen" full_name="ticketgen"/>
  <namespace name="global" full_name="global"/>
  <marker count="6">todo</marker>
  <marker count="7">fixme</marker>
  <deprecated count="7"/>
</project>
